{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/strophe.js/dist/strophe.umd.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///external \"OSjs\"","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/hyperapp/src/index.js","webpack:///../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///../node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///../node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///../node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///../node_modules/hyperapp/src/index.js","webpack:///../src/components/Element.js","webpack:///../src/components/Box.js","webpack:///../src/components/BoxContainer.js","webpack:///../src/components/BoxStyled.js","webpack:///../node_modules/@babel/runtime/helpers/typeof.js","webpack:///../src/components/Icon.js","webpack:///../node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///../src/utils.js","webpack:///../src/element.js","webpack:///../src/components/Button.js","webpack:///../src/components/Menu.js","webpack:///../src/components/Toolbar.js","webpack:///../src/components/Statusbar.js","webpack:///../src/components/Menubar.js","webpack:///../node_modules/hyperapp-nestable/src/index.js","webpack:///../src/components/Panes.js","webpack:///../src/components/ListView.js","webpack:///../src/components/Tabs.js","webpack:///../src/components/IconView.js","webpack:///../src/components/TextField.js","webpack:///../src/components/TextareaField.js","webpack:///../node_modules/regenerator-runtime/runtime.js","webpack:///../src/components/Expander.js","webpack:///../src/components/Label.js","webpack:///../node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack:///../node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///../node_modules/@babel/runtime/helpers/createClass.js","webpack:///../src/contextmenu.js","webpack:///../src/provider.js","webpack:///./src/utils.js","webpack:///./src/chat-window.js","webpack:///./src/main-window.js","webpack:///./src/app.js","webpack:///./src/connection-window.js","webpack:///./index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","global$1","global","self","window","_typeof","obj","iterator","constructor","_toConsumableArray","arr","Array","isArray","arr2","length","_arrayWithoutHoles","iter","toString","from","_iterableToArray","TypeError","_nonIterableSpread","safe_add","x","y","lsw","str2binl","str","Error","bin","charCodeAt","md5_cmn","q","a","b","num","cnt","md5_ff","md5_gg","md5_hh","md5_ii","core_md5","len","olda","oldb","oldc","oldd","MD5","hexdigest","binarray","charAt","binl2hex","hash","String","fromCharCode","binl2str","core_sha1","j","olde","w","e","rol","safe_add$1","sha1_ft","sha1_kt","core_hmac_sha1","data","bkey","str2binb","ipad","opad","concat","binb2b64","triplet","binb2str","SHA1","b64_hmac_sha1","b64_sha1","str_hmac_sha1","str_sha1","utils","out","cookies","cookieName","expires","domain","path","cookieObj","isObj","cookieValue","escape","unescape","document","cookie","$build","attrs","Strophe","Builder","$iq","$pres","VERSION","NS","HTTPBIND","BOSH","CLIENT","AUTH","ROSTER","PROFILE","DISCO_INFO","DISCO_ITEMS","MUC","SASL","STREAM","FRAMING","BIND","SESSION","STANZAS","XHTML_IM","XHTML","tags","attributes","css","validTag","tag","validAttribute","attribute","validCSS","style","Status","ERROR","CONNECTING","CONNFAIL","AUTHENTICATING","AUTHFAIL","CONNECTED","DISCONNECTED","DISCONNECTING","ATTACHED","REDIRECT","CONNTIMEOUT","BINDREQUIRED","ErrorCondition","BAD_FORMAT","CONFLICT","MISSING_JID_NODE","NO_AUTH_MECH","UNKNOWN_REASON","LogLevel","DEBUG","INFO","WARN","FATAL","ElementType","NORMAL","TEXT","CDATA","FRAGMENT","TIMEOUT","SECONDARY_TIMEOUT","addNamespace","forEachChild","elem","elemName","func","childNodes","childNode","nodeType","this","isTagEqual","el","tagName","_xmlGenerator","_makeGenerator","doc","undefined","implementation","createDocument","documentMode","_getIEXmlDom","appendChild","createElement","xmlGenerator","docStrings","ActiveXObject","xmlElement","node","arguments","arg","xmlTextNode","sort","attr","setAttribute","k","xmlescape","text","replace","xmlunescape","createTextNode","xmlHtmlNode","html","DOMParser","parseFromString","async","loadXML","getText","nodeValue","copyElement","nodeName","_i","createHtml","toLowerCase","getAttribute","cssText","cssAttrs","split","cssName","cssValue","push","join","_i2","createDocumentFragment","_i3","_i4","escapeNode","unescapeNode","getNodeFromJid","jid","indexOf","getDomainFromJid","bare","getBareJidFromJid","parts","splice","getResourceFromJid","_handleError","stack","fatal","sourceURL","handler","line","message","fileName","lineNumber","log","level","msg","console","error","debug","info","warn","serialize","tree","names","keys","map","result","reduce","getNamedItem","child","_requestId","_connectionPlugins","addConnectionPlugin","ptype","xmlns","nodeTree","up","parentNode","root","moreattrs","removeAttribute","cnode","impNode","xmlGen","importNode","newElem","h","fragment","innerHTML","xhtml","Handler","type","id","options","matchBare","matchBareFromJid","user","getNamespace","elNamespace","ignoreNamespaceFragment","namespaceMatch","_this","nsMatch","isMatch","elem_type","run","TimedHandler","period","lastCalled","Date","getTime","reset","Connection","service","_this2","proto","protocol","_proto","Websocket","Bosh","features","_sasl_data","do_session","do_bind","timedHandlers","handlers","removeTimeds","removeHandlers","addTimeds","addHandlers","protocolErrorHandlers","_idleTimeout","_disconnectTimeout","authenticated","connected","disconnecting","do_authentication","paused","restored","_data","_uniqueId","_sasl_success_handler","_sasl_failure_handler","_sasl_challenge_handler","maxRetries","setTimeout","_onIdle","registerSASLMechanisms","mechanisms","F","init","_reset","_requests","pause","resume","getUniqueId","suffix","uuid","Math","random","addProtocolErrorHandler","status_code","callback","connect","pass","wait","hold","route","authcid","authzid","servtype","connect_callback","_changeConnectStatus","_connect","attach","sid","rid","wind","_attach","restore","_sessionCachingSupported","_restore","JSON","sessionStorage","setItem","removeItem","xmlInput","xmlOutput","rawInput","rawOutput","nextValidRid","send","_queueData","_send","flush","clearTimeout","sendPresence","errback","timeout","_this3","timeoutHandler","addHandler","stanza","deleteTimedHandler","addTimedHandler","deleteHandler","sendIQ","_this4","iqtype","element","_sendRestart","_this5","thand","handRef","hand","SASLAnonymous","SASLExternal","SASLMD5","SASLOAuthBearer","SASLXOAuth2","SASLPlain","SASLSHA1","forEach","registerSASLMechanism","mechanism","disconnect","reason","pres","_addSysTimedHandler","_onDisconnectTimeout","_disconnect","_abortAllRequests","_doDisconnect","status","condition","plugin","statusChanged","err","_dataRecv","req","raw","_this6","_reqToData","strip","pop","_emptyQueue","cond","conflict","getElementsByTagName","UNKOWN_REASON","newList","_i5","_hand","_connect_cb","_callback","bodyWrap","getElementsByTagNameNS","matched","mech","authenticate","_no_auth_received","sortMechanismsByPriority","higher","priority","swap","_attemptSASLAuth","_attemptLegacyAuth","mechanism_found","test","_addSysHandler","_sasl_success_cb","_sasl_failure_cb","_sasl_challenge_cb","_sasl_mechanism","onStart","request_auth_exchange","isClientFirst","response","onChallenge","btoa","challenge","atob","_onLegacyAuthIQResult","iq","_auth2_cb","_this7","serverSignature","matches","match","onSuccess","streamfeature_handlers","wrapper","_onStreamFeaturesAfterSASL","explicitResourceBinding","_onResourceBindResultIQ","resource","jidNode","_establishSession","_onSessionResultIQ","onFailure","_this8","now","_i6","_thand","SASLMechanism","connection","_connection","auth_str","test_cnonce","cnonce","nonce","salt","Hi","U","U_old","responseText","authMessage","attribMatch","substr","clientKey","serverKey","clientSignature","_quote","realm","host","digest_uri","cred","A1","A2","core","Strophe$1","$build$1","Request","sends","xmlData","origFunc","date","NaN","abort","dead","age","timeDead","xhr","_newXHR","getResponse","responseXML","documentElement","querySelector","textContent","XMLHttpRequest","overrideMimeType","onreadystatechange","_conn","floor","errors","inactivity","lastResponseHeaders","_buildBody","keepalive","_cacheSession","body","_onRequestStateChange","_throttledRequestHandler","session","parse","getItem","stringify","typ","parseInt","_sendTerminate","_callProtocolErrorHandlers","reqStatus","_getRequestStatus","err_callback","HTTP","_hitError","time_elapsed","def","readyState","getAllResponseHeaders","valid_request","too_many_retries","_removeRequest","reqIs0","_restartRequest","Number","_processRequest","primary_timeout","isNaN","secondary_timeout","server_error","content_type","contentType","open","sync","setRequestHeader","withCredentials","e2","sendFunc","customHeaders","headers","header","backoff","min","pow","abs","Strophe$2","$build$2","new_service","location","pathname","_buildStream","_check_streamerror","connectstatus","errorString","_closeSocket","socket","WebSocket","onopen","_onOpen","onerror","_onError","onclose","_onClose","onmessage","_connect_cb_wrapper","_handleStreamStart","ver","streamStart","parsedMessage","see_uri","string","_streamWrap","_onMessage","CLOSED","close","closeString","code","rawStanza","search","firstChild","start","startString","$msg","factory","arrayWithoutHoles","iterableToArray","nonIterableSpread","OSjs","g","Function","rest","children","app","state","actions","view","container","skipRender","rootElement","oldNode","recycleElement","lifecycle","isRecycling","globalState","clone","wiredActions","wireStateToActions","action","getPartialState","then","scheduleRender","setPartialState","resolveNode","render","patch","parent","isSvg","newElement","createElementNS","oncreate","updateAttribute","insertBefore","removeElement","oldAttributes","cb","onupdate","updateElement","oldKeyed","newKeyed","oldElements","oldChildren","oldKey","getKey","newKey","keyedNode","target","source","slice","eventListener","event","currentTarget","events","oldValue","setProperty","addEventListener","removeEventListener","done","removeChild","removeChildren","ondestroy","onremove","f","unitValue","boxPropNames","grow","flexGrow","shrink","flexShrink","basis","flexBasis","align","alignItems","justify","justifyContent","padding","margin","Element","givenClassNames","props","classNames","defaultStyle","Box","orientation","BoxContainer","BoxStyled","Icon","backgroundImage","configurable","writable","filteredProps","filterKeys","doubleTap","tapped","timer","ev","createField","oninput","onchange","onkeydown","getValue","cbInput","fieldProps","Button","inner","icon","label","Menu","className","display","top","left","ul","checked","items","onmouseover","ontouchend","onclick","Toolbar","Statusbar","MenubarItem","index","Menubar","item","nestable","tagname","class","wired","v","panes","spacers","onmousedown","clientX","clientY","pane","offsetWidth","offsetHeight","maxWidth","maxHeight","mousemove","size","diffX","diffY","mouseup","flex","tapper","sizes","setSize","ListView","cols","col","row","selected","colIcon","ontouchstart","ondblclick","oncontextmenu","zebra","createView","listView","newProps","columns","rows","onselect","onactivate","selectedIndex","scrollTop","select","activate","contextmenu","created","setRows","setColumns","setScrollTop","setSelectedIndex","labels","TextField","autocomplete","autocorrect","autocapitalize","spellcheck","TextareaField","active","ative","ontoggle","runtime","protoGenerator","outerFn","generator","context","tryLocsList","makeInvokeMethod","fn","_invoke","record","tryCatch","hasOwn","Promise","invoke","resolve","reject","previousPromise","callInvokeWithMethodAndArg","doneResult","delegate","delegateResult","maybeInvokeDelegate","method","ContinueSentinel","entry","tryLoc","locs","tryEntries","iteratorMethod","iterable","next","Op","$Symbol","iteratorSymbol","asyncIteratorSymbol","toStringTagSymbol","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","ctor","genFun","setPrototypeOf","__await","defineIteratorMethods","AsyncIterator","wrap","Context","prev","sent","_sent","stop","rootRecord","rval","dispatchException","exception","loc","caught","handle","hasCatch","hasFinally","abrupt","finallyEntry","complete","afterLoc","finish","resetTryEntry","thrown","delegateYield","resultName","nextLoc","regeneratorRuntime","asyncGeneratorStep","gen","args","_next","instance","_defineProperties","descriptor","protoProps","Constructor","staticProps","ContextMenu","$element","$root","isActive","visible","menu","position","clamp","newPosition","bottom","currentPosition","right","offY","offX","overflowRight","overflowBottom","clampMenu","onshow","clampTimeout","offsetParent","rect","clampSubMenu","show","toggle","box","hide","validContextMenuTarget","isValid","destroy","contextmenuApi","once","availabilities","chat","busy","away","offline","invisible","domFromString","getAvailabilityText","availability","getUsername","getMessageText","ChatMessage","createChatWindow","proc","bus","format","make","win","createWindow","title","metadata","dimension","width","height","messages","to","getLastStamp","last","placeholder","onenter","shiftKey","typing","$content","typeStatusTimeout","textarea","trim","createMessage","sendMessage","addMessage","setTypeStatus","emit","on","scrollHeight","createStatusMenuItem","disabled","menuSetStatus","createFileMenu","menuOptions","menuConnect","menuDisconnect","menuQuit","createStatusMenu","createMainWindow","en_EN","closeable","visibility","ContactView","contacts","menuFile","menuStatus","find","getContacts","setAvailability","getStatus","setStatus","contact","xphoto","photo","parsePresence","foundIndex","findIndex","createApplication","settings","tray","raise","focus","onDisconnect","findChatWindow","windows","findOrCreateChatWindow","chatWindow","username","sessionable","setHost","setUsername","password","setPassword","assign","createConnectionWindow","isTyping","isPaused","isMessage","saveSettings","createConnection","off","every","osjs","register","applicationName"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","(function (global, factory) {\n            typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n            typeof define === 'function' && define.amd ? define(factory) :\n            (global = global || self, global.strophe = factory());\n}(this, function () { 'use strict';\n\n            var global$1 = (typeof global !== \"undefined\" ? global :\n                        typeof self !== \"undefined\" ? self :\n                        typeof window !== \"undefined\" ? window : {});\n\n            function _typeof(obj) {\n              if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n                _typeof = function (obj) {\n                  return typeof obj;\n                };\n              } else {\n                _typeof = function (obj) {\n                  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n                };\n              }\n\n              return _typeof(obj);\n            }\n\n            function _toConsumableArray(arr) {\n              return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n            }\n\n            function _arrayWithoutHoles(arr) {\n              if (Array.isArray(arr)) {\n                for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n                return arr2;\n              }\n            }\n\n            function _iterableToArray(iter) {\n              if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n            }\n\n            function _nonIterableSpread() {\n              throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n            }\n\n            /*\n             * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n             * Digest Algorithm, as defined in RFC 1321.\n             * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.\n             * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n             * Distributed under the BSD License\n             * See http://pajhome.org.uk/crypt/md5 for more info.\n             */\n\n            /*\n             * Everything that isn't used by Strophe has been stripped here!\n             */\n\n            /*\n             * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n             * to work around bugs in some JS interpreters.\n             */\n            var safe_add = function safe_add(x, y) {\n              var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n              var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n              return msw << 16 | lsw & 0xFFFF;\n            };\n            /*\n             * Bitwise rotate a 32-bit number to the left.\n             */\n\n\n            var bit_rol = function bit_rol(num, cnt) {\n              return num << cnt | num >>> 32 - cnt;\n            };\n            /*\n             * Convert a string to an array of little-endian words\n             */\n\n\n            var str2binl = function str2binl(str) {\n              if (typeof str !== \"string\") {\n                throw new Error(\"str2binl was passed a non-string\");\n              }\n\n              var bin = [];\n\n              for (var i = 0; i < str.length * 8; i += 8) {\n                bin[i >> 5] |= (str.charCodeAt(i / 8) & 255) << i % 32;\n              }\n\n              return bin;\n            };\n            /*\n             * Convert an array of little-endian words to a string\n             */\n\n\n            var binl2str = function binl2str(bin) {\n              var str = \"\";\n\n              for (var i = 0; i < bin.length * 32; i += 8) {\n                str += String.fromCharCode(bin[i >> 5] >>> i % 32 & 255);\n              }\n\n              return str;\n            };\n            /*\n             * Convert an array of little-endian words to a hex string.\n             */\n\n\n            var binl2hex = function binl2hex(binarray) {\n              var hex_tab = \"0123456789abcdef\";\n              var str = \"\";\n\n              for (var i = 0; i < binarray.length * 4; i++) {\n                str += hex_tab.charAt(binarray[i >> 2] >> i % 4 * 8 + 4 & 0xF) + hex_tab.charAt(binarray[i >> 2] >> i % 4 * 8 & 0xF);\n              }\n\n              return str;\n            };\n            /*\n             * These functions implement the four basic operations the algorithm uses.\n             */\n\n\n            var md5_cmn = function md5_cmn(q, a, b, x, s, t) {\n              return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);\n            };\n\n            var md5_ff = function md5_ff(a, b, c, d, x, s, t) {\n              return md5_cmn(b & c | ~b & d, a, b, x, s, t);\n            };\n\n            var md5_gg = function md5_gg(a, b, c, d, x, s, t) {\n              return md5_cmn(b & d | c & ~d, a, b, x, s, t);\n            };\n\n            var md5_hh = function md5_hh(a, b, c, d, x, s, t) {\n              return md5_cmn(b ^ c ^ d, a, b, x, s, t);\n            };\n\n            var md5_ii = function md5_ii(a, b, c, d, x, s, t) {\n              return md5_cmn(c ^ (b | ~d), a, b, x, s, t);\n            };\n            /*\n             * Calculate the MD5 of an array of little-endian words, and a bit length\n             */\n\n\n            var core_md5 = function core_md5(x, len) {\n              /* append padding */\n              x[len >> 5] |= 0x80 << len % 32;\n              x[(len + 64 >>> 9 << 4) + 14] = len;\n              var a = 1732584193;\n              var b = -271733879;\n              var c = -1732584194;\n              var d = 271733878;\n              var olda, oldb, oldc, oldd;\n\n              for (var i = 0; i < x.length; i += 16) {\n                olda = a;\n                oldb = b;\n                oldc = c;\n                oldd = d;\n                a = md5_ff(a, b, c, d, x[i + 0], 7, -680876936);\n                d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);\n                c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);\n                b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);\n                a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);\n                d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);\n                c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);\n                b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);\n                a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);\n                d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);\n                c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);\n                b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);\n                a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);\n                d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);\n                c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);\n                b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);\n                a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);\n                d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);\n                c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);\n                b = md5_gg(b, c, d, a, x[i + 0], 20, -373897302);\n                a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);\n                d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);\n                c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);\n                b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);\n                a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);\n                d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);\n                c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);\n                b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);\n                a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);\n                d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);\n                c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);\n                b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);\n                a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);\n                d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);\n                c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);\n                b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);\n                a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);\n                d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);\n                c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);\n                b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);\n                a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);\n                d = md5_hh(d, a, b, c, x[i + 0], 11, -358537222);\n                c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);\n                b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);\n                a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);\n                d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);\n                c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);\n                b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);\n                a = md5_ii(a, b, c, d, x[i + 0], 6, -198630844);\n                d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);\n                c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);\n                b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);\n                a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);\n                d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);\n                c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);\n                b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);\n                a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);\n                d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);\n                c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);\n                b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);\n                a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);\n                d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);\n                c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);\n                b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);\n                a = safe_add(a, olda);\n                b = safe_add(b, oldb);\n                c = safe_add(c, oldc);\n                d = safe_add(d, oldd);\n              }\n\n              return [a, b, c, d];\n            };\n            /*\n             * These are the functions you'll usually want to call.\n             * They take string arguments and return either hex or base-64 encoded\n             * strings.\n             */\n\n\n            var MD5 = {\n              hexdigest: function hexdigest(s) {\n                return binl2hex(core_md5(str2binl(s), s.length * 8));\n              },\n              hash: function hash(s) {\n                return binl2str(core_md5(str2binl(s), s.length * 8));\n              }\n            };\n\n            /*\n             * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n             * in FIPS PUB 180-1\n             * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n             * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n             * Distributed under the BSD License\n             * See http://pajhome.org.uk/crypt/md5 for details.\n             */\n\n            /* global define */\n\n            /* Some functions and variables have been stripped for use with Strophe */\n\n            /*\n             * Calculate the SHA-1 of an array of big-endian words, and a bit length\n             */\n            function core_sha1(x, len) {\n              /* append padding */\n              x[len >> 5] |= 0x80 << 24 - len % 32;\n              x[(len + 64 >> 9 << 4) + 15] = len;\n              var w = new Array(80);\n              var a = 1732584193;\n              var b = -271733879;\n              var c = -1732584194;\n              var d = 271733878;\n              var e = -1009589776;\n              var i, j, t, olda, oldb, oldc, oldd, olde;\n\n              for (i = 0; i < x.length; i += 16) {\n                olda = a;\n                oldb = b;\n                oldc = c;\n                oldd = d;\n                olde = e;\n\n                for (j = 0; j < 80; j++) {\n                  if (j < 16) {\n                    w[j] = x[i + j];\n                  } else {\n                    w[j] = rol(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n                  }\n\n                  t = safe_add$1(safe_add$1(rol(a, 5), sha1_ft(j, b, c, d)), safe_add$1(safe_add$1(e, w[j]), sha1_kt(j)));\n                  e = d;\n                  d = c;\n                  c = rol(b, 30);\n                  b = a;\n                  a = t;\n                }\n\n                a = safe_add$1(a, olda);\n                b = safe_add$1(b, oldb);\n                c = safe_add$1(c, oldc);\n                d = safe_add$1(d, oldd);\n                e = safe_add$1(e, olde);\n              }\n\n              return [a, b, c, d, e];\n            }\n            /*\n             * Perform the appropriate triplet combination function for the current\n             * iteration\n             */\n\n\n            function sha1_ft(t, b, c, d) {\n              if (t < 20) {\n                return b & c | ~b & d;\n              }\n\n              if (t < 40) {\n                return b ^ c ^ d;\n              }\n\n              if (t < 60) {\n                return b & c | b & d | c & d;\n              }\n\n              return b ^ c ^ d;\n            }\n            /*\n             * Determine the appropriate additive constant for the current iteration\n             */\n\n\n            function sha1_kt(t) {\n              return t < 20 ? 1518500249 : t < 40 ? 1859775393 : t < 60 ? -1894007588 : -899497514;\n            }\n            /*\n             * Calculate the HMAC-SHA1 of a key and some data\n             */\n\n\n            function core_hmac_sha1(key, data) {\n              var bkey = str2binb(key);\n\n              if (bkey.length > 16) {\n                bkey = core_sha1(bkey, key.length * 8);\n              }\n\n              var ipad = new Array(16),\n                  opad = new Array(16);\n\n              for (var i = 0; i < 16; i++) {\n                ipad[i] = bkey[i] ^ 0x36363636;\n                opad[i] = bkey[i] ^ 0x5C5C5C5C;\n              }\n\n              var hash = core_sha1(ipad.concat(str2binb(data)), 512 + data.length * 8);\n              return core_sha1(opad.concat(hash), 512 + 160);\n            }\n            /*\n             * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n             * to work around bugs in some JS interpreters.\n             */\n\n\n            function safe_add$1(x, y) {\n              var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n              var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n              return msw << 16 | lsw & 0xFFFF;\n            }\n            /*\n             * Bitwise rotate a 32-bit number to the left.\n             */\n\n\n            function rol(num, cnt) {\n              return num << cnt | num >>> 32 - cnt;\n            }\n            /*\n             * Convert an 8-bit or 16-bit string to an array of big-endian words\n             * In 8-bit function, characters >255 have their hi-byte silently ignored.\n             */\n\n\n            function str2binb(str) {\n              var bin = [];\n              var mask = 255;\n\n              for (var i = 0; i < str.length * 8; i += 8) {\n                bin[i >> 5] |= (str.charCodeAt(i / 8) & mask) << 24 - i % 32;\n              }\n\n              return bin;\n            }\n            /*\n             * Convert an array of big-endian words to a base-64 string\n             */\n\n\n            function binb2b64(binarray) {\n              var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n              var str = \"\";\n              var triplet, j;\n\n              for (var i = 0; i < binarray.length * 4; i += 3) {\n                triplet = (binarray[i >> 2] >> 8 * (3 - i % 4) & 0xFF) << 16 | (binarray[i + 1 >> 2] >> 8 * (3 - (i + 1) % 4) & 0xFF) << 8 | binarray[i + 2 >> 2] >> 8 * (3 - (i + 2) % 4) & 0xFF;\n\n                for (j = 0; j < 4; j++) {\n                  if (i * 8 + j * 6 > binarray.length * 32) {\n                    str += \"=\";\n                  } else {\n                    str += tab.charAt(triplet >> 6 * (3 - j) & 0x3F);\n                  }\n                }\n              }\n\n              return str;\n            }\n            /*\n             * Convert an array of big-endian words to a string\n             */\n\n\n            function binb2str(bin) {\n              var str = \"\";\n              var mask = 255;\n\n              for (var i = 0; i < bin.length * 32; i += 8) {\n                str += String.fromCharCode(bin[i >> 5] >>> 24 - i % 32 & mask);\n              }\n\n              return str;\n            }\n            /*\n             * These are the functions you'll usually want to call\n             * They take string arguments and return either hex or base-64 encoded strings\n             */\n\n\n            var SHA1 = {\n              b64_hmac_sha1: function b64_hmac_sha1(key, data) {\n                return binb2b64(core_hmac_sha1(key, data));\n              },\n              b64_sha1: function b64_sha1(s) {\n                return binb2b64(core_sha1(str2binb(s), s.length * 8));\n              },\n              binb2str: binb2str,\n              core_hmac_sha1: core_hmac_sha1,\n              str_hmac_sha1: function str_hmac_sha1(key, data) {\n                return binb2str(core_hmac_sha1(key, data));\n              },\n              str_sha1: function str_sha1(s) {\n                return binb2str(core_sha1(str2binb(s), s.length * 8));\n              }\n            };\n\n            var utils = {\n              utf16to8: function utf16to8(str) {\n                var i, c;\n                var out = \"\";\n                var len = str.length;\n\n                for (i = 0; i < len; i++) {\n                  c = str.charCodeAt(i);\n\n                  if (c >= 0x0000 && c <= 0x007F) {\n                    out += str.charAt(i);\n                  } else if (c > 0x07FF) {\n                    out += String.fromCharCode(0xE0 | c >> 12 & 0x0F);\n                    out += String.fromCharCode(0x80 | c >> 6 & 0x3F);\n                    out += String.fromCharCode(0x80 | c >> 0 & 0x3F);\n                  } else {\n                    out += String.fromCharCode(0xC0 | c >> 6 & 0x1F);\n                    out += String.fromCharCode(0x80 | c >> 0 & 0x3F);\n                  }\n                }\n\n                return out;\n              },\n              addCookies: function addCookies(cookies) {\n                /* Parameters:\n                 *  (Object) cookies - either a map of cookie names\n                 *    to string values or to maps of cookie values.\n                 *\n                 * For example:\n                 * { \"myCookie\": \"1234\" }\n                 *\n                 * or:\n                 * { \"myCookie\": {\n                 *      \"value\": \"1234\",\n                 *      \"domain\": \".example.org\",\n                 *      \"path\": \"/\",\n                 *      \"expires\": expirationDate\n                 *      }\n                 *  }\n                 *\n                 *  These values get passed to Strophe.Connection via\n                 *   options.cookies\n                 */\n                cookies = cookies || {};\n\n                for (var cookieName in cookies) {\n                  if (Object.prototype.hasOwnProperty.call(cookies, cookieName)) {\n                    var expires = '';\n                    var domain = '';\n                    var path = '';\n                    var cookieObj = cookies[cookieName];\n                    var isObj = _typeof(cookieObj) === \"object\";\n                    var cookieValue = escape(unescape(isObj ? cookieObj.value : cookieObj));\n\n                    if (isObj) {\n                      expires = cookieObj.expires ? \";expires=\" + cookieObj.expires : '';\n                      domain = cookieObj.domain ? \";domain=\" + cookieObj.domain : '';\n                      path = cookieObj.path ? \";path=\" + cookieObj.path : '';\n                    }\n\n                    document.cookie = cookieName + '=' + cookieValue + expires + domain + path;\n                  }\n                }\n              }\n            };\n\n            /** Function: $build\n             *  Create a Strophe.Builder.\n             *  This is an alias for 'new Strophe.Builder(name, attrs)'.\n             *\n             *  Parameters:\n             *    (String) name - The root element name.\n             *    (Object) attrs - The attributes for the root element in object notation.\n             *\n             *  Returns:\n             *    A new Strophe.Builder object.\n             */\n\n            function $build(name, attrs) {\n              return new Strophe.Builder(name, attrs);\n            }\n            /** Function: $msg\n             *  Create a Strophe.Builder with a <message/> element as the root.\n             *\n             *  Parameters:\n             *    (Object) attrs - The <message/> element attributes in object notation.\n             *\n             *  Returns:\n             *    A new Strophe.Builder object.\n             */\n\n\n            function $msg(attrs) {\n              return new Strophe.Builder(\"message\", attrs);\n            }\n            /** Function: $iq\n             *  Create a Strophe.Builder with an <iq/> element as the root.\n             *\n             *  Parameters:\n             *    (Object) attrs - The <iq/> element attributes in object notation.\n             *\n             *  Returns:\n             *    A new Strophe.Builder object.\n             */\n\n\n            function $iq(attrs) {\n              return new Strophe.Builder(\"iq\", attrs);\n            }\n            /** Function: $pres\n             *  Create a Strophe.Builder with a <presence/> element as the root.\n             *\n             *  Parameters:\n             *    (Object) attrs - The <presence/> element attributes in object notation.\n             *\n             *  Returns:\n             *    A new Strophe.Builder object.\n             */\n\n\n            function $pres(attrs) {\n              return new Strophe.Builder(\"presence\", attrs);\n            }\n            /** Class: Strophe\n             *  An object container for all Strophe library functions.\n             *\n             *  This class is just a container for all the objects and constants\n             *  used in the library.  It is not meant to be instantiated, but to\n             *  provide a namespace for library objects, constants, and functions.\n             */\n\n\n            var Strophe = {\n              /** Constant: VERSION */\n              VERSION: \"@VERSION@\",\n\n              /** Constants: XMPP Namespace Constants\n               *  Common namespace constants from the XMPP RFCs and XEPs.\n               *\n               *  NS.HTTPBIND - HTTP BIND namespace from XEP 124.\n               *  NS.BOSH - BOSH namespace from XEP 206.\n               *  NS.CLIENT - Main XMPP client namespace.\n               *  NS.AUTH - Legacy authentication namespace.\n               *  NS.ROSTER - Roster operations namespace.\n               *  NS.PROFILE - Profile namespace.\n               *  NS.DISCO_INFO - Service discovery info namespace from XEP 30.\n               *  NS.DISCO_ITEMS - Service discovery items namespace from XEP 30.\n               *  NS.MUC - Multi-User Chat namespace from XEP 45.\n               *  NS.SASL - XMPP SASL namespace from RFC 3920.\n               *  NS.STREAM - XMPP Streams namespace from RFC 3920.\n               *  NS.BIND - XMPP Binding namespace from RFC 3920 and RFC 6120.\n               *  NS.SESSION - XMPP Session namespace from RFC 3920.\n               *  NS.XHTML_IM - XHTML-IM namespace from XEP 71.\n               *  NS.XHTML - XHTML body namespace from XEP 71.\n               */\n              NS: {\n                HTTPBIND: \"http://jabber.org/protocol/httpbind\",\n                BOSH: \"urn:xmpp:xbosh\",\n                CLIENT: \"jabber:client\",\n                AUTH: \"jabber:iq:auth\",\n                ROSTER: \"jabber:iq:roster\",\n                PROFILE: \"jabber:iq:profile\",\n                DISCO_INFO: \"http://jabber.org/protocol/disco#info\",\n                DISCO_ITEMS: \"http://jabber.org/protocol/disco#items\",\n                MUC: \"http://jabber.org/protocol/muc\",\n                SASL: \"urn:ietf:params:xml:ns:xmpp-sasl\",\n                STREAM: \"http://etherx.jabber.org/streams\",\n                FRAMING: \"urn:ietf:params:xml:ns:xmpp-framing\",\n                BIND: \"urn:ietf:params:xml:ns:xmpp-bind\",\n                SESSION: \"urn:ietf:params:xml:ns:xmpp-session\",\n                VERSION: \"jabber:iq:version\",\n                STANZAS: \"urn:ietf:params:xml:ns:xmpp-stanzas\",\n                XHTML_IM: \"http://jabber.org/protocol/xhtml-im\",\n                XHTML: \"http://www.w3.org/1999/xhtml\"\n              },\n\n              /** Constants: XHTML_IM Namespace\n               *  contains allowed tags, tag attributes, and css properties.\n               *  Used in the createHtml function to filter incoming html into the allowed XHTML-IM subset.\n               *  See http://xmpp.org/extensions/xep-0071.html#profile-summary for the list of recommended\n               *  allowed tags and their attributes.\n               */\n              XHTML: {\n                tags: ['a', 'blockquote', 'br', 'cite', 'em', 'img', 'li', 'ol', 'p', 'span', 'strong', 'ul', 'body'],\n                attributes: {\n                  'a': ['href'],\n                  'blockquote': ['style'],\n                  'br': [],\n                  'cite': ['style'],\n                  'em': [],\n                  'img': ['src', 'alt', 'style', 'height', 'width'],\n                  'li': ['style'],\n                  'ol': ['style'],\n                  'p': ['style'],\n                  'span': ['style'],\n                  'strong': [],\n                  'ul': ['style'],\n                  'body': []\n                },\n                css: ['background-color', 'color', 'font-family', 'font-size', 'font-style', 'font-weight', 'margin-left', 'margin-right', 'text-align', 'text-decoration'],\n\n                /** Function: XHTML.validTag\n                 *\n                 * Utility method to determine whether a tag is allowed\n                 * in the XHTML_IM namespace.\n                 *\n                 * XHTML tag names are case sensitive and must be lower case.\n                 */\n                validTag: function validTag(tag) {\n                  for (var i = 0; i < Strophe.XHTML.tags.length; i++) {\n                    if (tag === Strophe.XHTML.tags[i]) {\n                      return true;\n                    }\n                  }\n\n                  return false;\n                },\n\n                /** Function: XHTML.validAttribute\n                 *\n                 * Utility method to determine whether an attribute is allowed\n                 * as recommended per XEP-0071\n                 *\n                 * XHTML attribute names are case sensitive and must be lower case.\n                 */\n                validAttribute: function validAttribute(tag, attribute) {\n                  if (typeof Strophe.XHTML.attributes[tag] !== 'undefined' && Strophe.XHTML.attributes[tag].length > 0) {\n                    for (var i = 0; i < Strophe.XHTML.attributes[tag].length; i++) {\n                      if (attribute === Strophe.XHTML.attributes[tag][i]) {\n                        return true;\n                      }\n                    }\n                  }\n\n                  return false;\n                },\n                validCSS: function validCSS(style) {\n                  for (var i = 0; i < Strophe.XHTML.css.length; i++) {\n                    if (style === Strophe.XHTML.css[i]) {\n                      return true;\n                    }\n                  }\n\n                  return false;\n                }\n              },\n\n              /** Constants: Connection Status Constants\n               *  Connection status constants for use by the connection handler\n               *  callback.\n               *\n               *  Status.ERROR - An error has occurred\n               *  Status.CONNECTING - The connection is currently being made\n               *  Status.CONNFAIL - The connection attempt failed\n               *  Status.AUTHENTICATING - The connection is authenticating\n               *  Status.AUTHFAIL - The authentication attempt failed\n               *  Status.CONNECTED - The connection has succeeded\n               *  Status.DISCONNECTED - The connection has been terminated\n               *  Status.DISCONNECTING - The connection is currently being terminated\n               *  Status.ATTACHED - The connection has been attached\n               *  Status.REDIRECT - The connection has been redirected\n               *  Status.CONNTIMEOUT - The connection has timed out\n               */\n              Status: {\n                ERROR: 0,\n                CONNECTING: 1,\n                CONNFAIL: 2,\n                AUTHENTICATING: 3,\n                AUTHFAIL: 4,\n                CONNECTED: 5,\n                DISCONNECTED: 6,\n                DISCONNECTING: 7,\n                ATTACHED: 8,\n                REDIRECT: 9,\n                CONNTIMEOUT: 10,\n                BINDREQUIRED: 11\n              },\n              ErrorCondition: {\n                BAD_FORMAT: \"bad-format\",\n                CONFLICT: \"conflict\",\n                MISSING_JID_NODE: \"x-strophe-bad-non-anon-jid\",\n                NO_AUTH_MECH: \"no-auth-mech\",\n                UNKNOWN_REASON: \"unknown\"\n              },\n\n              /** Constants: Log Level Constants\n               *  Logging level indicators.\n               *\n               *  LogLevel.DEBUG - Debug output\n               *  LogLevel.INFO - Informational output\n               *  LogLevel.WARN - Warnings\n               *  LogLevel.ERROR - Errors\n               *  LogLevel.FATAL - Fatal errors\n               */\n              LogLevel: {\n                DEBUG: 0,\n                INFO: 1,\n                WARN: 2,\n                ERROR: 3,\n                FATAL: 4\n              },\n\n              /** PrivateConstants: DOM Element Type Constants\n               *  DOM element types.\n               *\n               *  ElementType.NORMAL - Normal element.\n               *  ElementType.TEXT - Text data element.\n               *  ElementType.FRAGMENT - XHTML fragment element.\n               */\n              ElementType: {\n                NORMAL: 1,\n                TEXT: 3,\n                CDATA: 4,\n                FRAGMENT: 11\n              },\n\n              /** PrivateConstants: Timeout Values\n               *  Timeout values for error states.  These values are in seconds.\n               *  These should not be changed unless you know exactly what you are\n               *  doing.\n               *\n               *  TIMEOUT - Timeout multiplier. A waiting request will be considered\n               *      failed after Math.floor(TIMEOUT * wait) seconds have elapsed.\n               *      This defaults to 1.1, and with default wait, 66 seconds.\n               *  SECONDARY_TIMEOUT - Secondary timeout multiplier. In cases where\n               *      Strophe can detect early failure, it will consider the request\n               *      failed if it doesn't return after\n               *      Math.floor(SECONDARY_TIMEOUT * wait) seconds have elapsed.\n               *      This defaults to 0.1, and with default wait, 6 seconds.\n               */\n              TIMEOUT: 1.1,\n              SECONDARY_TIMEOUT: 0.1,\n\n              /** Function: addNamespace\n               *  This function is used to extend the current namespaces in\n               *  Strophe.NS.  It takes a key and a value with the key being the\n               *  name of the new namespace, with its actual value.\n               *  For example:\n               *  Strophe.addNamespace('PUBSUB', \"http://jabber.org/protocol/pubsub\");\n               *\n               *  Parameters:\n               *    (String) name - The name under which the namespace will be\n               *      referenced under Strophe.NS\n               *    (String) value - The actual namespace.\n               */\n              addNamespace: function addNamespace(name, value) {\n                Strophe.NS[name] = value;\n              },\n\n              /** Function: forEachChild\n               *  Map a function over some or all child elements of a given element.\n               *\n               *  This is a small convenience function for mapping a function over\n               *  some or all of the children of an element.  If elemName is null, all\n               *  children will be passed to the function, otherwise only children\n               *  whose tag names match elemName will be passed.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The element to operate on.\n               *    (String) elemName - The child element tag name filter.\n               *    (Function) func - The function to apply to each child.  This\n               *      function should take a single argument, a DOM element.\n               */\n              forEachChild: function forEachChild(elem, elemName, func) {\n                for (var i = 0; i < elem.childNodes.length; i++) {\n                  var childNode = elem.childNodes[i];\n\n                  if (childNode.nodeType === Strophe.ElementType.NORMAL && (!elemName || this.isTagEqual(childNode, elemName))) {\n                    func(childNode);\n                  }\n                }\n              },\n\n              /** Function: isTagEqual\n               *  Compare an element's tag name with a string.\n               *\n               *  This function is case sensitive.\n               *\n               *  Parameters:\n               *    (XMLElement) el - A DOM element.\n               *    (String) name - The element name.\n               *\n               *  Returns:\n               *    true if the element's tag name matches _el_, and false\n               *    otherwise.\n               */\n              isTagEqual: function isTagEqual(el, name) {\n                return el.tagName === name;\n              },\n\n              /** PrivateVariable: _xmlGenerator\n               *  _Private_ variable that caches a DOM document to\n               *  generate elements.\n               */\n              _xmlGenerator: null,\n\n              /** PrivateFunction: _makeGenerator\n               *  _Private_ function that creates a dummy XML DOM document to serve as\n               *  an element and text node generator.\n               */\n              _makeGenerator: function _makeGenerator() {\n                var doc; // IE9 does implement createDocument(); however, using it will cause the browser to leak memory on page unload.\n                // Here, we test for presence of createDocument() plus IE's proprietary documentMode attribute, which would be\n                // less than 10 in the case of IE9 and below.\n\n                if (document.implementation.createDocument === undefined || document.implementation.createDocument && document.documentMode && document.documentMode < 10) {\n                  doc = this._getIEXmlDom();\n                  doc.appendChild(doc.createElement('strophe'));\n                } else {\n                  doc = document.implementation.createDocument('jabber:client', 'strophe', null);\n                }\n\n                return doc;\n              },\n\n              /** Function: xmlGenerator\n               *  Get the DOM document to generate elements.\n               *\n               *  Returns:\n               *    The currently used DOM document.\n               */\n              xmlGenerator: function xmlGenerator() {\n                if (!Strophe._xmlGenerator) {\n                  Strophe._xmlGenerator = Strophe._makeGenerator();\n                }\n\n                return Strophe._xmlGenerator;\n              },\n\n              /** PrivateFunction: _getIEXmlDom\n               *  Gets IE xml doc object\n               *\n               *  Returns:\n               *    A Microsoft XML DOM Object\n               *  See Also:\n               *    http://msdn.microsoft.com/en-us/library/ms757837%28VS.85%29.aspx\n               */\n              _getIEXmlDom: function _getIEXmlDom() {\n                var doc = null;\n                var docStrings = [\"Msxml2.DOMDocument.6.0\", \"Msxml2.DOMDocument.5.0\", \"Msxml2.DOMDocument.4.0\", \"MSXML2.DOMDocument.3.0\", \"MSXML2.DOMDocument\", \"MSXML.DOMDocument\", \"Microsoft.XMLDOM\"];\n\n                for (var d = 0; d < docStrings.length; d++) {\n                  if (doc === null) {\n                    try {\n                      doc = new ActiveXObject(docStrings[d]);\n                    } catch (e) {\n                      doc = null;\n                    }\n                  } else {\n                    break;\n                  }\n                }\n\n                return doc;\n              },\n\n              /** Function: xmlElement\n               *  Create an XML DOM element.\n               *\n               *  This function creates an XML DOM element correctly across all\n               *  implementations. Note that these are not HTML DOM elements, which\n               *  aren't appropriate for XMPP stanzas.\n               *\n               *  Parameters:\n               *    (String) name - The name for the element.\n               *    (Array|Object) attrs - An optional array or object containing\n               *      key/value pairs to use as element attributes. The object should\n               *      be in the format {'key': 'value'} or {key: 'value'}. The array\n               *      should have the format [['key1', 'value1'], ['key2', 'value2']].\n               *    (String) text - The text child data for the element.\n               *\n               *  Returns:\n               *    A new XML DOM element.\n               */\n              xmlElement: function xmlElement(name) {\n                if (!name) {\n                  return null;\n                }\n\n                var node = Strophe.xmlGenerator().createElement(name); // FIXME: this should throw errors if args are the wrong type or\n                // there are more than two optional args\n\n                for (var a = 1; a < arguments.length; a++) {\n                  var arg = arguments[a];\n\n                  if (!arg) {\n                    continue;\n                  }\n\n                  if (typeof arg === \"string\" || typeof arg === \"number\") {\n                    node.appendChild(Strophe.xmlTextNode(arg));\n                  } else if (_typeof(arg) === \"object\" && typeof arg.sort === \"function\") {\n                    for (var i = 0; i < arg.length; i++) {\n                      var attr = arg[i];\n\n                      if (_typeof(attr) === \"object\" && typeof attr.sort === \"function\" && attr[1] !== undefined && attr[1] !== null) {\n                        node.setAttribute(attr[0], attr[1]);\n                      }\n                    }\n                  } else if (_typeof(arg) === \"object\") {\n                    for (var k in arg) {\n                      if (Object.prototype.hasOwnProperty.call(arg, k) && arg[k] !== undefined && arg[k] !== null) {\n                        node.setAttribute(k, arg[k]);\n                      }\n                    }\n                  }\n                }\n\n                return node;\n              },\n\n              /*  Function: xmlescape\n               *  Excapes invalid xml characters.\n               *\n               *  Parameters:\n               *     (String) text - text to escape.\n               *\n               *  Returns:\n               *      Escaped text.\n               */\n              xmlescape: function xmlescape(text) {\n                text = text.replace(/\\&/g, \"&amp;\");\n                text = text.replace(/</g, \"&lt;\");\n                text = text.replace(/>/g, \"&gt;\");\n                text = text.replace(/'/g, \"&apos;\");\n                text = text.replace(/\"/g, \"&quot;\");\n                return text;\n              },\n\n              /*  Function: xmlunescape\n              *  Unexcapes invalid xml characters.\n              *\n              *  Parameters:\n              *     (String) text - text to unescape.\n              *\n              *  Returns:\n              *      Unescaped text.\n              */\n              xmlunescape: function xmlunescape(text) {\n                text = text.replace(/\\&amp;/g, \"&\");\n                text = text.replace(/&lt;/g, \"<\");\n                text = text.replace(/&gt;/g, \">\");\n                text = text.replace(/&apos;/g, \"'\");\n                text = text.replace(/&quot;/g, \"\\\"\");\n                return text;\n              },\n\n              /** Function: xmlTextNode\n               *  Creates an XML DOM text node.\n               *\n               *  Provides a cross implementation version of document.createTextNode.\n               *\n               *  Parameters:\n               *    (String) text - The content of the text node.\n               *\n               *  Returns:\n               *    A new XML DOM text node.\n               */\n              xmlTextNode: function xmlTextNode(text) {\n                return Strophe.xmlGenerator().createTextNode(text);\n              },\n\n              /** Function: xmlHtmlNode\n               *  Creates an XML DOM html node.\n               *\n               *  Parameters:\n               *    (String) html - The content of the html node.\n               *\n               *  Returns:\n               *    A new XML DOM text node.\n               */\n              xmlHtmlNode: function xmlHtmlNode(html) {\n                var node; //ensure text is escaped\n\n                if (DOMParser) {\n                  var parser = new DOMParser();\n                  node = parser.parseFromString(html, \"text/xml\");\n                } else {\n                  node = new ActiveXObject(\"Microsoft.XMLDOM\");\n                  node.async = \"false\";\n                  node.loadXML(html);\n                }\n\n                return node;\n              },\n\n              /** Function: getText\n               *  Get the concatenation of all text children of an element.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - A DOM element.\n               *\n               *  Returns:\n               *    A String with the concatenated text of all text element children.\n               */\n              getText: function getText(elem) {\n                if (!elem) {\n                  return null;\n                }\n\n                var str = \"\";\n\n                if (elem.childNodes.length === 0 && elem.nodeType === Strophe.ElementType.TEXT) {\n                  str += elem.nodeValue;\n                }\n\n                for (var i = 0; i < elem.childNodes.length; i++) {\n                  if (elem.childNodes[i].nodeType === Strophe.ElementType.TEXT) {\n                    str += elem.childNodes[i].nodeValue;\n                  }\n                }\n\n                return Strophe.xmlescape(str);\n              },\n\n              /** Function: copyElement\n               *  Copy an XML DOM element.\n               *\n               *  This function copies a DOM element and all its descendants and returns\n               *  the new copy.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - A DOM element.\n               *\n               *  Returns:\n               *    A new, copied DOM element tree.\n               */\n              copyElement: function copyElement(elem) {\n                var el;\n\n                if (elem.nodeType === Strophe.ElementType.NORMAL) {\n                  el = Strophe.xmlElement(elem.tagName);\n\n                  for (var i = 0; i < elem.attributes.length; i++) {\n                    el.setAttribute(elem.attributes[i].nodeName, elem.attributes[i].value);\n                  }\n\n                  for (var _i = 0; _i < elem.childNodes.length; _i++) {\n                    el.appendChild(Strophe.copyElement(elem.childNodes[_i]));\n                  }\n                } else if (elem.nodeType === Strophe.ElementType.TEXT) {\n                  el = Strophe.xmlGenerator().createTextNode(elem.nodeValue);\n                }\n\n                return el;\n              },\n\n              /** Function: createHtml\n               *  Copy an HTML DOM element into an XML DOM.\n               *\n               *  This function copies a DOM element and all its descendants and returns\n               *  the new copy.\n               *\n               *  Parameters:\n               *    (HTMLElement) elem - A DOM element.\n               *\n               *  Returns:\n               *    A new, copied DOM element tree.\n               */\n              createHtml: function createHtml(elem) {\n                var el;\n\n                if (elem.nodeType === Strophe.ElementType.NORMAL) {\n                  var tag = elem.nodeName.toLowerCase(); // XHTML tags must be lower case.\n\n                  if (Strophe.XHTML.validTag(tag)) {\n                    try {\n                      el = Strophe.xmlElement(tag);\n\n                      for (var i = 0; i < Strophe.XHTML.attributes[tag].length; i++) {\n                        var attribute = Strophe.XHTML.attributes[tag][i];\n                        var value = elem.getAttribute(attribute);\n\n                        if (typeof value === 'undefined' || value === null || value === '' || value === false || value === 0) {\n                          continue;\n                        }\n\n                        if (attribute === 'style' && _typeof(value) === 'object' && typeof value.cssText !== 'undefined') {\n                          value = value.cssText; // we're dealing with IE, need to get CSS out\n                        } // filter out invalid css styles\n\n\n                        if (attribute === 'style') {\n                          var css = [];\n                          var cssAttrs = value.split(';');\n\n                          for (var j = 0; j < cssAttrs.length; j++) {\n                            var attr = cssAttrs[j].split(':');\n                            var cssName = attr[0].replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").toLowerCase();\n\n                            if (Strophe.XHTML.validCSS(cssName)) {\n                              var cssValue = attr[1].replace(/^\\s*/, \"\").replace(/\\s*$/, \"\");\n                              css.push(cssName + ': ' + cssValue);\n                            }\n                          }\n\n                          if (css.length > 0) {\n                            value = css.join('; ');\n                            el.setAttribute(attribute, value);\n                          }\n                        } else {\n                          el.setAttribute(attribute, value);\n                        }\n                      }\n\n                      for (var _i2 = 0; _i2 < elem.childNodes.length; _i2++) {\n                        el.appendChild(Strophe.createHtml(elem.childNodes[_i2]));\n                      }\n                    } catch (e) {\n                      // invalid elements\n                      el = Strophe.xmlTextNode('');\n                    }\n                  } else {\n                    el = Strophe.xmlGenerator().createDocumentFragment();\n\n                    for (var _i3 = 0; _i3 < elem.childNodes.length; _i3++) {\n                      el.appendChild(Strophe.createHtml(elem.childNodes[_i3]));\n                    }\n                  }\n                } else if (elem.nodeType === Strophe.ElementType.FRAGMENT) {\n                  el = Strophe.xmlGenerator().createDocumentFragment();\n\n                  for (var _i4 = 0; _i4 < elem.childNodes.length; _i4++) {\n                    el.appendChild(Strophe.createHtml(elem.childNodes[_i4]));\n                  }\n                } else if (elem.nodeType === Strophe.ElementType.TEXT) {\n                  el = Strophe.xmlTextNode(elem.nodeValue);\n                }\n\n                return el;\n              },\n\n              /** Function: escapeNode\n               *  Escape the node part (also called local part) of a JID.\n               *\n               *  Parameters:\n               *    (String) node - A node (or local part).\n               *\n               *  Returns:\n               *    An escaped node (or local part).\n               */\n              escapeNode: function escapeNode(node) {\n                if (typeof node !== \"string\") {\n                  return node;\n                }\n\n                return node.replace(/^\\s+|\\s+$/g, '').replace(/\\\\/g, \"\\\\5c\").replace(/ /g, \"\\\\20\").replace(/\\\"/g, \"\\\\22\").replace(/\\&/g, \"\\\\26\").replace(/\\'/g, \"\\\\27\").replace(/\\//g, \"\\\\2f\").replace(/:/g, \"\\\\3a\").replace(/</g, \"\\\\3c\").replace(/>/g, \"\\\\3e\").replace(/@/g, \"\\\\40\");\n              },\n\n              /** Function: unescapeNode\n               *  Unescape a node part (also called local part) of a JID.\n               *\n               *  Parameters:\n               *    (String) node - A node (or local part).\n               *\n               *  Returns:\n               *    An unescaped node (or local part).\n               */\n              unescapeNode: function unescapeNode(node) {\n                if (typeof node !== \"string\") {\n                  return node;\n                }\n\n                return node.replace(/\\\\20/g, \" \").replace(/\\\\22/g, '\"').replace(/\\\\26/g, \"&\").replace(/\\\\27/g, \"'\").replace(/\\\\2f/g, \"/\").replace(/\\\\3a/g, \":\").replace(/\\\\3c/g, \"<\").replace(/\\\\3e/g, \">\").replace(/\\\\40/g, \"@\").replace(/\\\\5c/g, \"\\\\\");\n              },\n\n              /** Function: getNodeFromJid\n               *  Get the node portion of a JID String.\n               *\n               *  Parameters:\n               *    (String) jid - A JID.\n               *\n               *  Returns:\n               *    A String containing the node.\n               */\n              getNodeFromJid: function getNodeFromJid(jid) {\n                if (jid.indexOf(\"@\") < 0) {\n                  return null;\n                }\n\n                return jid.split(\"@\")[0];\n              },\n\n              /** Function: getDomainFromJid\n               *  Get the domain portion of a JID String.\n               *\n               *  Parameters:\n               *    (String) jid - A JID.\n               *\n               *  Returns:\n               *    A String containing the domain.\n               */\n              getDomainFromJid: function getDomainFromJid(jid) {\n                var bare = Strophe.getBareJidFromJid(jid);\n\n                if (bare.indexOf(\"@\") < 0) {\n                  return bare;\n                } else {\n                  var parts = bare.split(\"@\");\n                  parts.splice(0, 1);\n                  return parts.join('@');\n                }\n              },\n\n              /** Function: getResourceFromJid\n               *  Get the resource portion of a JID String.\n               *\n               *  Parameters:\n               *    (String) jid - A JID.\n               *\n               *  Returns:\n               *    A String containing the resource.\n               */\n              getResourceFromJid: function getResourceFromJid(jid) {\n                if (!jid) {\n                  return null;\n                }\n\n                var s = jid.split(\"/\");\n\n                if (s.length < 2) {\n                  return null;\n                }\n\n                s.splice(0, 1);\n                return s.join('/');\n              },\n\n              /** Function: getBareJidFromJid\n               *  Get the bare JID from a JID String.\n               *\n               *  Parameters:\n               *    (String) jid - A JID.\n               *\n               *  Returns:\n               *    A String containing the bare JID.\n               */\n              getBareJidFromJid: function getBareJidFromJid(jid) {\n                return jid ? jid.split(\"/\")[0] : null;\n              },\n\n              /** PrivateFunction: _handleError\n               *  _Private_ function that properly logs an error to the console\n               */\n              _handleError: function _handleError(e) {\n                if (typeof e.stack !== \"undefined\") {\n                  Strophe.fatal(e.stack);\n                }\n\n                if (e.sourceURL) {\n                  Strophe.fatal(\"error: \" + this.handler + \" \" + e.sourceURL + \":\" + e.line + \" - \" + e.name + \": \" + e.message);\n                } else if (e.fileName) {\n                  Strophe.fatal(\"error: \" + this.handler + \" \" + e.fileName + \":\" + e.lineNumber + \" - \" + e.name + \": \" + e.message);\n                } else {\n                  Strophe.fatal(\"error: \" + e.message);\n                }\n              },\n\n              /** Function: log\n               *  User overrideable logging function.\n               *\n               *  This function is called whenever the Strophe library calls any\n               *  of the logging functions.  The default implementation of this\n               *  function logs only fatal errors.  If client code wishes to handle the logging\n               *  messages, it should override this with\n               *  > Strophe.log = function (level, msg) {\n               *  >   (user code here)\n               *  > };\n               *\n               *  Please note that data sent and received over the wire is logged\n               *  via Strophe.Connection.rawInput() and Strophe.Connection.rawOutput().\n               *\n               *  The different levels and their meanings are\n               *\n               *    DEBUG - Messages useful for debugging purposes.\n               *    INFO - Informational messages.  This is mostly information like\n               *      'disconnect was called' or 'SASL auth succeeded'.\n               *    WARN - Warnings about potential problems.  This is mostly used\n               *      to report transient connection errors like request timeouts.\n               *    ERROR - Some error occurred.\n               *    FATAL - A non-recoverable fatal error occurred.\n               *\n               *  Parameters:\n               *    (Integer) level - The log level of the log message.  This will\n               *      be one of the values in Strophe.LogLevel.\n               *    (String) msg - The log message.\n               */\n              log: function log(level, msg) {\n                if (level === this.LogLevel.FATAL && _typeof(window.console) === 'object' && typeof window.console.error === 'function') {\n                  window.console.error(msg);\n                }\n              },\n\n              /** Function: debug\n               *  Log a message at the Strophe.LogLevel.DEBUG level.\n               *\n               *  Parameters:\n               *    (String) msg - The log message.\n               */\n              debug: function debug(msg) {\n                this.log(this.LogLevel.DEBUG, msg);\n              },\n\n              /** Function: info\n               *  Log a message at the Strophe.LogLevel.INFO level.\n               *\n               *  Parameters:\n               *    (String) msg - The log message.\n               */\n              info: function info(msg) {\n                this.log(this.LogLevel.INFO, msg);\n              },\n\n              /** Function: warn\n               *  Log a message at the Strophe.LogLevel.WARN level.\n               *\n               *  Parameters:\n               *    (String) msg - The log message.\n               */\n              warn: function warn(msg) {\n                this.log(this.LogLevel.WARN, msg);\n              },\n\n              /** Function: error\n               *  Log a message at the Strophe.LogLevel.ERROR level.\n               *\n               *  Parameters:\n               *    (String) msg - The log message.\n               */\n              error: function error(msg) {\n                this.log(this.LogLevel.ERROR, msg);\n              },\n\n              /** Function: fatal\n               *  Log a message at the Strophe.LogLevel.FATAL level.\n               *\n               *  Parameters:\n               *    (String) msg - The log message.\n               */\n              fatal: function fatal(msg) {\n                this.log(this.LogLevel.FATAL, msg);\n              },\n\n              /** Function: serialize\n               *  Render a DOM element and all descendants to a String.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - A DOM element.\n               *\n               *  Returns:\n               *    The serialized element tree as a String.\n               */\n              serialize: function serialize(elem) {\n                if (!elem) {\n                  return null;\n                }\n\n                if (typeof elem.tree === \"function\") {\n                  elem = elem.tree();\n                }\n\n                var names = _toConsumableArray(Array(elem.attributes.length).keys()).map(function (i) {\n                  return elem.attributes[i].nodeName;\n                });\n\n                names.sort();\n                var result = names.reduce(function (a, n) {\n                  return \"\".concat(a, \" \").concat(n, \"=\\\"\").concat(Strophe.xmlescape(elem.attributes.getNamedItem(n).value), \"\\\"\");\n                }, \"<\".concat(elem.nodeName));\n\n                if (elem.childNodes.length > 0) {\n                  result += \">\";\n\n                  for (var i = 0; i < elem.childNodes.length; i++) {\n                    var child = elem.childNodes[i];\n\n                    switch (child.nodeType) {\n                      case Strophe.ElementType.NORMAL:\n                        // normal element, so recurse\n                        result += Strophe.serialize(child);\n                        break;\n\n                      case Strophe.ElementType.TEXT:\n                        // text element to escape values\n                        result += Strophe.xmlescape(child.nodeValue);\n                        break;\n\n                      case Strophe.ElementType.CDATA:\n                        // cdata section so don't escape values\n                        result += \"<![CDATA[\" + child.nodeValue + \"]]>\";\n                    }\n                  }\n\n                  result += \"</\" + elem.nodeName + \">\";\n                } else {\n                  result += \"/>\";\n                }\n\n                return result;\n              },\n\n              /** PrivateVariable: _requestId\n               *  _Private_ variable that keeps track of the request ids for\n               *  connections.\n               */\n              _requestId: 0,\n\n              /** PrivateVariable: Strophe.connectionPlugins\n               *  _Private_ variable Used to store plugin names that need\n               *  initialization on Strophe.Connection construction.\n               */\n              _connectionPlugins: {},\n\n              /** Function: addConnectionPlugin\n               *  Extends the Strophe.Connection object with the given plugin.\n               *\n               *  Parameters:\n               *    (String) name - The name of the extension.\n               *    (Object) ptype - The plugin's prototype.\n               */\n              addConnectionPlugin: function addConnectionPlugin(name, ptype) {\n                Strophe._connectionPlugins[name] = ptype;\n              }\n            };\n            /** Class: Strophe.Builder\n             *  XML DOM builder.\n             *\n             *  This object provides an interface similar to JQuery but for building\n             *  DOM elements easily and rapidly.  All the functions except for toString()\n             *  and tree() return the object, so calls can be chained.  Here's an\n             *  example using the $iq() builder helper.\n             *  > $iq({to: 'you', from: 'me', type: 'get', id: '1'})\n             *  >     .c('query', {xmlns: 'strophe:example'})\n             *  >     .c('example')\n             *  >     .toString()\n             *\n             *  The above generates this XML fragment\n             *  > <iq to='you' from='me' type='get' id='1'>\n             *  >   <query xmlns='strophe:example'>\n             *  >     <example/>\n             *  >   </query>\n             *  > </iq>\n             *  The corresponding DOM manipulations to get a similar fragment would be\n             *  a lot more tedious and probably involve several helper variables.\n             *\n             *  Since adding children makes new operations operate on the child, up()\n             *  is provided to traverse up the tree.  To add two children, do\n             *  > builder.c('child1', ...).up().c('child2', ...)\n             *  The next operation on the Builder will be relative to the second child.\n             */\n\n            /** Constructor: Strophe.Builder\n             *  Create a Strophe.Builder object.\n             *\n             *  The attributes should be passed in object notation.  For example\n             *  > let b = new Builder('message', {to: 'you', from: 'me'});\n             *  or\n             *  > let b = new Builder('messsage', {'xml:lang': 'en'});\n             *\n             *  Parameters:\n             *    (String) name - The name of the root element.\n             *    (Object) attrs - The attributes for the root element in object notation.\n             *\n             *  Returns:\n             *    A new Strophe.Builder.\n             */\n\n            Strophe.Builder = function (name, attrs) {\n              // Set correct namespace for jabber:client elements\n              if (name === \"presence\" || name === \"message\" || name === \"iq\") {\n                if (attrs && !attrs.xmlns) {\n                  attrs.xmlns = Strophe.NS.CLIENT;\n                } else if (!attrs) {\n                  attrs = {\n                    xmlns: Strophe.NS.CLIENT\n                  };\n                }\n              } // Holds the tree being built.\n\n\n              this.nodeTree = Strophe.xmlElement(name, attrs); // Points to the current operation node.\n\n              this.node = this.nodeTree;\n            };\n\n            Strophe.Builder.prototype = {\n              /** Function: tree\n               *  Return the DOM tree.\n               *\n               *  This function returns the current DOM tree as an element object.  This\n               *  is suitable for passing to functions like Strophe.Connection.send().\n               *\n               *  Returns:\n               *    The DOM tree as a element object.\n               */\n              tree: function tree() {\n                return this.nodeTree;\n              },\n\n              /** Function: toString\n               *  Serialize the DOM tree to a String.\n               *\n               *  This function returns a string serialization of the current DOM\n               *  tree.  It is often used internally to pass data to a\n               *  Strophe.Request object.\n               *\n               *  Returns:\n               *    The serialized DOM tree in a String.\n               */\n              toString: function toString() {\n                return Strophe.serialize(this.nodeTree);\n              },\n\n              /** Function: up\n               *  Make the current parent element the new current element.\n               *\n               *  This function is often used after c() to traverse back up the tree.\n               *  For example, to add two children to the same element\n               *  > builder.c('child1', {}).up().c('child2', {});\n               *\n               *  Returns:\n               *    The Stophe.Builder object.\n               */\n              up: function up() {\n                this.node = this.node.parentNode;\n                return this;\n              },\n\n              /** Function: root\n               *  Make the root element the new current element.\n               *\n               *  When at a deeply nested element in the tree, this function can be used\n               *  to jump back to the root of the tree, instead of having to repeatedly\n               *  call up().\n               *\n               *  Returns:\n               *    The Stophe.Builder object.\n               */\n              root: function root() {\n                this.node = this.nodeTree;\n                return this;\n              },\n\n              /** Function: attrs\n               *  Add or modify attributes of the current element.\n               *\n               *  The attributes should be passed in object notation.  This function\n               *  does not move the current element pointer.\n               *\n               *  Parameters:\n               *    (Object) moreattrs - The attributes to add/modify in object notation.\n               *\n               *  Returns:\n               *    The Strophe.Builder object.\n               */\n              attrs: function attrs(moreattrs) {\n                for (var k in moreattrs) {\n                  if (Object.prototype.hasOwnProperty.call(moreattrs, k)) {\n                    if (moreattrs[k] === undefined) {\n                      this.node.removeAttribute(k);\n                    } else {\n                      this.node.setAttribute(k, moreattrs[k]);\n                    }\n                  }\n                }\n\n                return this;\n              },\n\n              /** Function: c\n               *  Add a child to the current element and make it the new current\n               *  element.\n               *\n               *  This function moves the current element pointer to the child,\n               *  unless text is provided.  If you need to add another child, it\n               *  is necessary to use up() to go back to the parent in the tree.\n               *\n               *  Parameters:\n               *    (String) name - The name of the child.\n               *    (Object) attrs - The attributes of the child in object notation.\n               *    (String) text - The text to add to the child.\n               *\n               *  Returns:\n               *    The Strophe.Builder object.\n               */\n              c: function c(name, attrs, text) {\n                var child = Strophe.xmlElement(name, attrs, text);\n                this.node.appendChild(child);\n\n                if (typeof text !== \"string\" && typeof text !== \"number\") {\n                  this.node = child;\n                }\n\n                return this;\n              },\n\n              /** Function: cnode\n               *  Add a child to the current element and make it the new current\n               *  element.\n               *\n               *  This function is the same as c() except that instead of using a\n               *  name and an attributes object to create the child it uses an\n               *  existing DOM element object.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - A DOM element.\n               *\n               *  Returns:\n               *    The Strophe.Builder object.\n               */\n              cnode: function cnode(elem) {\n                var impNode;\n                var xmlGen = Strophe.xmlGenerator();\n\n                try {\n                  impNode = xmlGen.importNode !== undefined;\n                } catch (e) {\n                  impNode = false;\n                }\n\n                var newElem = impNode ? xmlGen.importNode(elem, true) : Strophe.copyElement(elem);\n                this.node.appendChild(newElem);\n                this.node = newElem;\n                return this;\n              },\n\n              /** Function: t\n               *  Add a child text element.\n               *\n               *  This *does not* make the child the new current element since there\n               *  are no children of text elements.\n               *\n               *  Parameters:\n               *    (String) text - The text data to append to the current element.\n               *\n               *  Returns:\n               *    The Strophe.Builder object.\n               */\n              t: function t(text) {\n                var child = Strophe.xmlTextNode(text);\n                this.node.appendChild(child);\n                return this;\n              },\n\n              /** Function: h\n               *  Replace current element contents with the HTML passed in.\n               *\n               *  This *does not* make the child the new current element\n               *\n               *  Parameters:\n               *    (String) html - The html to insert as contents of current element.\n               *\n               *  Returns:\n               *    The Strophe.Builder object.\n               */\n              h: function h(html) {\n                var fragment = document.createElement('body'); // force the browser to try and fix any invalid HTML tags\n\n                fragment.innerHTML = html; // copy cleaned html into an xml dom\n\n                var xhtml = Strophe.createHtml(fragment);\n\n                while (xhtml.childNodes.length > 0) {\n                  this.node.appendChild(xhtml.childNodes[0]);\n                }\n\n                return this;\n              }\n            };\n            /** PrivateClass: Strophe.Handler\n             *  _Private_ helper class for managing stanza handlers.\n             *\n             *  A Strophe.Handler encapsulates a user provided callback function to be\n             *  executed when matching stanzas are received by the connection.\n             *  Handlers can be either one-off or persistant depending on their\n             *  return value. Returning true will cause a Handler to remain active, and\n             *  returning false will remove the Handler.\n             *\n             *  Users will not use Strophe.Handler objects directly, but instead they\n             *  will use Strophe.Connection.addHandler() and\n             *  Strophe.Connection.deleteHandler().\n             */\n\n            /** PrivateConstructor: Strophe.Handler\n             *  Create and initialize a new Strophe.Handler.\n             *\n             *  Parameters:\n             *    (Function) handler - A function to be executed when the handler is run.\n             *    (String) ns - The namespace to match.\n             *    (String) name - The element name to match.\n             *    (String) type - The element type to match.\n             *    (String) id - The element id attribute to match.\n             *    (String) from - The element from attribute to match.\n             *    (Object) options - Handler options\n             *\n             *  Returns:\n             *    A new Strophe.Handler object.\n             */\n\n            Strophe.Handler = function (handler, ns, name, type, id, from, options) {\n              this.handler = handler;\n              this.ns = ns;\n              this.name = name;\n              this.type = type;\n              this.id = id;\n              this.options = options || {\n                'matchBareFromJid': false,\n                'ignoreNamespaceFragment': false\n              }; // BBB: Maintain backward compatibility with old `matchBare` option\n\n              if (this.options.matchBare) {\n                Strophe.warn('The \"matchBare\" option is deprecated, use \"matchBareFromJid\" instead.');\n                this.options.matchBareFromJid = this.options.matchBare;\n                delete this.options.matchBare;\n              }\n\n              if (this.options.matchBareFromJid) {\n                this.from = from ? Strophe.getBareJidFromJid(from) : null;\n              } else {\n                this.from = from;\n              } // whether the handler is a user handler or a system handler\n\n\n              this.user = true;\n            };\n\n            Strophe.Handler.prototype = {\n              /** PrivateFunction: getNamespace\n               *  Returns the XML namespace attribute on an element.\n               *  If `ignoreNamespaceFragment` was passed in for this handler, then the\n               *  URL fragment will be stripped.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The XML element with the namespace.\n               *\n               *  Returns:\n               *    The namespace, with optionally the fragment stripped.\n               */\n              getNamespace: function getNamespace(elem) {\n                var elNamespace = elem.getAttribute(\"xmlns\");\n\n                if (elNamespace && this.options.ignoreNamespaceFragment) {\n                  elNamespace = elNamespace.split('#')[0];\n                }\n\n                return elNamespace;\n              },\n\n              /** PrivateFunction: namespaceMatch\n               *  Tests if a stanza matches the namespace set for this Strophe.Handler.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The XML element to test.\n               *\n               *  Returns:\n               *    true if the stanza matches and false otherwise.\n               */\n              namespaceMatch: function namespaceMatch(elem) {\n                var _this = this;\n\n                var nsMatch = false;\n\n                if (!this.ns) {\n                  return true;\n                } else {\n                  Strophe.forEachChild(elem, null, function (elem) {\n                    if (_this.getNamespace(elem) === _this.ns) {\n                      nsMatch = true;\n                    }\n                  });\n                  return nsMatch || this.getNamespace(elem) === this.ns;\n                }\n              },\n\n              /** PrivateFunction: isMatch\n               *  Tests if a stanza matches the Strophe.Handler.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The XML element to test.\n               *\n               *  Returns:\n               *    true if the stanza matches and false otherwise.\n               */\n              isMatch: function isMatch(elem) {\n                var from = elem.getAttribute('from');\n\n                if (this.options.matchBareFromJid) {\n                  from = Strophe.getBareJidFromJid(from);\n                }\n\n                var elem_type = elem.getAttribute(\"type\");\n\n                if (this.namespaceMatch(elem) && (!this.name || Strophe.isTagEqual(elem, this.name)) && (!this.type || (Array.isArray(this.type) ? this.type.indexOf(elem_type) !== -1 : elem_type === this.type)) && (!this.id || elem.getAttribute(\"id\") === this.id) && (!this.from || from === this.from)) {\n                  return true;\n                }\n\n                return false;\n              },\n\n              /** PrivateFunction: run\n               *  Run the callback on a matching stanza.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The DOM element that triggered the\n               *      Strophe.Handler.\n               *\n               *  Returns:\n               *    A boolean indicating if the handler should remain active.\n               */\n              run: function run(elem) {\n                var result = null;\n\n                try {\n                  result = this.handler(elem);\n                } catch (e) {\n                  Strophe._handleError(e);\n\n                  throw e;\n                }\n\n                return result;\n              },\n\n              /** PrivateFunction: toString\n               *  Get a String representation of the Strophe.Handler object.\n               *\n               *  Returns:\n               *    A String.\n               */\n              toString: function toString() {\n                return \"{Handler: \" + this.handler + \"(\" + this.name + \",\" + this.id + \",\" + this.ns + \")}\";\n              }\n            };\n            /** PrivateClass: Strophe.TimedHandler\n             *  _Private_ helper class for managing timed handlers.\n             *\n             *  A Strophe.TimedHandler encapsulates a user provided callback that\n             *  should be called after a certain period of time or at regular\n             *  intervals.  The return value of the callback determines whether the\n             *  Strophe.TimedHandler will continue to fire.\n             *\n             *  Users will not use Strophe.TimedHandler objects directly, but instead\n             *  they will use Strophe.Connection.addTimedHandler() and\n             *  Strophe.Connection.deleteTimedHandler().\n             */\n\n            /** PrivateConstructor: Strophe.TimedHandler\n             *  Create and initialize a new Strophe.TimedHandler object.\n             *\n             *  Parameters:\n             *    (Integer) period - The number of milliseconds to wait before the\n             *      handler is called.\n             *    (Function) handler - The callback to run when the handler fires.  This\n             *      function should take no arguments.\n             *\n             *  Returns:\n             *    A new Strophe.TimedHandler object.\n             */\n\n            Strophe.TimedHandler = function (period, handler) {\n              this.period = period;\n              this.handler = handler;\n              this.lastCalled = new Date().getTime();\n              this.user = true;\n            };\n\n            Strophe.TimedHandler.prototype = {\n              /** PrivateFunction: run\n               *  Run the callback for the Strophe.TimedHandler.\n               *\n               *  Returns:\n               *    true if the Strophe.TimedHandler should be called again, and false\n               *      otherwise.\n               */\n              run: function run() {\n                this.lastCalled = new Date().getTime();\n                return this.handler();\n              },\n\n              /** PrivateFunction: reset\n               *  Reset the last called time for the Strophe.TimedHandler.\n               */\n              reset: function reset() {\n                this.lastCalled = new Date().getTime();\n              },\n\n              /** PrivateFunction: toString\n               *  Get a string representation of the Strophe.TimedHandler object.\n               *\n               *  Returns:\n               *    The string representation.\n               */\n              toString: function toString() {\n                return \"{TimedHandler: \" + this.handler + \"(\" + this.period + \")}\";\n              }\n            };\n            /** Class: Strophe.Connection\n             *  XMPP Connection manager.\n             *\n             *  This class is the main part of Strophe.  It manages a BOSH or websocket\n             *  connection to an XMPP server and dispatches events to the user callbacks\n             *  as data arrives. It supports SASL PLAIN, SASL DIGEST-MD5, SASL SCRAM-SHA1\n             *  and legacy authentication.\n             *\n             *  After creating a Strophe.Connection object, the user will typically\n             *  call connect() with a user supplied callback to handle connection level\n             *  events like authentication failure, disconnection, or connection\n             *  complete.\n             *\n             *  The user will also have several event handlers defined by using\n             *  addHandler() and addTimedHandler().  These will allow the user code to\n             *  respond to interesting stanzas or do something periodically with the\n             *  connection. These handlers will be active once authentication is\n             *  finished.\n             *\n             *  To send data to the connection, use send().\n             */\n\n            /** Constructor: Strophe.Connection\n             *  Create and initialize a Strophe.Connection object.\n             *\n             *  The transport-protocol for this connection will be chosen automatically\n             *  based on the given service parameter. URLs starting with \"ws://\" or\n             *  \"wss://\" will use WebSockets, URLs starting with \"http://\", \"https://\"\n             *  or without a protocol will use BOSH.\n             *\n             *  To make Strophe connect to the current host you can leave out the protocol\n             *  and host part and just pass the path, e.g.\n             *\n             *  > let conn = new Strophe.Connection(\"/http-bind/\");\n             *\n             *  Options common to both Websocket and BOSH:\n             *  ------------------------------------------\n             *\n             *  cookies:\n             *\n             *  The *cookies* option allows you to pass in cookies to be added to the\n             *  document. These cookies will then be included in the BOSH XMLHttpRequest\n             *  or in the websocket connection.\n             *\n             *  The passed in value must be a map of cookie names and string values.\n             *\n             *  > { \"myCookie\": {\n             *  >     \"value\": \"1234\",\n             *  >     \"domain\": \".example.org\",\n             *  >     \"path\": \"/\",\n             *  >     \"expires\": expirationDate\n             *  >     }\n             *  > }\n             *\n             *  Note that cookies can't be set in this way for other domains (i.e. cross-domain).\n             *  Those cookies need to be set under those domains, for example they can be\n             *  set server-side by making a XHR call to that domain to ask it to set any\n             *  necessary cookies.\n             *\n             *  mechanisms:\n             *\n             *  The *mechanisms* option allows you to specify the SASL mechanisms that this\n             *  instance of Strophe.Connection (and therefore your XMPP client) will\n             *  support.\n             *\n             *  The value must be an array of objects with Strophe.SASLMechanism\n             *  prototypes.\n             *\n             *  If nothing is specified, then the following mechanisms (and their\n             *  priorities) are registered:\n             *\n             *      SCRAM-SHA1 - 70\n             *      DIGEST-MD5 - 60\n             *      PLAIN - 50\n             *      OAUTH-BEARER - 40\n             *      OAUTH-2 - 30\n             *      ANONYMOUS - 20\n             *      EXTERNAL - 10\n             *\n             *  explicitResourceBinding:\n             *\n             *  If `explicitResourceBinding` is set to a truthy value, then the XMPP client\n             *  needs to explicitly call `Strophe.Connection.prototype.bind` once the XMPP\n             *  server has advertised the \"urn:ietf:params:xml:ns:xmpp-bind\" feature.\n             *\n             *  Making this step explicit allows client authors to first finish other\n             *  stream related tasks, such as setting up an XEP-0198 Stream Management\n             *  session, before binding the JID resource for this session.\n             *\n             *  WebSocket options:\n             *  ------------------\n             *\n             *  If you want to connect to the current host with a WebSocket connection you\n             *  can tell Strophe to use WebSockets through a \"protocol\" attribute in the\n             *  optional options parameter. Valid values are \"ws\" for WebSocket and \"wss\"\n             *  for Secure WebSocket.\n             *  So to connect to \"wss://CURRENT_HOSTNAME/xmpp-websocket\" you would call\n             *\n             *  > let conn = new Strophe.Connection(\"/xmpp-websocket/\", {protocol: \"wss\"});\n             *\n             *  Note that relative URLs _NOT_ starting with a \"/\" will also include the path\n             *  of the current site.\n             *\n             *  Also because downgrading security is not permitted by browsers, when using\n             *  relative URLs both BOSH and WebSocket connections will use their secure\n             *  variants if the current connection to the site is also secure (https).\n             *\n             *  BOSH options:\n             *  -------------\n             *\n             *  By adding \"sync\" to the options, you can control if requests will\n             *  be made synchronously or not. The default behaviour is asynchronous.\n             *  If you want to make requests synchronous, make \"sync\" evaluate to true.\n             *  > let conn = new Strophe.Connection(\"/http-bind/\", {sync: true});\n             *\n             *  You can also toggle this on an already established connection.\n             *  > conn.options.sync = true;\n             *\n             *  The *customHeaders* option can be used to provide custom HTTP headers to be\n             *  included in the XMLHttpRequests made.\n             *\n             *  The *keepalive* option can be used to instruct Strophe to maintain the\n             *  current BOSH session across interruptions such as webpage reloads.\n             *\n             *  It will do this by caching the sessions tokens in sessionStorage, and when\n             *  \"restore\" is called it will check whether there are cached tokens with\n             *  which it can resume an existing session.\n             *\n             *  The *withCredentials* option should receive a Boolean value and is used to\n             *  indicate wether cookies should be included in ajax requests (by default\n             *  they're not).\n             *  Set this value to true if you are connecting to a BOSH service\n             *  and for some reason need to send cookies to it.\n             *  In order for this to work cross-domain, the server must also enable\n             *  credentials by setting the Access-Control-Allow-Credentials response header\n             *  to \"true\". For most usecases however this setting should be false (which\n             *  is the default).\n             *  Additionally, when using Access-Control-Allow-Credentials, the\n             *  Access-Control-Allow-Origin header can't be set to the wildcard \"*\", but\n             *  instead must be restricted to actual domains.\n             *\n             *  The *contentType* option can be set to change the default Content-Type\n             *  of \"text/xml; charset=utf-8\", which can be useful to reduce the amount of\n             *  CORS preflight requests that are sent to the server.\n             *\n             *  Parameters:\n             *    (String) service - The BOSH or WebSocket service URL.\n             *    (Object) options - A hash of configuration options\n             *\n             *  Returns:\n             *    A new Strophe.Connection object.\n             */\n\n            Strophe.Connection = function (service, options) {\n              var _this2 = this;\n\n              // The service URL\n              this.service = service; // Configuration options\n\n              this.options = options || {};\n              var proto = this.options.protocol || \"\"; // Select protocal based on service or options\n\n              if (service.indexOf(\"ws:\") === 0 || service.indexOf(\"wss:\") === 0 || proto.indexOf(\"ws\") === 0) {\n                this._proto = new Strophe.Websocket(this);\n              } else {\n                this._proto = new Strophe.Bosh(this);\n              }\n              /* The connected JID. */\n\n\n              this.jid = \"\";\n              /* the JIDs domain */\n\n              this.domain = null;\n              /* stream:features */\n\n              this.features = null; // SASL\n\n              this._sasl_data = {};\n              this.do_session = false;\n              this.do_bind = false; // handler lists\n\n              this.timedHandlers = [];\n              this.handlers = [];\n              this.removeTimeds = [];\n              this.removeHandlers = [];\n              this.addTimeds = [];\n              this.addHandlers = [];\n              this.protocolErrorHandlers = {\n                'HTTP': {},\n                'websocket': {}\n              };\n              this._idleTimeout = null;\n              this._disconnectTimeout = null;\n              this.authenticated = false;\n              this.connected = false;\n              this.disconnecting = false;\n              this.do_authentication = true;\n              this.paused = false;\n              this.restored = false;\n              this._data = [];\n              this._uniqueId = 0;\n              this._sasl_success_handler = null;\n              this._sasl_failure_handler = null;\n              this._sasl_challenge_handler = null; // Max retries before disconnecting\n\n              this.maxRetries = 5; // Call onIdle callback every 1/10th of a second\n\n              this._idleTimeout = setTimeout(function () {\n                return _this2._onIdle();\n              }, 100);\n              utils.addCookies(this.options.cookies);\n              this.registerSASLMechanisms(this.options.mechanisms); // initialize plugins\n\n              for (var k in Strophe._connectionPlugins) {\n                if (Object.prototype.hasOwnProperty.call(Strophe._connectionPlugins, k)) {\n                  var F = function F() {};\n\n                  F.prototype = Strophe._connectionPlugins[k];\n                  this[k] = new F();\n                  this[k].init(this);\n                }\n              }\n            };\n\n            Strophe.Connection.prototype = {\n              /** Function: reset\n               *  Reset the connection.\n               *\n               *  This function should be called after a connection is disconnected\n               *  before that connection is reused.\n               */\n              reset: function reset() {\n                this._proto._reset(); // SASL\n\n\n                this.do_session = false;\n                this.do_bind = false; // handler lists\n\n                this.timedHandlers = [];\n                this.handlers = [];\n                this.removeTimeds = [];\n                this.removeHandlers = [];\n                this.addTimeds = [];\n                this.addHandlers = [];\n                this.authenticated = false;\n                this.connected = false;\n                this.disconnecting = false;\n                this.restored = false;\n                this._data = [];\n                this._requests = [];\n                this._uniqueId = 0;\n              },\n\n              /** Function: pause\n               *  Pause the request manager.\n               *\n               *  This will prevent Strophe from sending any more requests to the\n               *  server.  This is very useful for temporarily pausing\n               *  BOSH-Connections while a lot of send() calls are happening quickly.\n               *  This causes Strophe to send the data in a single request, saving\n               *  many request trips.\n               */\n              pause: function pause() {\n                this.paused = true;\n              },\n\n              /** Function: resume\n               *  Resume the request manager.\n               *\n               *  This resumes after pause() has been called.\n               */\n              resume: function resume() {\n                this.paused = false;\n              },\n\n              /** Function: getUniqueId\n               *  Generate a unique ID for use in <iq/> elements.\n               *\n               *  All <iq/> stanzas are required to have unique id attributes.  This\n               *  function makes creating these easy.  Each connection instance has\n               *  a counter which starts from zero, and the value of this counter\n               *  plus a colon followed by the suffix becomes the unique id. If no\n               *  suffix is supplied, the counter is used as the unique id.\n               *\n               *  Suffixes are used to make debugging easier when reading the stream\n               *  data, and their use is recommended.  The counter resets to 0 for\n               *  every new connection for the same reason.  For connections to the\n               *  same server that authenticate the same way, all the ids should be\n               *  the same, which makes it easy to see changes.  This is useful for\n               *  automated testing as well.\n               *\n               *  Parameters:\n               *    (String) suffix - A optional suffix to append to the id.\n               *\n               *  Returns:\n               *    A unique string to be used for the id attribute.\n               */\n              getUniqueId: function getUniqueId(suffix) {\n                var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n                  var r = Math.random() * 16 | 0,\n                      v = c === 'x' ? r : r & 0x3 | 0x8;\n                  return v.toString(16);\n                });\n\n                if (typeof suffix === \"string\" || typeof suffix === \"number\") {\n                  return uuid + \":\" + suffix;\n                } else {\n                  return uuid + \"\";\n                }\n              },\n\n              /** Function: addProtocolErrorHandler\n               *  Register a handler function for when a protocol (websocker or HTTP)\n               *  error occurs.\n               *\n               *  NOTE: Currently only HTTP errors for BOSH requests are handled.\n               *  Patches that handle websocket errors would be very welcome.\n               *\n               *  Parameters:\n               *    (String) protocol - 'HTTP' or 'websocket'\n               *    (Integer) status_code - Error status code (e.g 500, 400 or 404)\n               *    (Function) callback - Function that will fire on Http error\n               *\n               *  Example:\n               *  function onError(err_code){\n               *    //do stuff\n               *  }\n               *\n               *  let conn = Strophe.connect('http://example.com/http-bind');\n               *  conn.addProtocolErrorHandler('HTTP', 500, onError);\n               *  // Triggers HTTP 500 error and onError handler will be called\n               *  conn.connect('user_jid@incorrect_jabber_host', 'secret', onConnect);\n               */\n              addProtocolErrorHandler: function addProtocolErrorHandler(protocol, status_code, callback) {\n                this.protocolErrorHandlers[protocol][status_code] = callback;\n              },\n\n              /** Function: connect\n               *  Starts the connection process.\n               *\n               *  As the connection process proceeds, the user supplied callback will\n               *  be triggered multiple times with status updates.  The callback\n               *  should take two arguments - the status code and the error condition.\n               *\n               *  The status code will be one of the values in the Strophe.Status\n               *  constants.  The error condition will be one of the conditions\n               *  defined in RFC 3920 or the condition 'strophe-parsererror'.\n               *\n               *  The Parameters _wait_, _hold_ and _route_ are optional and only relevant\n               *  for BOSH connections. Please see XEP 124 for a more detailed explanation\n               *  of the optional parameters.\n               *\n               *  Parameters:\n               *    (String) jid - The user's JID.  This may be a bare JID,\n               *      or a full JID.  If a node is not supplied, SASL OAUTHBEARER or\n               *      SASL ANONYMOUS authentication will be attempted (OAUTHBEARER will\n               *      process the provided password value as an access token).\n               *    (String) pass - The user's password.\n               *    (Function) callback - The connect callback function.\n               *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n               *      time the server will wait before returning an empty result for\n               *      a request.  The default setting of 60 seconds is recommended.\n               *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n               *      number of connections the server will hold at one time.  This\n               *      should almost always be set to 1 (the default).\n               *    (String) route - The optional route value.\n               *    (String) authcid - The optional alternative authentication identity\n               *      (username) if intending to impersonate another user.\n               *      When using the SASL-EXTERNAL authentication mechanism, for example\n               *      with client certificates, then the authcid value is used to\n               *      determine whether an authorization JID (authzid) should be sent to\n               *      the server. The authzid should not be sent to the server if the\n               *      authzid and authcid are the same. So to prevent it from being sent\n               *      (for example when the JID is already contained in the client\n               *      certificate), set authcid to that same JID. See XEP-178 for more\n               *      details.\n               */\n              connect: function connect(jid, pass, callback, wait, hold, route, authcid) {\n                this.jid = jid;\n                /** Variable: authzid\n                 *  Authorization identity.\n                 */\n\n                this.authzid = Strophe.getBareJidFromJid(this.jid);\n                /** Variable: authcid\n                 *  Authentication identity (User name).\n                 */\n\n                this.authcid = authcid || Strophe.getNodeFromJid(this.jid);\n                /** Variable: pass\n                 *  Authentication identity (User password).\n                 */\n\n                this.pass = pass;\n                /** Variable: servtype\n                 *  Digest MD5 compatibility.\n                 */\n\n                this.servtype = \"xmpp\";\n                this.connect_callback = callback;\n                this.disconnecting = false;\n                this.connected = false;\n                this.authenticated = false;\n                this.restored = false; // parse jid for domain\n\n                this.domain = Strophe.getDomainFromJid(this.jid);\n\n                this._changeConnectStatus(Strophe.Status.CONNECTING, null);\n\n                this._proto._connect(wait, hold, route);\n              },\n\n              /** Function: attach\n               *  Attach to an already created and authenticated BOSH session.\n               *\n               *  This function is provided to allow Strophe to attach to BOSH\n               *  sessions which have been created externally, perhaps by a Web\n               *  application.  This is often used to support auto-login type features\n               *  without putting user credentials into the page.\n               *\n               *  Parameters:\n               *    (String) jid - The full JID that is bound by the session.\n               *    (String) sid - The SID of the BOSH session.\n               *    (String) rid - The current RID of the BOSH session.  This RID\n               *      will be used by the next request.\n               *    (Function) callback The connect callback function.\n               *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n               *      time the server will wait before returning an empty result for\n               *      a request.  The default setting of 60 seconds is recommended.\n               *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n               *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n               *      number of connections the server will hold at one time.  This\n               *      should almost always be set to 1 (the default).\n               *    (Integer) wind - The optional HTTBIND window value.  This is the\n               *      allowed range of request ids that are valid.  The default is 5.\n               */\n              attach: function attach(jid, sid, rid, callback, wait, hold, wind) {\n                if (this._proto instanceof Strophe.Bosh) {\n                  this._proto._attach(jid, sid, rid, callback, wait, hold, wind);\n                } else {\n                  var error = new Error('The \"attach\" method can only be used with a BOSH connection.');\n                  error.name = 'StropheSessionError';\n                  throw error;\n                }\n              },\n\n              /** Function: restore\n               *  Attempt to restore a cached BOSH session.\n               *\n               *  This function is only useful in conjunction with providing the\n               *  \"keepalive\":true option when instantiating a new Strophe.Connection.\n               *\n               *  When \"keepalive\" is set to true, Strophe will cache the BOSH tokens\n               *  RID (Request ID) and SID (Session ID) and then when this function is\n               *  called, it will attempt to restore the session from those cached\n               *  tokens.\n               *\n               *  This function must therefore be called instead of connect or attach.\n               *\n               *  For an example on how to use it, please see examples/restore.js\n               *\n               *  Parameters:\n               *    (String) jid - The user's JID.  This may be a bare JID or a full JID.\n               *    (Function) callback - The connect callback function.\n               *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n               *      time the server will wait before returning an empty result for\n               *      a request.  The default setting of 60 seconds is recommended.\n               *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n               *      number of connections the server will hold at one time.  This\n               *      should almost always be set to 1 (the default).\n               *    (Integer) wind - The optional HTTBIND window value.  This is the\n               *      allowed range of request ids that are valid.  The default is 5.\n               */\n              restore: function restore(jid, callback, wait, hold, wind) {\n                if (this._sessionCachingSupported()) {\n                  this._proto._restore(jid, callback, wait, hold, wind);\n                } else {\n                  var error = new Error('The \"restore\" method can only be used with a BOSH connection.');\n                  error.name = 'StropheSessionError';\n                  throw error;\n                }\n              },\n\n              /** PrivateFunction: _sessionCachingSupported\n               * Checks whether sessionStorage and JSON are supported and whether we're\n               * using BOSH.\n               */\n              _sessionCachingSupported: function _sessionCachingSupported() {\n                if (this._proto instanceof Strophe.Bosh) {\n                  if (!JSON) {\n                    return false;\n                  }\n\n                  try {\n                    sessionStorage.setItem('_strophe_', '_strophe_');\n                    sessionStorage.removeItem('_strophe_');\n                  } catch (e) {\n                    return false;\n                  }\n\n                  return true;\n                }\n\n                return false;\n              },\n\n              /** Function: xmlInput\n               *  User overrideable function that receives XML data coming into the\n               *  connection.\n               *\n               *  The default function does nothing.  User code can override this with\n               *  > Strophe.Connection.xmlInput = function (elem) {\n               *  >   (user code)\n               *  > };\n               *\n               *  Due to limitations of current Browsers' XML-Parsers the opening and closing\n               *  <stream> tag for WebSocket-Connoctions will be passed as selfclosing here.\n               *\n               *  BOSH-Connections will have all stanzas wrapped in a <body> tag. See\n               *  <Strophe.Bosh.strip> if you want to strip this tag.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The XML data received by the connection.\n               */\n              xmlInput: function xmlInput(elem) {\n                return;\n              },\n\n              /** Function: xmlOutput\n               *  User overrideable function that receives XML data sent to the\n               *  connection.\n               *\n               *  The default function does nothing.  User code can override this with\n               *  > Strophe.Connection.xmlOutput = function (elem) {\n               *  >   (user code)\n               *  > };\n               *\n               *  Due to limitations of current Browsers' XML-Parsers the opening and closing\n               *  <stream> tag for WebSocket-Connoctions will be passed as selfclosing here.\n               *\n               *  BOSH-Connections will have all stanzas wrapped in a <body> tag. See\n               *  <Strophe.Bosh.strip> if you want to strip this tag.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The XMLdata sent by the connection.\n               */\n              xmlOutput: function xmlOutput(elem) {\n                return;\n              },\n\n              /** Function: rawInput\n               *  User overrideable function that receives raw data coming into the\n               *  connection.\n               *\n               *  The default function does nothing.  User code can override this with\n               *  > Strophe.Connection.rawInput = function (data) {\n               *  >   (user code)\n               *  > };\n               *\n               *  Parameters:\n               *    (String) data - The data received by the connection.\n               */\n              rawInput: function rawInput(data) {\n                return;\n              },\n\n              /** Function: rawOutput\n               *  User overrideable function that receives raw data sent to the\n               *  connection.\n               *\n               *  The default function does nothing.  User code can override this with\n               *  > Strophe.Connection.rawOutput = function (data) {\n               *  >   (user code)\n               *  > };\n               *\n               *  Parameters:\n               *    (String) data - The data sent by the connection.\n               */\n              rawOutput: function rawOutput(data) {\n                return;\n              },\n\n              /** Function: nextValidRid\n               *  User overrideable function that receives the new valid rid.\n               *\n               *  The default function does nothing. User code can override this with\n               *  > Strophe.Connection.nextValidRid = function (rid) {\n               *  >    (user code)\n               *  > };\n               *\n               *  Parameters:\n               *    (Number) rid - The next valid rid\n               */\n              nextValidRid: function nextValidRid(rid) {\n                return;\n              },\n\n              /** Function: send\n               *  Send a stanza.\n               *\n               *  This function is called to push data onto the send queue to\n               *  go out over the wire.  Whenever a request is sent to the BOSH\n               *  server, all pending data is sent and the queue is flushed.\n               *\n               *  Parameters:\n               *    (XMLElement |\n               *     [XMLElement] |\n               *     Strophe.Builder) elem - The stanza to send.\n               */\n              send: function send(elem) {\n                if (elem === null) {\n                  return;\n                }\n\n                if (typeof elem.sort === \"function\") {\n                  for (var i = 0; i < elem.length; i++) {\n                    this._queueData(elem[i]);\n                  }\n                } else if (typeof elem.tree === \"function\") {\n                  this._queueData(elem.tree());\n                } else {\n                  this._queueData(elem);\n                }\n\n                this._proto._send();\n              },\n\n              /** Function: flush\n               *  Immediately send any pending outgoing data.\n               *\n               *  Normally send() queues outgoing data until the next idle period\n               *  (100ms), which optimizes network use in the common cases when\n               *  several send()s are called in succession. flush() can be used to\n               *  immediately send all pending data.\n               */\n              flush: function flush() {\n                // cancel the pending idle period and run the idle function\n                // immediately\n                clearTimeout(this._idleTimeout);\n\n                this._onIdle();\n              },\n\n              /** Function: sendPresence\n               *  Helper function to send presence stanzas. The main benefit is for\n               *  sending presence stanzas for which you expect a responding presence\n               *  stanza with the same id (for example when leaving a chat room).\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The stanza to send.\n               *    (Function) callback - The callback function for a successful request.\n               *    (Function) errback - The callback function for a failed or timed\n               *      out request.  On timeout, the stanza will be null.\n               *    (Integer) timeout - The time specified in milliseconds for a\n               *      timeout to occur.\n               *\n               *  Returns:\n               *    The id used to send the presence.\n               */\n              sendPresence: function sendPresence(elem, callback, errback, timeout) {\n                var _this3 = this;\n\n                var timeoutHandler = null;\n\n                if (typeof elem.tree === \"function\") {\n                  elem = elem.tree();\n                }\n\n                var id = elem.getAttribute('id');\n\n                if (!id) {\n                  // inject id if not found\n                  id = this.getUniqueId(\"sendPresence\");\n                  elem.setAttribute(\"id\", id);\n                }\n\n                if (typeof callback === \"function\" || typeof errback === \"function\") {\n                  var handler = this.addHandler(function (stanza) {\n                    // remove timeout handler if there is one\n                    if (timeoutHandler) {\n                      _this3.deleteTimedHandler(timeoutHandler);\n                    }\n\n                    if (stanza.getAttribute('type') === 'error') {\n                      if (errback) {\n                        errback(stanza);\n                      }\n                    } else if (callback) {\n                      callback(stanza);\n                    }\n                  }, null, 'presence', null, id); // if timeout specified, set up a timeout handler.\n\n                  if (timeout) {\n                    timeoutHandler = this.addTimedHandler(timeout, function () {\n                      // get rid of normal handler\n                      _this3.deleteHandler(handler); // call errback on timeout with null stanza\n\n\n                      if (errback) {\n                        errback(null);\n                      }\n\n                      return false;\n                    });\n                  }\n                }\n\n                this.send(elem);\n                return id;\n              },\n\n              /** Function: sendIQ\n               *  Helper function to send IQ stanzas.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The stanza to send.\n               *    (Function) callback - The callback function for a successful request.\n               *    (Function) errback - The callback function for a failed or timed\n               *      out request.  On timeout, the stanza will be null.\n               *    (Integer) timeout - The time specified in milliseconds for a\n               *      timeout to occur.\n               *\n               *  Returns:\n               *    The id used to send the IQ.\n              */\n              sendIQ: function sendIQ(elem, callback, errback, timeout) {\n                var _this4 = this;\n\n                var timeoutHandler = null;\n\n                if (typeof elem.tree === \"function\") {\n                  elem = elem.tree();\n                }\n\n                var id = elem.getAttribute('id');\n\n                if (!id) {\n                  // inject id if not found\n                  id = this.getUniqueId(\"sendIQ\");\n                  elem.setAttribute(\"id\", id);\n                }\n\n                if (typeof callback === \"function\" || typeof errback === \"function\") {\n                  var handler = this.addHandler(function (stanza) {\n                    // remove timeout handler if there is one\n                    if (timeoutHandler) {\n                      _this4.deleteTimedHandler(timeoutHandler);\n                    }\n\n                    var iqtype = stanza.getAttribute('type');\n\n                    if (iqtype === 'result') {\n                      if (callback) {\n                        callback(stanza);\n                      }\n                    } else if (iqtype === 'error') {\n                      if (errback) {\n                        errback(stanza);\n                      }\n                    } else {\n                      var error = new Error(\"Got bad IQ type of \".concat(iqtype));\n                      error.name = \"StropheError\";\n                      throw error;\n                    }\n                  }, null, 'iq', ['error', 'result'], id); // if timeout specified, set up a timeout handler.\n\n                  if (timeout) {\n                    timeoutHandler = this.addTimedHandler(timeout, function () {\n                      // get rid of normal handler\n                      _this4.deleteHandler(handler); // call errback on timeout with null stanza\n\n\n                      if (errback) {\n                        errback(null);\n                      }\n\n                      return false;\n                    });\n                  }\n                }\n\n                this.send(elem);\n                return id;\n              },\n\n              /** PrivateFunction: _queueData\n               *  Queue outgoing data for later sending.  Also ensures that the data\n               *  is a DOMElement.\n               */\n              _queueData: function _queueData(element) {\n                if (element === null || !element.tagName || !element.childNodes) {\n                  var error = new Error(\"Cannot queue non-DOMElement.\");\n                  error.name = \"StropheError\";\n                  throw error;\n                }\n\n                this._data.push(element);\n              },\n\n              /** PrivateFunction: _sendRestart\n               *  Send an xmpp:restart stanza.\n               */\n              _sendRestart: function _sendRestart() {\n                var _this5 = this;\n\n                this._data.push(\"restart\");\n\n                this._proto._sendRestart();\n\n                this._idleTimeout = setTimeout(function () {\n                  return _this5._onIdle();\n                }, 100);\n              },\n\n              /** Function: addTimedHandler\n               *  Add a timed handler to the connection.\n               *\n               *  This function adds a timed handler.  The provided handler will\n               *  be called every period milliseconds until it returns false,\n               *  the connection is terminated, or the handler is removed.  Handlers\n               *  that wish to continue being invoked should return true.\n               *\n               *  Because of method binding it is necessary to save the result of\n               *  this function if you wish to remove a handler with\n               *  deleteTimedHandler().\n               *\n               *  Note that user handlers are not active until authentication is\n               *  successful.\n               *\n               *  Parameters:\n               *    (Integer) period - The period of the handler.\n               *    (Function) handler - The callback function.\n               *\n               *  Returns:\n               *    A reference to the handler that can be used to remove it.\n               */\n              addTimedHandler: function addTimedHandler(period, handler) {\n                var thand = new Strophe.TimedHandler(period, handler);\n                this.addTimeds.push(thand);\n                return thand;\n              },\n\n              /** Function: deleteTimedHandler\n               *  Delete a timed handler for a connection.\n               *\n               *  This function removes a timed handler from the connection.  The\n               *  handRef parameter is *not* the function passed to addTimedHandler(),\n               *  but is the reference returned from addTimedHandler().\n               *\n               *  Parameters:\n               *    (Strophe.TimedHandler) handRef - The handler reference.\n               */\n              deleteTimedHandler: function deleteTimedHandler(handRef) {\n                // this must be done in the Idle loop so that we don't change\n                // the handlers during iteration\n                this.removeTimeds.push(handRef);\n              },\n\n              /** Function: addHandler\n               *  Add a stanza handler for the connection.\n               *\n               *  This function adds a stanza handler to the connection.  The\n               *  handler callback will be called for any stanza that matches\n               *  the parameters.  Note that if multiple parameters are supplied,\n               *  they must all match for the handler to be invoked.\n               *\n               *  The handler will receive the stanza that triggered it as its argument.\n               *  *The handler should return true if it is to be invoked again;\n               *  returning false will remove the handler after it returns.*\n               *\n               *  As a convenience, the ns parameters applies to the top level element\n               *  and also any of its immediate children.  This is primarily to make\n               *  matching /iq/query elements easy.\n               *\n               *  Options\n               *  ~~~~~~~\n               *  With the options argument, you can specify boolean flags that affect how\n               *  matches are being done.\n               *\n               *  Currently two flags exist:\n               *\n               *  - matchBareFromJid:\n               *      When set to true, the from parameter and the\n               *      from attribute on the stanza will be matched as bare JIDs instead\n               *      of full JIDs. To use this, pass {matchBareFromJid: true} as the\n               *      value of options. The default value for matchBareFromJid is false.\n               *\n               *  - ignoreNamespaceFragment:\n               *      When set to true, a fragment specified on the stanza's namespace\n               *      URL will be ignored when it's matched with the one configured for\n               *      the handler.\n               *\n               *      This means that if you register like this:\n               *      >   connection.addHandler(\n               *      >       handler,\n               *      >       'http://jabber.org/protocol/muc',\n               *      >       null, null, null, null,\n               *      >       {'ignoreNamespaceFragment': true}\n               *      >   );\n               *\n               *      Then a stanza with XML namespace of\n               *      'http://jabber.org/protocol/muc#user' will also be matched. If\n               *      'ignoreNamespaceFragment' is false, then only stanzas with\n               *      'http://jabber.org/protocol/muc' will be matched.\n               *\n               *  Deleting the handler\n               *  ~~~~~~~~~~~~~~~~~~~~\n               *  The return value should be saved if you wish to remove the handler\n               *  with deleteHandler().\n               *\n               *  Parameters:\n               *    (Function) handler - The user callback.\n               *    (String) ns - The namespace to match.\n               *    (String) name - The stanza name to match.\n               *    (String|Array) type - The stanza type (or types if an array) to match.\n               *    (String) id - The stanza id attribute to match.\n               *    (String) from - The stanza from attribute to match.\n               *    (String) options - The handler options\n               *\n               *  Returns:\n               *    A reference to the handler that can be used to remove it.\n               */\n              addHandler: function addHandler(handler, ns, name, type, id, from, options) {\n                var hand = new Strophe.Handler(handler, ns, name, type, id, from, options);\n                this.addHandlers.push(hand);\n                return hand;\n              },\n\n              /** Function: deleteHandler\n               *  Delete a stanza handler for a connection.\n               *\n               *  This function removes a stanza handler from the connection.  The\n               *  handRef parameter is *not* the function passed to addHandler(),\n               *  but is the reference returned from addHandler().\n               *\n               *  Parameters:\n               *    (Strophe.Handler) handRef - The handler reference.\n               */\n              deleteHandler: function deleteHandler(handRef) {\n                // this must be done in the Idle loop so that we don't change\n                // the handlers during iteration\n                this.removeHandlers.push(handRef); // If a handler is being deleted while it is being added,\n                // prevent it from getting added\n\n                var i = this.addHandlers.indexOf(handRef);\n\n                if (i >= 0) {\n                  this.addHandlers.splice(i, 1);\n                }\n              },\n\n              /** Function: registerSASLMechanisms\n               *\n               * Register the SASL mechanisms which will be supported by this instance of\n               * Strophe.Connection (i.e. which this XMPP client will support).\n               *\n               *  Parameters:\n               *    (Array) mechanisms - Array of objects with Strophe.SASLMechanism prototypes\n               *\n               */\n              registerSASLMechanisms: function registerSASLMechanisms(mechanisms) {\n                this.mechanisms = {};\n                mechanisms = mechanisms || [Strophe.SASLAnonymous, Strophe.SASLExternal, Strophe.SASLMD5, Strophe.SASLOAuthBearer, Strophe.SASLXOAuth2, Strophe.SASLPlain, Strophe.SASLSHA1];\n                mechanisms.forEach(this.registerSASLMechanism.bind(this));\n              },\n\n              /** Function: registerSASLMechanism\n               *\n               * Register a single SASL mechanism, to be supported by this client.\n               *\n               *  Parameters:\n               *    (Object) mechanism - Object with a Strophe.SASLMechanism prototype\n               *\n               */\n              registerSASLMechanism: function registerSASLMechanism(mechanism) {\n                this.mechanisms[mechanism.prototype.name] = mechanism;\n              },\n\n              /** Function: disconnect\n               *  Start the graceful disconnection process.\n               *\n               *  This function starts the disconnection process.  This process starts\n               *  by sending unavailable presence and sending BOSH body of type\n               *  terminate.  A timeout handler makes sure that disconnection happens\n               *  even if the BOSH server does not respond.\n               *  If the Connection object isn't connected, at least tries to abort all pending requests\n               *  so the connection object won't generate successful requests (which were already opened).\n               *\n               *  The user supplied connection callback will be notified of the\n               *  progress as this process happens.\n               *\n               *  Parameters:\n               *    (String) reason - The reason the disconnect is occuring.\n               */\n              disconnect: function disconnect(reason) {\n                this._changeConnectStatus(Strophe.Status.DISCONNECTING, reason);\n\n                Strophe.warn(\"Disconnect was called because: \" + reason);\n\n                if (this.connected) {\n                  var pres = false;\n                  this.disconnecting = true;\n\n                  if (this.authenticated) {\n                    pres = $pres({\n                      'xmlns': Strophe.NS.CLIENT,\n                      'type': 'unavailable'\n                    });\n                  } // setup timeout handler\n\n\n                  this._disconnectTimeout = this._addSysTimedHandler(3000, this._onDisconnectTimeout.bind(this));\n\n                  this._proto._disconnect(pres);\n                } else {\n                  Strophe.warn(\"Disconnect was called before Strophe connected to the server\");\n\n                  this._proto._abortAllRequests();\n\n                  this._doDisconnect();\n                }\n              },\n\n              /** PrivateFunction: _changeConnectStatus\n               *  _Private_ helper function that makes sure plugins and the user's\n               *  callback are notified of connection status changes.\n               *\n               *  Parameters:\n               *    (Integer) status - the new connection status, one of the values\n               *      in Strophe.Status\n               *    (String) condition - the error condition or null\n               *    (XMLElement) elem - The triggering stanza.\n               */\n              _changeConnectStatus: function _changeConnectStatus(status, condition, elem) {\n                // notify all plugins listening for status changes\n                for (var k in Strophe._connectionPlugins) {\n                  if (Object.prototype.hasOwnProperty.call(Strophe._connectionPlugins, k)) {\n                    var plugin = this[k];\n\n                    if (plugin.statusChanged) {\n                      try {\n                        plugin.statusChanged(status, condition);\n                      } catch (err) {\n                        Strophe.error(\"\".concat(k, \" plugin caused an exception changing status: \").concat(err));\n                      }\n                    }\n                  }\n                } // notify the user's callback\n\n\n                if (this.connect_callback) {\n                  try {\n                    this.connect_callback(status, condition, elem);\n                  } catch (e) {\n                    Strophe._handleError(e);\n\n                    Strophe.error(\"User connection callback caused an exception: \".concat(e));\n                  }\n                }\n              },\n\n              /** PrivateFunction: _doDisconnect\n               *  _Private_ function to disconnect.\n               *\n               *  This is the last piece of the disconnection logic.  This resets the\n               *  connection and alerts the user's connection callback.\n               */\n              _doDisconnect: function _doDisconnect(condition) {\n                if (typeof this._idleTimeout === \"number\") {\n                  clearTimeout(this._idleTimeout);\n                } // Cancel Disconnect Timeout\n\n\n                if (this._disconnectTimeout !== null) {\n                  this.deleteTimedHandler(this._disconnectTimeout);\n                  this._disconnectTimeout = null;\n                }\n\n                Strophe.debug(\"_doDisconnect was called\");\n\n                this._proto._doDisconnect();\n\n                this.authenticated = false;\n                this.disconnecting = false;\n                this.restored = false; // delete handlers\n\n                this.handlers = [];\n                this.timedHandlers = [];\n                this.removeTimeds = [];\n                this.removeHandlers = [];\n                this.addTimeds = [];\n                this.addHandlers = []; // tell the parent we disconnected\n\n                this._changeConnectStatus(Strophe.Status.DISCONNECTED, condition);\n\n                this.connected = false;\n              },\n\n              /** PrivateFunction: _dataRecv\n               *  _Private_ handler to processes incoming data from the the connection.\n               *\n               *  Except for _connect_cb handling the initial connection request,\n               *  this function handles the incoming data for all requests.  This\n               *  function also fires stanza handlers that match each incoming\n               *  stanza.\n               *\n               *  Parameters:\n               *    (Strophe.Request) req - The request that has data ready.\n               *    (string) req - The stanza a raw string (optiona).\n               */\n              _dataRecv: function _dataRecv(req, raw) {\n                var _this6 = this;\n\n                Strophe.debug(\"_dataRecv called\");\n\n                var elem = this._proto._reqToData(req);\n\n                if (elem === null) {\n                  return;\n                }\n\n                if (this.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n                  if (elem.nodeName === this._proto.strip && elem.childNodes.length) {\n                    this.xmlInput(elem.childNodes[0]);\n                  } else {\n                    this.xmlInput(elem);\n                  }\n                }\n\n                if (this.rawInput !== Strophe.Connection.prototype.rawInput) {\n                  if (raw) {\n                    this.rawInput(raw);\n                  } else {\n                    this.rawInput(Strophe.serialize(elem));\n                  }\n                } // remove handlers scheduled for deletion\n\n\n                while (this.removeHandlers.length > 0) {\n                  var hand = this.removeHandlers.pop();\n                  var i = this.handlers.indexOf(hand);\n\n                  if (i >= 0) {\n                    this.handlers.splice(i, 1);\n                  }\n                } // add handlers scheduled for addition\n\n\n                while (this.addHandlers.length > 0) {\n                  this.handlers.push(this.addHandlers.pop());\n                } // handle graceful disconnect\n\n\n                if (this.disconnecting && this._proto._emptyQueue()) {\n                  this._doDisconnect();\n\n                  return;\n                }\n\n                var type = elem.getAttribute(\"type\");\n\n                if (type !== null && type === \"terminate\") {\n                  // Don't process stanzas that come in after disconnect\n                  if (this.disconnecting) {\n                    return;\n                  } // an error occurred\n\n\n                  var cond = elem.getAttribute(\"condition\");\n                  var conflict = elem.getElementsByTagName(\"conflict\");\n\n                  if (cond !== null) {\n                    if (cond === \"remote-stream-error\" && conflict.length > 0) {\n                      cond = \"conflict\";\n                    }\n\n                    this._changeConnectStatus(Strophe.Status.CONNFAIL, cond);\n                  } else {\n                    this._changeConnectStatus(Strophe.Status.CONNFAIL, Strophe.ErrorCondition.UNKOWN_REASON);\n                  }\n\n                  this._doDisconnect(cond);\n\n                  return;\n                } // send each incoming stanza through the handler chain\n\n\n                Strophe.forEachChild(elem, null, function (child) {\n                  // process handlers\n                  var newList = _this6.handlers;\n                  _this6.handlers = [];\n\n                  for (var _i5 = 0; _i5 < newList.length; _i5++) {\n                    var _hand = newList[_i5]; // encapsulate 'handler.run' not to lose the whole handler list if\n                    // one of the handlers throws an exception\n\n                    try {\n                      if (_hand.isMatch(child) && (_this6.authenticated || !_hand.user)) {\n                        if (_hand.run(child)) {\n                          _this6.handlers.push(_hand);\n                        }\n                      } else {\n                        _this6.handlers.push(_hand);\n                      }\n                    } catch (e) {\n                      // if the handler throws an exception, we consider it as false\n                      Strophe.warn('Removing Strophe handlers due to uncaught exception: ' + e.message);\n                    }\n                  }\n                });\n              },\n\n              /** Attribute: mechanisms\n               *  SASL Mechanisms available for Connection.\n               */\n              mechanisms: {},\n\n              /** PrivateFunction: _connect_cb\n               *  _Private_ handler for initial connection request.\n               *\n               *  This handler is used to process the initial connection request\n               *  response from the BOSH server. It is used to set up authentication\n               *  handlers and start the authentication process.\n               *\n               *  SASL authentication will be attempted if available, otherwise\n               *  the code will fall back to legacy authentication.\n               *\n               *  Parameters:\n               *    (Strophe.Request) req - The current request.\n               *    (Function) _callback - low level (xmpp) connect callback function.\n               *      Useful for plugins with their own xmpp connect callback (when they\n               *      want to do something special).\n               */\n              _connect_cb: function _connect_cb(req, _callback, raw) {\n                Strophe.debug(\"_connect_cb was called\");\n                this.connected = true;\n                var bodyWrap;\n\n                try {\n                  bodyWrap = this._proto._reqToData(req);\n                } catch (e) {\n                  if (e.name !== Strophe.ErrorCondition.BAD_FORMAT) {\n                    throw e;\n                  }\n\n                  this._changeConnectStatus(Strophe.Status.CONNFAIL, Strophe.ErrorCondition.BAD_FORMAT);\n\n                  this._doDisconnect(Strophe.ErrorCondition.BAD_FORMAT);\n                }\n\n                if (!bodyWrap) {\n                  return;\n                }\n\n                if (this.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n                  if (bodyWrap.nodeName === this._proto.strip && bodyWrap.childNodes.length) {\n                    this.xmlInput(bodyWrap.childNodes[0]);\n                  } else {\n                    this.xmlInput(bodyWrap);\n                  }\n                }\n\n                if (this.rawInput !== Strophe.Connection.prototype.rawInput) {\n                  if (raw) {\n                    this.rawInput(raw);\n                  } else {\n                    this.rawInput(Strophe.serialize(bodyWrap));\n                  }\n                }\n\n                var conncheck = this._proto._connect_cb(bodyWrap);\n\n                if (conncheck === Strophe.Status.CONNFAIL) {\n                  return;\n                } // Check for the stream:features tag\n\n\n                var hasFeatures;\n\n                if (bodyWrap.getElementsByTagNameNS) {\n                  hasFeatures = bodyWrap.getElementsByTagNameNS(Strophe.NS.STREAM, \"features\").length > 0;\n                } else {\n                  hasFeatures = bodyWrap.getElementsByTagName(\"stream:features\").length > 0 || bodyWrap.getElementsByTagName(\"features\").length > 0;\n                }\n\n                if (!hasFeatures) {\n                  this._proto._no_auth_received(_callback);\n\n                  return;\n                }\n\n                var matched = [];\n                var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n\n                if (mechanisms.length > 0) {\n                  for (var i = 0; i < mechanisms.length; i++) {\n                    var mech = Strophe.getText(mechanisms[i]);\n                    if (this.mechanisms[mech]) matched.push(this.mechanisms[mech]);\n                  }\n                }\n\n                if (matched.length === 0) {\n                  if (bodyWrap.getElementsByTagName(\"auth\").length === 0) {\n                    // There are no matching SASL mechanisms and also no legacy\n                    // auth available.\n                    this._proto._no_auth_received(_callback);\n\n                    return;\n                  }\n                }\n\n                if (this.do_authentication !== false) {\n                  this.authenticate(matched);\n                }\n              },\n\n              /** Function: sortMechanismsByPriority\n               *\n               *  Sorts an array of objects with prototype SASLMechanism according to\n               *  their priorities.\n               *\n               *  Parameters:\n               *    (Array) mechanisms - Array of SASL mechanisms.\n               *\n               */\n              sortMechanismsByPriority: function sortMechanismsByPriority(mechanisms) {\n                // Sorting mechanisms according to priority.\n                for (var i = 0; i < mechanisms.length - 1; ++i) {\n                  var higher = i;\n\n                  for (var j = i + 1; j < mechanisms.length; ++j) {\n                    if (mechanisms[j].prototype.priority > mechanisms[higher].prototype.priority) {\n                      higher = j;\n                    }\n                  }\n\n                  if (higher !== i) {\n                    var swap = mechanisms[i];\n                    mechanisms[i] = mechanisms[higher];\n                    mechanisms[higher] = swap;\n                  }\n                }\n\n                return mechanisms;\n              },\n\n              /** Function: authenticate\n               * Set up authentication\n               *\n               *  Continues the initial connection request by setting up authentication\n               *  handlers and starting the authentication process.\n               *\n               *  SASL authentication will be attempted if available, otherwise\n               *  the code will fall back to legacy authentication.\n               *\n               *  Parameters:\n               *    (Array) matched - Array of SASL mechanisms supported.\n               *\n               */\n              authenticate: function authenticate(matched) {\n                if (!this._attemptSASLAuth(matched)) {\n                  this._attemptLegacyAuth();\n                }\n              },\n\n              /** PrivateFunction: _attemptSASLAuth\n               *\n               *  Iterate through an array of SASL mechanisms and attempt authentication\n               *  with the highest priority (enabled) mechanism.\n               *\n               *  Parameters:\n               *    (Array) mechanisms - Array of SASL mechanisms.\n               *\n               *  Returns:\n               *    (Boolean) mechanism_found - true or false, depending on whether a\n               *          valid SASL mechanism was found with which authentication could be\n               *          started.\n               */\n              _attemptSASLAuth: function _attemptSASLAuth(mechanisms) {\n                mechanisms = this.sortMechanismsByPriority(mechanisms || []);\n                var mechanism_found = false;\n\n                for (var i = 0; i < mechanisms.length; ++i) {\n                  if (!mechanisms[i].prototype.test(this)) {\n                    continue;\n                  }\n\n                  this._sasl_success_handler = this._addSysHandler(this._sasl_success_cb.bind(this), null, \"success\", null, null);\n                  this._sasl_failure_handler = this._addSysHandler(this._sasl_failure_cb.bind(this), null, \"failure\", null, null);\n                  this._sasl_challenge_handler = this._addSysHandler(this._sasl_challenge_cb.bind(this), null, \"challenge\", null, null);\n                  this._sasl_mechanism = new mechanisms[i]();\n\n                  this._sasl_mechanism.onStart(this);\n\n                  var request_auth_exchange = $build(\"auth\", {\n                    'xmlns': Strophe.NS.SASL,\n                    'mechanism': this._sasl_mechanism.name\n                  });\n\n                  if (this._sasl_mechanism.isClientFirst) {\n                    var response = this._sasl_mechanism.onChallenge(this, null);\n\n                    request_auth_exchange.t(btoa(response));\n                  }\n\n                  this.send(request_auth_exchange.tree());\n                  mechanism_found = true;\n                  break;\n                }\n\n                return mechanism_found;\n              },\n\n              /** PrivateFunction: _sasl_challenge_cb\n               *  _Private_ handler for the SASL challenge\n               *\n               */\n              _sasl_challenge_cb: function _sasl_challenge_cb(elem) {\n                var challenge = atob(Strophe.getText(elem));\n\n                var response = this._sasl_mechanism.onChallenge(this, challenge);\n\n                var stanza = $build('response', {\n                  'xmlns': Strophe.NS.SASL\n                });\n\n                if (response !== \"\") {\n                  stanza.t(btoa(response));\n                }\n\n                this.send(stanza.tree());\n                return true;\n              },\n\n              /** PrivateFunction: _attemptLegacyAuth\n               *\n               *  Attempt legacy (i.e. non-SASL) authentication.\n               */\n              _attemptLegacyAuth: function _attemptLegacyAuth() {\n                if (Strophe.getNodeFromJid(this.jid) === null) {\n                  // we don't have a node, which is required for non-anonymous\n                  // client connections\n                  this._changeConnectStatus(Strophe.Status.CONNFAIL, Strophe.ErrorCondition.MISSING_JID_NODE);\n\n                  this.disconnect(Strophe.ErrorCondition.MISSING_JID_NODE);\n                } else {\n                  // Fall back to legacy authentication\n                  this._changeConnectStatus(Strophe.Status.AUTHENTICATING, null);\n\n                  this._addSysHandler(this._onLegacyAuthIQResult.bind(this), null, null, null, \"_auth_1\");\n\n                  this.send($iq({\n                    'type': \"get\",\n                    'to': this.domain,\n                    'id': \"_auth_1\"\n                  }).c(\"query\", {\n                    xmlns: Strophe.NS.AUTH\n                  }).c(\"username\", {}).t(Strophe.getNodeFromJid(this.jid)).tree());\n                }\n              },\n\n              /** PrivateFunction: _onLegacyAuthIQResult\n               *  _Private_ handler for legacy authentication.\n               *\n               *  This handler is called in response to the initial <iq type='get'/>\n               *  for legacy authentication.  It builds an authentication <iq/> and\n               *  sends it, creating a handler (calling back to _auth2_cb()) to\n               *  handle the result\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The stanza that triggered the callback.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _onLegacyAuthIQResult: function _onLegacyAuthIQResult(elem) {\n                // build plaintext auth iq\n                var iq = $iq({\n                  type: \"set\",\n                  id: \"_auth_2\"\n                }).c('query', {\n                  xmlns: Strophe.NS.AUTH\n                }).c('username', {}).t(Strophe.getNodeFromJid(this.jid)).up().c('password').t(this.pass);\n\n                if (!Strophe.getResourceFromJid(this.jid)) {\n                  // since the user has not supplied a resource, we pick\n                  // a default one here.  unlike other auth methods, the server\n                  // cannot do this for us.\n                  this.jid = Strophe.getBareJidFromJid(this.jid) + '/strophe';\n                }\n\n                iq.up().c('resource', {}).t(Strophe.getResourceFromJid(this.jid));\n\n                this._addSysHandler(this._auth2_cb.bind(this), null, null, null, \"_auth_2\");\n\n                this.send(iq.tree());\n                return false;\n              },\n\n              /** PrivateFunction: _sasl_success_cb\n               *  _Private_ handler for succesful SASL authentication.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The matching stanza.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _sasl_success_cb: function _sasl_success_cb(elem) {\n                var _this7 = this;\n\n                if (this._sasl_data[\"server-signature\"]) {\n                  var serverSignature;\n                  var success = atob(Strophe.getText(elem));\n                  var attribMatch = /([a-z]+)=([^,]+)(,|$)/;\n                  var matches = success.match(attribMatch);\n\n                  if (matches[1] === \"v\") {\n                    serverSignature = matches[2];\n                  }\n\n                  if (serverSignature !== this._sasl_data[\"server-signature\"]) {\n                    // remove old handlers\n                    this.deleteHandler(this._sasl_failure_handler);\n                    this._sasl_failure_handler = null;\n\n                    if (this._sasl_challenge_handler) {\n                      this.deleteHandler(this._sasl_challenge_handler);\n                      this._sasl_challenge_handler = null;\n                    }\n\n                    this._sasl_data = {};\n                    return this._sasl_failure_cb(null);\n                  }\n                }\n\n                Strophe.info(\"SASL authentication succeeded.\");\n\n                if (this._sasl_mechanism) {\n                  this._sasl_mechanism.onSuccess();\n                } // remove old handlers\n\n\n                this.deleteHandler(this._sasl_failure_handler);\n                this._sasl_failure_handler = null;\n\n                if (this._sasl_challenge_handler) {\n                  this.deleteHandler(this._sasl_challenge_handler);\n                  this._sasl_challenge_handler = null;\n                }\n\n                var streamfeature_handlers = [];\n\n                var wrapper = function wrapper(handlers, elem) {\n                  while (handlers.length) {\n                    _this7.deleteHandler(handlers.pop());\n                  }\n\n                  _this7._onStreamFeaturesAfterSASL(elem);\n\n                  return false;\n                };\n\n                streamfeature_handlers.push(this._addSysHandler(function (elem) {\n                  return wrapper(streamfeature_handlers, elem);\n                }, null, \"stream:features\", null, null));\n                streamfeature_handlers.push(this._addSysHandler(function (elem) {\n                  return wrapper(streamfeature_handlers, elem);\n                }, Strophe.NS.STREAM, \"features\", null, null)); // we must send an xmpp:restart now\n\n                this._sendRestart();\n\n                return false;\n              },\n\n              /** PrivateFunction: _onStreamFeaturesAfterSASL\n               *  Parameters:\n               *    (XMLElement) elem - The matching stanza.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _onStreamFeaturesAfterSASL: function _onStreamFeaturesAfterSASL(elem) {\n                // save stream:features for future usage\n                this.features = elem;\n\n                for (var i = 0; i < elem.childNodes.length; i++) {\n                  var child = elem.childNodes[i];\n\n                  if (child.nodeName === 'bind') {\n                    this.do_bind = true;\n                  }\n\n                  if (child.nodeName === 'session') {\n                    this.do_session = true;\n                  }\n                }\n\n                if (!this.do_bind) {\n                  this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n\n                  return false;\n                } else if (!this.options.explicitResourceBinding) {\n                  this.bind();\n                } else {\n                  this._changeConnectStatus(Strophe.Status.BINDREQUIRED, null);\n                }\n\n                return false;\n              },\n\n              /** Function: bind\n               *\n               *  Sends an IQ to the XMPP server to bind a JID resource for this session.\n               *\n               *  https://tools.ietf.org/html/rfc6120#section-7.5\n               *\n               *  If `explicitResourceBinding` was set to a truthy value in the options\n               *  passed to the Strophe.Connection constructor, then this function needs\n               *  to be called explicitly by the client author.\n               *\n               *  Otherwise it'll be called automatically as soon as the XMPP server\n               *  advertises the \"urn:ietf:params:xml:ns:xmpp-bind\" stream feature.\n               */\n              bind: function bind() {\n                if (!this.do_bind) {\n                  Strophe.log(Strophe.LogLevel.INFO, \"Strophe.Connection.prototype.bind called but \\\"do_bind\\\" is false\");\n                  return;\n                }\n\n                this._addSysHandler(this._onResourceBindResultIQ.bind(this), null, null, null, \"_bind_auth_2\");\n\n                var resource = Strophe.getResourceFromJid(this.jid);\n\n                if (resource) {\n                  this.send($iq({\n                    type: \"set\",\n                    id: \"_bind_auth_2\"\n                  }).c('bind', {\n                    xmlns: Strophe.NS.BIND\n                  }).c('resource', {}).t(resource).tree());\n                } else {\n                  this.send($iq({\n                    type: \"set\",\n                    id: \"_bind_auth_2\"\n                  }).c('bind', {\n                    xmlns: Strophe.NS.BIND\n                  }).tree());\n                }\n              },\n\n              /** PrivateFunction: _onResourceBindIQ\n               *  _Private_ handler for binding result and session start.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The matching stanza.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _onResourceBindResultIQ: function _onResourceBindResultIQ(elem) {\n                if (elem.getAttribute(\"type\") === \"error\") {\n                  Strophe.warn(\"Resource binding failed.\");\n                  var conflict = elem.getElementsByTagName(\"conflict\");\n                  var condition;\n\n                  if (conflict.length > 0) {\n                    condition = Strophe.ErrorCondition.CONFLICT;\n                  }\n\n                  this._changeConnectStatus(Strophe.Status.AUTHFAIL, condition, elem);\n\n                  return false;\n                } // TODO - need to grab errors\n\n\n                var bind = elem.getElementsByTagName(\"bind\");\n\n                if (bind.length > 0) {\n                  var jidNode = bind[0].getElementsByTagName(\"jid\");\n\n                  if (jidNode.length > 0) {\n                    this.jid = Strophe.getText(jidNode[0]);\n\n                    if (this.do_session) {\n                      this._establishSession();\n                    } else {\n                      this.authenticated = true;\n\n                      this._changeConnectStatus(Strophe.Status.CONNECTED, null);\n                    }\n                  }\n                } else {\n                  Strophe.warn(\"Resource binding failed.\");\n\n                  this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\n\n                  return false;\n                }\n              },\n\n              /** PrivateFunction: _establishSession\n               *  Send IQ request to establish a session with the XMPP server.\n               *\n               *  See https://xmpp.org/rfcs/rfc3921.html#session\n               *\n               *  Note: The protocol for session establishment has been determined as\n               *  unnecessary and removed in RFC-6121.\n               */\n              _establishSession: function _establishSession() {\n                if (!this.do_session) {\n                  throw new Error(\"Strophe.Connection.prototype._establishSession \" + \"called but apparently \".concat(Strophe.NS.SESSION, \" wasn't advertised by the server\"));\n                }\n\n                this._addSysHandler(this._onSessionResultIQ.bind(this), null, null, null, \"_session_auth_2\");\n\n                this.send($iq({\n                  type: \"set\",\n                  id: \"_session_auth_2\"\n                }).c('session', {\n                  xmlns: Strophe.NS.SESSION\n                }).tree());\n              },\n\n              /** PrivateFunction: _onSessionResultIQ\n               *  _Private_ handler for the server's IQ response to a client's session\n               *  request.\n               *\n               *  This sets Connection.authenticated to true on success, which\n               *  starts the processing of user handlers.\n               *\n               *  See https://xmpp.org/rfcs/rfc3921.html#session\n               *\n               *  Note: The protocol for session establishment has been determined as\n               *  unnecessary and removed in RFC-6121.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The matching stanza.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _onSessionResultIQ: function _onSessionResultIQ(elem) {\n                if (elem.getAttribute(\"type\") === \"result\") {\n                  this.authenticated = true;\n\n                  this._changeConnectStatus(Strophe.Status.CONNECTED, null);\n                } else if (elem.getAttribute(\"type\") === \"error\") {\n                  Strophe.warn(\"Session creation failed.\");\n\n                  this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\n\n                  return false;\n                }\n\n                return false;\n              },\n\n              /** PrivateFunction: _sasl_failure_cb\n               *  _Private_ handler for SASL authentication failure.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The matching stanza.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _sasl_failure_cb: function _sasl_failure_cb(elem) {\n                // delete unneeded handlers\n                if (this._sasl_success_handler) {\n                  this.deleteHandler(this._sasl_success_handler);\n                  this._sasl_success_handler = null;\n                }\n\n                if (this._sasl_challenge_handler) {\n                  this.deleteHandler(this._sasl_challenge_handler);\n                  this._sasl_challenge_handler = null;\n                }\n\n                if (this._sasl_mechanism) this._sasl_mechanism.onFailure();\n\n                this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\n\n                return false;\n              },\n\n              /** PrivateFunction: _auth2_cb\n               *  _Private_ handler to finish legacy authentication.\n               *\n               *  This handler is called when the result from the jabber:iq:auth\n               *  <iq/> stanza is returned.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The stanza that triggered the callback.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _auth2_cb: function _auth2_cb(elem) {\n                if (elem.getAttribute(\"type\") === \"result\") {\n                  this.authenticated = true;\n\n                  this._changeConnectStatus(Strophe.Status.CONNECTED, null);\n                } else if (elem.getAttribute(\"type\") === \"error\") {\n                  this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\n\n                  this.disconnect('authentication failed');\n                }\n\n                return false;\n              },\n\n              /** PrivateFunction: _addSysTimedHandler\n               *  _Private_ function to add a system level timed handler.\n               *\n               *  This function is used to add a Strophe.TimedHandler for the\n               *  library code.  System timed handlers are allowed to run before\n               *  authentication is complete.\n               *\n               *  Parameters:\n               *    (Integer) period - The period of the handler.\n               *    (Function) handler - The callback function.\n               */\n              _addSysTimedHandler: function _addSysTimedHandler(period, handler) {\n                var thand = new Strophe.TimedHandler(period, handler);\n                thand.user = false;\n                this.addTimeds.push(thand);\n                return thand;\n              },\n\n              /** PrivateFunction: _addSysHandler\n               *  _Private_ function to add a system level stanza handler.\n               *\n               *  This function is used to add a Strophe.Handler for the\n               *  library code.  System stanza handlers are allowed to run before\n               *  authentication is complete.\n               *\n               *  Parameters:\n               *    (Function) handler - The callback function.\n               *    (String) ns - The namespace to match.\n               *    (String) name - The stanza name to match.\n               *    (String) type - The stanza type attribute to match.\n               *    (String) id - The stanza id attribute to match.\n               */\n              _addSysHandler: function _addSysHandler(handler, ns, name, type, id) {\n                var hand = new Strophe.Handler(handler, ns, name, type, id);\n                hand.user = false;\n                this.addHandlers.push(hand);\n                return hand;\n              },\n\n              /** PrivateFunction: _onDisconnectTimeout\n               *  _Private_ timeout handler for handling non-graceful disconnection.\n               *\n               *  If the graceful disconnect process does not complete within the\n               *  time allotted, this handler finishes the disconnect anyway.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _onDisconnectTimeout: function _onDisconnectTimeout() {\n                Strophe.debug(\"_onDisconnectTimeout was called\");\n\n                this._changeConnectStatus(Strophe.Status.CONNTIMEOUT, null);\n\n                this._proto._onDisconnectTimeout(); // actually disconnect\n\n\n                this._doDisconnect();\n\n                return false;\n              },\n\n              /** PrivateFunction: _onIdle\n               *  _Private_ handler to process events during idle cycle.\n               *\n               *  This handler is called every 100ms to fire timed handlers that\n               *  are ready and keep poll requests going.\n               */\n              _onIdle: function _onIdle() {\n                var _this8 = this;\n\n                // add timed handlers scheduled for addition\n                // NOTE: we add before remove in the case a timed handler is\n                // added and then deleted before the next _onIdle() call.\n                while (this.addTimeds.length > 0) {\n                  this.timedHandlers.push(this.addTimeds.pop());\n                } // remove timed handlers that have been scheduled for deletion\n\n\n                while (this.removeTimeds.length > 0) {\n                  var thand = this.removeTimeds.pop();\n                  var i = this.timedHandlers.indexOf(thand);\n\n                  if (i >= 0) {\n                    this.timedHandlers.splice(i, 1);\n                  }\n                } // call ready timed handlers\n\n\n                var now = new Date().getTime();\n                var newList = [];\n\n                for (var _i6 = 0; _i6 < this.timedHandlers.length; _i6++) {\n                  var _thand = this.timedHandlers[_i6];\n\n                  if (this.authenticated || !_thand.user) {\n                    var since = _thand.lastCalled + _thand.period;\n\n                    if (since - now <= 0) {\n                      if (_thand.run()) {\n                        newList.push(_thand);\n                      }\n                    } else {\n                      newList.push(_thand);\n                    }\n                  }\n                }\n\n                this.timedHandlers = newList;\n                clearTimeout(this._idleTimeout);\n\n                this._proto._onIdle(); // reactivate the timer only if connected\n\n\n                if (this.connected) {\n                  this._idleTimeout = setTimeout(function () {\n                    return _this8._onIdle();\n                  }, 100);\n                }\n              }\n            };\n            /** Class: Strophe.SASLMechanism\n             *\n             *  encapsulates SASL authentication mechanisms.\n             *\n             *  User code may override the priority for each mechanism or disable it completely.\n             *  See <priority> for information about changing priority and <test> for informatian on\n             *  how to disable a mechanism.\n             *\n             *  By default, all mechanisms are enabled and the priorities are\n             *\n             *      OAUTHBEARER - 60\n             *      SCRAM-SHA1 - 50\n             *      DIGEST-MD5 - 40\n             *      PLAIN - 30\n             *      ANONYMOUS - 20\n             *      EXTERNAL - 10\n             *\n             *  See: Strophe.Connection.addSupportedSASLMechanisms\n             */\n\n            /**\n             * PrivateConstructor: Strophe.SASLMechanism\n             * SASL auth mechanism abstraction.\n             *\n             *  Parameters:\n             *    (String) name - SASL Mechanism name.\n             *    (Boolean) isClientFirst - If client should send response first without challenge.\n             *    (Number) priority - Priority.\n             *\n             *  Returns:\n             *    A new Strophe.SASLMechanism object.\n             */\n\n            Strophe.SASLMechanism = function (name, isClientFirst, priority) {\n              /** PrivateVariable: name\n               *  Mechanism name.\n               */\n              this.name = name;\n              /** PrivateVariable: isClientFirst\n               *  If client sends response without initial server challenge.\n               */\n\n              this.isClientFirst = isClientFirst;\n              /** Variable: priority\n               *  Determines which <SASLMechanism> is chosen for authentication (Higher is better).\n               *  Users may override this to prioritize mechanisms differently.\n               *\n               *  In the default configuration the priorities are\n               *\n               *  SCRAM-SHA1 - 40\n               *  DIGEST-MD5 - 30\n               *  Plain - 20\n               *\n               *  Example: (This will cause Strophe to choose the mechanism that the server sent first)\n               *\n               *  > Strophe.SASLMD5.priority = Strophe.SASLSHA1.priority;\n               *\n               *  See <SASL mechanisms> for a list of available mechanisms.\n               *\n               */\n\n              this.priority = priority;\n            };\n\n            Strophe.SASLMechanism.prototype = {\n              /**\n               *  Function: test\n               *  Checks if mechanism able to run.\n               *  To disable a mechanism, make this return false;\n               *\n               *  To disable plain authentication run\n               *  > Strophe.SASLPlain.test = function() {\n               *  >   return false;\n               *  > }\n               *\n               *  See <SASL mechanisms> for a list of available mechanisms.\n               *\n               *  Parameters:\n               *    (Strophe.Connection) connection - Target Connection.\n               *\n               *  Returns:\n               *    (Boolean) If mechanism was able to run.\n               */\n              test: function test(connection) {\n                return true;\n              },\n\n              /** PrivateFunction: onStart\n               *  Called before starting mechanism on some connection.\n               *\n               *  Parameters:\n               *    (Strophe.Connection) connection - Target Connection.\n               */\n              onStart: function onStart(connection) {\n                this._connection = connection;\n              },\n\n              /** PrivateFunction: onChallenge\n               *  Called by protocol implementation on incoming challenge. If client is\n               *  first (isClientFirst === true) challenge will be null on the first call.\n               *\n               *  Parameters:\n               *    (Strophe.Connection) connection - Target Connection.\n               *    (String) challenge - current challenge to handle.\n               *\n               *  Returns:\n               *    (String) Mechanism response.\n               */\n              onChallenge: function onChallenge(connection, challenge) {\n                throw new Error(\"You should implement challenge handling!\");\n              },\n\n              /** PrivateFunction: onFailure\n               *  Protocol informs mechanism implementation about SASL failure.\n               */\n              onFailure: function onFailure() {\n                this._connection = null;\n              },\n\n              /** PrivateFunction: onSuccess\n               *  Protocol informs mechanism implementation about SASL success.\n               */\n              onSuccess: function onSuccess() {\n                this._connection = null;\n              }\n            };\n            /** Constants: SASL mechanisms\n             *  Available authentication mechanisms\n             *\n             *  Strophe.SASLAnonymous - SASL ANONYMOUS authentication.\n             *  Strophe.SASLPlain - SASL PLAIN authentication.\n             *  Strophe.SASLMD5 - SASL DIGEST-MD5 authentication\n             *  Strophe.SASLSHA1 - SASL SCRAM-SHA1 authentication\n             *  Strophe.SASLOAuthBearer - SASL OAuth Bearer authentication\n             *  Strophe.SASLExternal - SASL EXTERNAL authentication\n             *  Strophe.SASLXOAuth2 - SASL X-OAuth2 authentication\n             */\n            // Building SASL callbacks\n\n            /** PrivateConstructor: SASLAnonymous\n             *  SASL ANONYMOUS authentication.\n             */\n\n            Strophe.SASLAnonymous = function () {};\n\n            Strophe.SASLAnonymous.prototype = new Strophe.SASLMechanism(\"ANONYMOUS\", false, 20);\n\n            Strophe.SASLAnonymous.prototype.test = function (connection) {\n              return connection.authcid === null;\n            };\n            /** PrivateConstructor: SASLPlain\n             *  SASL PLAIN authentication.\n             */\n\n\n            Strophe.SASLPlain = function () {};\n\n            Strophe.SASLPlain.prototype = new Strophe.SASLMechanism(\"PLAIN\", true, 50);\n\n            Strophe.SASLPlain.prototype.test = function (connection) {\n              return connection.authcid !== null;\n            };\n\n            Strophe.SASLPlain.prototype.onChallenge = function (connection) {\n              var auth_str = connection.authzid;\n              auth_str = auth_str + \"\\0\";\n              auth_str = auth_str + connection.authcid;\n              auth_str = auth_str + \"\\0\";\n              auth_str = auth_str + connection.pass;\n              return utils.utf16to8(auth_str);\n            };\n            /** PrivateConstructor: SASLSHA1\n             *  SASL SCRAM SHA 1 authentication.\n             */\n\n\n            Strophe.SASLSHA1 = function () {};\n\n            Strophe.SASLSHA1.prototype = new Strophe.SASLMechanism(\"SCRAM-SHA-1\", true, 70);\n\n            Strophe.SASLSHA1.prototype.test = function (connection) {\n              return connection.authcid !== null;\n            };\n\n            Strophe.SASLSHA1.prototype.onChallenge = function (connection, challenge, test_cnonce) {\n              var cnonce = test_cnonce || MD5.hexdigest(\"\" + Math.random() * 1234567890);\n              var auth_str = \"n=\" + utils.utf16to8(connection.authcid);\n              auth_str += \",r=\";\n              auth_str += cnonce;\n              connection._sasl_data.cnonce = cnonce;\n              connection._sasl_data[\"client-first-message-bare\"] = auth_str;\n              auth_str = \"n,,\" + auth_str;\n\n              this.onChallenge = function (connection, challenge) {\n                var nonce, salt, iter, Hi, U, U_old, i, k;\n                var responseText = \"c=biws,\";\n                var authMessage = \"\".concat(connection._sasl_data[\"client-first-message-bare\"], \",\").concat(challenge, \",\");\n                var cnonce = connection._sasl_data.cnonce;\n                var attribMatch = /([a-z]+)=([^,]+)(,|$)/;\n\n                while (challenge.match(attribMatch)) {\n                  var matches = challenge.match(attribMatch);\n                  challenge = challenge.replace(matches[0], \"\");\n\n                  switch (matches[1]) {\n                    case \"r\":\n                      nonce = matches[2];\n                      break;\n\n                    case \"s\":\n                      salt = matches[2];\n                      break;\n\n                    case \"i\":\n                      iter = matches[2];\n                      break;\n                  }\n                }\n\n                if (nonce.substr(0, cnonce.length) !== cnonce) {\n                  connection._sasl_data = {};\n                  return connection._sasl_failure_cb();\n                }\n\n                responseText += \"r=\" + nonce;\n                authMessage += responseText;\n                salt = atob(salt);\n                salt += \"\\x00\\x00\\x00\\x01\";\n                var pass = utils.utf16to8(connection.pass);\n                Hi = U_old = SHA1.core_hmac_sha1(pass, salt);\n\n                for (i = 1; i < iter; i++) {\n                  U = SHA1.core_hmac_sha1(pass, SHA1.binb2str(U_old));\n\n                  for (k = 0; k < 5; k++) {\n                    Hi[k] ^= U[k];\n                  }\n\n                  U_old = U;\n                }\n\n                Hi = SHA1.binb2str(Hi);\n                var clientKey = SHA1.core_hmac_sha1(Hi, \"Client Key\");\n                var serverKey = SHA1.str_hmac_sha1(Hi, \"Server Key\");\n                var clientSignature = SHA1.core_hmac_sha1(SHA1.str_sha1(SHA1.binb2str(clientKey)), authMessage);\n                connection._sasl_data[\"server-signature\"] = SHA1.b64_hmac_sha1(serverKey, authMessage);\n\n                for (k = 0; k < 5; k++) {\n                  clientKey[k] ^= clientSignature[k];\n                }\n\n                responseText += \",p=\" + btoa(SHA1.binb2str(clientKey));\n                return responseText;\n              };\n\n              return auth_str;\n            };\n            /** PrivateConstructor: SASLMD5\n             *  SASL DIGEST MD5 authentication.\n             */\n\n\n            Strophe.SASLMD5 = function () {};\n\n            Strophe.SASLMD5.prototype = new Strophe.SASLMechanism(\"DIGEST-MD5\", false, 60);\n\n            Strophe.SASLMD5.prototype.test = function (connection) {\n              return connection.authcid !== null;\n            };\n            /** PrivateFunction: _quote\n             *  _Private_ utility function to backslash escape and quote strings.\n             *\n             *  Parameters:\n             *    (String) str - The string to be quoted.\n             *\n             *  Returns:\n             *    quoted string\n             */\n\n\n            Strophe.SASLMD5.prototype._quote = function (str) {\n              return '\"' + str.replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, '\\\\\"') + '\"'; //\" end string workaround for emacs\n            };\n\n            Strophe.SASLMD5.prototype.onChallenge = function (connection, challenge, test_cnonce) {\n              var attribMatch = /([a-z]+)=(\"[^\"]+\"|[^,\"]+)(?:,|$)/;\n              var cnonce = test_cnonce || MD5.hexdigest(\"\" + Math.random() * 1234567890);\n              var realm = \"\";\n              var host = null;\n              var nonce = \"\";\n              var qop = \"\";\n\n              while (challenge.match(attribMatch)) {\n                var matches = challenge.match(attribMatch);\n                challenge = challenge.replace(matches[0], \"\");\n                matches[2] = matches[2].replace(/^\"(.+)\"$/, \"$1\");\n\n                switch (matches[1]) {\n                  case \"realm\":\n                    realm = matches[2];\n                    break;\n\n                  case \"nonce\":\n                    nonce = matches[2];\n                    break;\n\n                  case \"qop\":\n                    qop = matches[2];\n                    break;\n\n                  case \"host\":\n                    host = matches[2];\n                    break;\n                }\n              }\n\n              var digest_uri = connection.servtype + \"/\" + connection.domain;\n\n              if (host !== null) {\n                digest_uri = digest_uri + \"/\" + host;\n              }\n\n              var cred = utils.utf16to8(connection.authcid + \":\" + realm + \":\" + this._connection.pass);\n              var A1 = MD5.hash(cred) + \":\" + nonce + \":\" + cnonce;\n              var A2 = 'AUTHENTICATE:' + digest_uri;\n              var responseText = \"\";\n              responseText += 'charset=utf-8,';\n              responseText += 'username=' + this._quote(utils.utf16to8(connection.authcid)) + ',';\n              responseText += 'realm=' + this._quote(realm) + ',';\n              responseText += 'nonce=' + this._quote(nonce) + ',';\n              responseText += 'nc=00000001,';\n              responseText += 'cnonce=' + this._quote(cnonce) + ',';\n              responseText += 'digest-uri=' + this._quote(digest_uri) + ',';\n              responseText += 'response=' + MD5.hexdigest(MD5.hexdigest(A1) + \":\" + nonce + \":00000001:\" + cnonce + \":auth:\" + MD5.hexdigest(A2)) + \",\";\n              responseText += 'qop=auth';\n\n              this.onChallenge = function () {\n                return \"\";\n              };\n\n              return responseText;\n            };\n            /** PrivateConstructor: SASLOAuthBearer\n             *  SASL OAuth Bearer authentication.\n             */\n\n\n            Strophe.SASLOAuthBearer = function () {};\n\n            Strophe.SASLOAuthBearer.prototype = new Strophe.SASLMechanism(\"OAUTHBEARER\", true, 40);\n\n            Strophe.SASLOAuthBearer.prototype.test = function (connection) {\n              return connection.pass !== null;\n            };\n\n            Strophe.SASLOAuthBearer.prototype.onChallenge = function (connection) {\n              var auth_str = 'n,';\n\n              if (connection.authcid !== null) {\n                auth_str = auth_str + 'a=' + connection.authzid;\n              }\n\n              auth_str = auth_str + ',';\n              auth_str = auth_str + \"\\x01\";\n              auth_str = auth_str + 'auth=Bearer ';\n              auth_str = auth_str + connection.pass;\n              auth_str = auth_str + \"\\x01\";\n              auth_str = auth_str + \"\\x01\";\n              return utils.utf16to8(auth_str);\n            };\n            /** PrivateConstructor: SASLExternal\n             *  SASL EXTERNAL authentication.\n             *\n             *  The EXTERNAL mechanism allows a client to request the server to use\n             *  credentials established by means external to the mechanism to\n             *  authenticate the client. The external means may be, for instance,\n             *  TLS services.\n             */\n\n\n            Strophe.SASLExternal = function () {};\n\n            Strophe.SASLExternal.prototype = new Strophe.SASLMechanism(\"EXTERNAL\", true, 10);\n\n            Strophe.SASLExternal.prototype.onChallenge = function (connection) {\n              /** According to XEP-178, an authzid SHOULD NOT be presented when the\n               * authcid contained or implied in the client certificate is the JID (i.e.\n               * authzid) with which the user wants to log in as.\n               *\n               * To NOT send the authzid, the user should therefore set the authcid equal\n               * to the JID when instantiating a new Strophe.Connection object.\n               */\n              return connection.authcid === connection.authzid ? '' : connection.authzid;\n            };\n            /** PrivateConstructor: SASLXOAuth2\n             *  SASL X-OAuth2 authentication.\n             */\n\n\n            Strophe.SASLXOAuth2 = function () {};\n\n            Strophe.SASLXOAuth2.prototype = new Strophe.SASLMechanism(\"X-OAUTH2\", true, 30);\n\n            Strophe.SASLXOAuth2.prototype.test = function (connection) {\n              return connection.pass !== null;\n            };\n\n            Strophe.SASLXOAuth2.prototype.onChallenge = function (connection) {\n              var auth_str = \"\\0\";\n\n              if (connection.authcid !== null) {\n                auth_str = auth_str + connection.authzid;\n              }\n\n              auth_str = auth_str + \"\\0\";\n              auth_str = auth_str + connection.pass;\n              return utils.utf16to8(auth_str);\n            };\n            var core = {\n              'Strophe': Strophe,\n              '$build': $build,\n              '$iq': $iq,\n              '$msg': $msg,\n              '$pres': $pres,\n              'SHA1': SHA1,\n              'MD5': MD5,\n              'b64_hmac_sha1': SHA1.b64_hmac_sha1,\n              'b64_sha1': SHA1.b64_sha1,\n              'str_hmac_sha1': SHA1.str_hmac_sha1,\n              'str_sha1': SHA1.str_sha1\n            };\n\n            /*\n                This program is distributed under the terms of the MIT license.\n                Please see the LICENSE file for details.\n\n                Copyright 2006-2008, OGG, LLC\n            */\n            var Strophe$1 = core.Strophe;\n            var $build$1 = core.$build;\n            /** PrivateClass: Strophe.Request\n             *  _Private_ helper class that provides a cross implementation abstraction\n             *  for a BOSH related XMLHttpRequest.\n             *\n             *  The Strophe.Request class is used internally to encapsulate BOSH request\n             *  information.  It is not meant to be used from user's code.\n             */\n\n            /** PrivateConstructor: Strophe.Request\n             *  Create and initialize a new Strophe.Request object.\n             *\n             *  Parameters:\n             *    (XMLElement) elem - The XML data to be sent in the request.\n             *    (Function) func - The function that will be called when the\n             *      XMLHttpRequest readyState changes.\n             *    (Integer) rid - The BOSH rid attribute associated with this request.\n             *    (Integer) sends - The number of times this same request has been sent.\n             */\n\n            Strophe$1.Request = function (elem, func, rid, sends) {\n              this.id = ++Strophe$1._requestId;\n              this.xmlData = elem;\n              this.data = Strophe$1.serialize(elem); // save original function in case we need to make a new request\n              // from this one.\n\n              this.origFunc = func;\n              this.func = func;\n              this.rid = rid;\n              this.date = NaN;\n              this.sends = sends || 0;\n              this.abort = false;\n              this.dead = null;\n\n              this.age = function () {\n                if (!this.date) {\n                  return 0;\n                }\n\n                var now = new Date();\n                return (now - this.date) / 1000;\n              };\n\n              this.timeDead = function () {\n                if (!this.dead) {\n                  return 0;\n                }\n\n                var now = new Date();\n                return (now - this.dead) / 1000;\n              };\n\n              this.xhr = this._newXHR();\n            };\n\n            Strophe$1.Request.prototype = {\n              /** PrivateFunction: getResponse\n               *  Get a response from the underlying XMLHttpRequest.\n               *\n               *  This function attempts to get a response from the request and checks\n               *  for errors.\n               *\n               *  Throws:\n               *    \"parsererror\" - A parser error occured.\n               *    \"bad-format\" - The entity has sent XML that cannot be processed.\n               *\n               *  Returns:\n               *    The DOM element tree of the response.\n               */\n              getResponse: function getResponse() {\n                var node = null;\n\n                if (this.xhr.responseXML && this.xhr.responseXML.documentElement) {\n                  node = this.xhr.responseXML.documentElement;\n\n                  if (node.tagName === \"parsererror\") {\n                    Strophe$1.error(\"invalid response received\");\n                    Strophe$1.error(\"responseText: \" + this.xhr.responseText);\n                    Strophe$1.error(\"responseXML: \" + Strophe$1.serialize(this.xhr.responseXML));\n                    throw new Error(\"parsererror\");\n                  }\n                } else if (this.xhr.responseText) {\n                  // In React Native, we may get responseText but no responseXML.  We can try to parse it manually.\n                  Strophe$1.debug(\"Got responseText but no responseXML; attempting to parse it with DOMParser...\");\n                  node = new DOMParser().parseFromString(this.xhr.responseText, 'application/xml').documentElement;\n\n                  if (!node) {\n                    throw new Error('Parsing produced null node');\n                  } else if (node.querySelector('parsererror')) {\n                    Strophe$1.error(\"invalid response received: \" + node.querySelector('parsererror').textContent);\n                    Strophe$1.error(\"responseText: \" + this.xhr.responseText);\n                    var error = new Error();\n                    error.name = Strophe$1.ErrorCondition.BAD_FORMAT;\n                    throw error;\n                  }\n                }\n\n                return node;\n              },\n\n              /** PrivateFunction: _newXHR\n               *  _Private_ helper function to create XMLHttpRequests.\n               *\n               *  This function creates XMLHttpRequests across all implementations.\n               *\n               *  Returns:\n               *    A new XMLHttpRequest.\n               */\n              _newXHR: function _newXHR() {\n                var xhr = null;\n\n                if (window.XMLHttpRequest) {\n                  xhr = new XMLHttpRequest();\n\n                  if (xhr.overrideMimeType) {\n                    xhr.overrideMimeType(\"text/xml; charset=utf-8\");\n                  }\n                } else if (window.ActiveXObject) {\n                  xhr = new ActiveXObject(\"Microsoft.XMLHTTP\");\n                } // use Function.bind() to prepend ourselves as an argument\n\n\n                xhr.onreadystatechange = this.func.bind(null, this);\n                return xhr;\n              }\n            };\n            /** Class: Strophe.Bosh\n             *  _Private_ helper class that handles BOSH Connections\n             *\n             *  The Strophe.Bosh class is used internally by Strophe.Connection\n             *  to encapsulate BOSH sessions. It is not meant to be used from user's code.\n             */\n\n            /** File: bosh.js\n             *  A JavaScript library to enable BOSH in Strophejs.\n             *\n             *  this library uses Bidirectional-streams Over Synchronous HTTP (BOSH)\n             *  to emulate a persistent, stateful, two-way connection to an XMPP server.\n             *  More information on BOSH can be found in XEP 124.\n             */\n\n            /** PrivateConstructor: Strophe.Bosh\n             *  Create and initialize a Strophe.Bosh object.\n             *\n             *  Parameters:\n             *    (Strophe.Connection) connection - The Strophe.Connection that will use BOSH.\n             *\n             *  Returns:\n             *    A new Strophe.Bosh object.\n             */\n\n            Strophe$1.Bosh = function (connection) {\n              this._conn = connection;\n              /* request id for body tags */\n\n              this.rid = Math.floor(Math.random() * 4294967295);\n              /* The current session ID. */\n\n              this.sid = null; // default BOSH values\n\n              this.hold = 1;\n              this.wait = 60;\n              this.window = 5;\n              this.errors = 0;\n              this.inactivity = null;\n              this.lastResponseHeaders = null;\n              this._requests = [];\n            };\n\n            Strophe$1.Bosh.prototype = {\n              /** Variable: strip\n               *\n               *  BOSH-Connections will have all stanzas wrapped in a <body> tag when\n               *  passed to <Strophe.Connection.xmlInput> or <Strophe.Connection.xmlOutput>.\n               *  To strip this tag, User code can set <Strophe.Bosh.strip> to \"body\":\n               *\n               *  > Strophe.Bosh.prototype.strip = \"body\";\n               *\n               *  This will enable stripping of the body tag in both\n               *  <Strophe.Connection.xmlInput> and <Strophe.Connection.xmlOutput>.\n               */\n              strip: null,\n\n              /** PrivateFunction: _buildBody\n               *  _Private_ helper function to generate the <body/> wrapper for BOSH.\n               *\n               *  Returns:\n               *    A Strophe.Builder with a <body/> element.\n               */\n              _buildBody: function _buildBody() {\n                var bodyWrap = $build$1('body', {\n                  'rid': this.rid++,\n                  'xmlns': Strophe$1.NS.HTTPBIND\n                });\n\n                if (this.sid !== null) {\n                  bodyWrap.attrs({\n                    'sid': this.sid\n                  });\n                }\n\n                if (this._conn.options.keepalive && this._conn._sessionCachingSupported()) {\n                  this._cacheSession();\n                }\n\n                return bodyWrap;\n              },\n\n              /** PrivateFunction: _reset\n               *  Reset the connection.\n               *\n               *  This function is called by the reset function of the Strophe Connection\n               */\n              _reset: function _reset() {\n                this.rid = Math.floor(Math.random() * 4294967295);\n                this.sid = null;\n                this.errors = 0;\n\n                if (this._conn._sessionCachingSupported()) {\n                  window.sessionStorage.removeItem('strophe-bosh-session');\n                }\n\n                this._conn.nextValidRid(this.rid);\n              },\n\n              /** PrivateFunction: _connect\n               *  _Private_ function that initializes the BOSH connection.\n               *\n               *  Creates and sends the Request that initializes the BOSH connection.\n               */\n              _connect: function _connect(wait, hold, route) {\n                this.wait = wait || this.wait;\n                this.hold = hold || this.hold;\n                this.errors = 0;\n\n                var body = this._buildBody().attrs({\n                  \"to\": this._conn.domain,\n                  \"xml:lang\": \"en\",\n                  \"wait\": this.wait,\n                  \"hold\": this.hold,\n                  \"content\": \"text/xml; charset=utf-8\",\n                  \"ver\": \"1.6\",\n                  \"xmpp:version\": \"1.0\",\n                  \"xmlns:xmpp\": Strophe$1.NS.BOSH\n                });\n\n                if (route) {\n                  body.attrs({\n                    'route': route\n                  });\n                }\n\n                var _connect_cb = this._conn._connect_cb;\n\n                this._requests.push(new Strophe$1.Request(body.tree(), this._onRequestStateChange.bind(this, _connect_cb.bind(this._conn)), body.tree().getAttribute(\"rid\")));\n\n                this._throttledRequestHandler();\n              },\n\n              /** PrivateFunction: _attach\n               *  Attach to an already created and authenticated BOSH session.\n               *\n               *  This function is provided to allow Strophe to attach to BOSH\n               *  sessions which have been created externally, perhaps by a Web\n               *  application.  This is often used to support auto-login type features\n               *  without putting user credentials into the page.\n               *\n               *  Parameters:\n               *    (String) jid - The full JID that is bound by the session.\n               *    (String) sid - The SID of the BOSH session.\n               *    (String) rid - The current RID of the BOSH session.  This RID\n               *      will be used by the next request.\n               *    (Function) callback The connect callback function.\n               *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n               *      time the server will wait before returning an empty result for\n               *      a request.  The default setting of 60 seconds is recommended.\n               *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n               *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n               *      number of connections the server will hold at one time.  This\n               *      should almost always be set to 1 (the default).\n               *    (Integer) wind - The optional HTTBIND window value.  This is the\n               *      allowed range of request ids that are valid.  The default is 5.\n               */\n              _attach: function _attach(jid, sid, rid, callback, wait, hold, wind) {\n                this._conn.jid = jid;\n                this.sid = sid;\n                this.rid = rid;\n                this._conn.connect_callback = callback;\n                this._conn.domain = Strophe$1.getDomainFromJid(this._conn.jid);\n                this._conn.authenticated = true;\n                this._conn.connected = true;\n                this.wait = wait || this.wait;\n                this.hold = hold || this.hold;\n                this.window = wind || this.window;\n\n                this._conn._changeConnectStatus(Strophe$1.Status.ATTACHED, null);\n              },\n\n              /** PrivateFunction: _restore\n               *  Attempt to restore a cached BOSH session\n               *\n               *  Parameters:\n               *    (String) jid - The full JID that is bound by the session.\n               *      This parameter is optional but recommended, specifically in cases\n               *      where prebinded BOSH sessions are used where it's important to know\n               *      that the right session is being restored.\n               *    (Function) callback The connect callback function.\n               *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n               *      time the server will wait before returning an empty result for\n               *      a request.  The default setting of 60 seconds is recommended.\n               *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n               *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n               *      number of connections the server will hold at one time.  This\n               *      should almost always be set to 1 (the default).\n               *    (Integer) wind - The optional HTTBIND window value.  This is the\n               *      allowed range of request ids that are valid.  The default is 5.\n               */\n              _restore: function _restore(jid, callback, wait, hold, wind) {\n                var session = JSON.parse(window.sessionStorage.getItem('strophe-bosh-session'));\n\n                if (typeof session !== \"undefined\" && session !== null && session.rid && session.sid && session.jid && (typeof jid === \"undefined\" || jid === null || Strophe$1.getBareJidFromJid(session.jid) === Strophe$1.getBareJidFromJid(jid) || // If authcid is null, then it's an anonymous login, so\n                // we compare only the domains:\n                Strophe$1.getNodeFromJid(jid) === null && Strophe$1.getDomainFromJid(session.jid) === jid)) {\n                  this._conn.restored = true;\n\n                  this._attach(session.jid, session.sid, session.rid, callback, wait, hold, wind);\n                } else {\n                  var error = new Error(\"_restore: no restoreable session.\");\n                  error.name = \"StropheSessionError\";\n                  throw error;\n                }\n              },\n\n              /** PrivateFunction: _cacheSession\n               *  _Private_ handler for the beforeunload event.\n               *\n               *  This handler is used to process the Bosh-part of the initial request.\n               *  Parameters:\n               *    (Strophe.Request) bodyWrap - The received stanza.\n               */\n              _cacheSession: function _cacheSession() {\n                if (this._conn.authenticated) {\n                  if (this._conn.jid && this.rid && this.sid) {\n                    window.sessionStorage.setItem('strophe-bosh-session', JSON.stringify({\n                      'jid': this._conn.jid,\n                      'rid': this.rid,\n                      'sid': this.sid\n                    }));\n                  }\n                } else {\n                  window.sessionStorage.removeItem('strophe-bosh-session');\n                }\n              },\n\n              /** PrivateFunction: _connect_cb\n               *  _Private_ handler for initial connection request.\n               *\n               *  This handler is used to process the Bosh-part of the initial request.\n               *  Parameters:\n               *    (Strophe.Request) bodyWrap - The received stanza.\n               */\n              _connect_cb: function _connect_cb(bodyWrap) {\n                var typ = bodyWrap.getAttribute(\"type\");\n\n                if (typ !== null && typ === \"terminate\") {\n                  // an error occurred\n                  var cond = bodyWrap.getAttribute(\"condition\");\n                  Strophe$1.error(\"BOSH-Connection failed: \" + cond);\n                  var conflict = bodyWrap.getElementsByTagName(\"conflict\");\n\n                  if (cond !== null) {\n                    if (cond === \"remote-stream-error\" && conflict.length > 0) {\n                      cond = \"conflict\";\n                    }\n\n                    this._conn._changeConnectStatus(Strophe$1.Status.CONNFAIL, cond);\n                  } else {\n                    this._conn._changeConnectStatus(Strophe$1.Status.CONNFAIL, \"unknown\");\n                  }\n\n                  this._conn._doDisconnect(cond);\n\n                  return Strophe$1.Status.CONNFAIL;\n                } // check to make sure we don't overwrite these if _connect_cb is\n                // called multiple times in the case of missing stream:features\n\n\n                if (!this.sid) {\n                  this.sid = bodyWrap.getAttribute(\"sid\");\n                }\n\n                var wind = bodyWrap.getAttribute('requests');\n\n                if (wind) {\n                  this.window = parseInt(wind, 10);\n                }\n\n                var hold = bodyWrap.getAttribute('hold');\n\n                if (hold) {\n                  this.hold = parseInt(hold, 10);\n                }\n\n                var wait = bodyWrap.getAttribute('wait');\n\n                if (wait) {\n                  this.wait = parseInt(wait, 10);\n                }\n\n                var inactivity = bodyWrap.getAttribute('inactivity');\n\n                if (inactivity) {\n                  this.inactivity = parseInt(inactivity, 10);\n                }\n              },\n\n              /** PrivateFunction: _disconnect\n               *  _Private_ part of Connection.disconnect for Bosh\n               *\n               *  Parameters:\n               *    (Request) pres - This stanza will be sent before disconnecting.\n               */\n              _disconnect: function _disconnect(pres) {\n                this._sendTerminate(pres);\n              },\n\n              /** PrivateFunction: _doDisconnect\n               *  _Private_ function to disconnect.\n               *\n               *  Resets the SID and RID.\n               */\n              _doDisconnect: function _doDisconnect() {\n                this.sid = null;\n                this.rid = Math.floor(Math.random() * 4294967295);\n\n                if (this._conn._sessionCachingSupported()) {\n                  window.sessionStorage.removeItem('strophe-bosh-session');\n                }\n\n                this._conn.nextValidRid(this.rid);\n              },\n\n              /** PrivateFunction: _emptyQueue\n               * _Private_ function to check if the Request queue is empty.\n               *\n               *  Returns:\n               *    True, if there are no Requests queued, False otherwise.\n               */\n              _emptyQueue: function _emptyQueue() {\n                return this._requests.length === 0;\n              },\n\n              /** PrivateFunction: _callProtocolErrorHandlers\n               *  _Private_ function to call error handlers registered for HTTP errors.\n               *\n               *  Parameters:\n               *    (Strophe.Request) req - The request that is changing readyState.\n               */\n              _callProtocolErrorHandlers: function _callProtocolErrorHandlers(req) {\n                var reqStatus = this._getRequestStatus(req);\n\n                var err_callback = this._conn.protocolErrorHandlers.HTTP[reqStatus];\n\n                if (err_callback) {\n                  err_callback.call(this, reqStatus);\n                }\n              },\n\n              /** PrivateFunction: _hitError\n               *  _Private_ function to handle the error count.\n               *\n               *  Requests are resent automatically until their error count reaches\n               *  5.  Each time an error is encountered, this function is called to\n               *  increment the count and disconnect if the count is too high.\n               *\n               *  Parameters:\n               *    (Integer) reqStatus - The request status.\n               */\n              _hitError: function _hitError(reqStatus) {\n                this.errors++;\n                Strophe$1.warn(\"request errored, status: \" + reqStatus + \", number of errors: \" + this.errors);\n\n                if (this.errors > 4) {\n                  this._conn._onDisconnectTimeout();\n                }\n              },\n\n              /** PrivateFunction: _no_auth_received\n               *\n               * Called on stream start/restart when no stream:features\n               * has been received and sends a blank poll request.\n               */\n              _no_auth_received: function _no_auth_received(callback) {\n                Strophe$1.warn(\"Server did not yet offer a supported authentication \" + \"mechanism. Sending a blank poll request.\");\n\n                if (callback) {\n                  callback = callback.bind(this._conn);\n                } else {\n                  callback = this._conn._connect_cb.bind(this._conn);\n                }\n\n                var body = this._buildBody();\n\n                this._requests.push(new Strophe$1.Request(body.tree(), this._onRequestStateChange.bind(this, callback), body.tree().getAttribute(\"rid\")));\n\n                this._throttledRequestHandler();\n              },\n\n              /** PrivateFunction: _onDisconnectTimeout\n               *  _Private_ timeout handler for handling non-graceful disconnection.\n               *\n               *  Cancels all remaining Requests and clears the queue.\n               */\n              _onDisconnectTimeout: function _onDisconnectTimeout() {\n                this._abortAllRequests();\n              },\n\n              /** PrivateFunction: _abortAllRequests\n               *  _Private_ helper function that makes sure all pending requests are aborted.\n               */\n              _abortAllRequests: function _abortAllRequests() {\n                while (this._requests.length > 0) {\n                  var req = this._requests.pop();\n\n                  req.abort = true;\n                  req.xhr.abort();\n\n                  req.xhr.onreadystatechange = function () {};\n                }\n              },\n\n              /** PrivateFunction: _onIdle\n               *  _Private_ handler called by Strophe.Connection._onIdle\n               *\n               *  Sends all queued Requests or polls with empty Request if there are none.\n               */\n              _onIdle: function _onIdle() {\n                var data = this._conn._data; // if no requests are in progress, poll\n\n                if (this._conn.authenticated && this._requests.length === 0 && data.length === 0 && !this._conn.disconnecting) {\n                  Strophe$1.debug(\"no requests during idle cycle, sending blank request\");\n                  data.push(null);\n                }\n\n                if (this._conn.paused) {\n                  return;\n                }\n\n                if (this._requests.length < 2 && data.length > 0) {\n                  var body = this._buildBody();\n\n                  for (var i = 0; i < data.length; i++) {\n                    if (data[i] !== null) {\n                      if (data[i] === \"restart\") {\n                        body.attrs({\n                          \"to\": this._conn.domain,\n                          \"xml:lang\": \"en\",\n                          \"xmpp:restart\": \"true\",\n                          \"xmlns:xmpp\": Strophe$1.NS.BOSH\n                        });\n                      } else {\n                        body.cnode(data[i]).up();\n                      }\n                    }\n                  }\n\n                  delete this._conn._data;\n                  this._conn._data = [];\n\n                  this._requests.push(new Strophe$1.Request(body.tree(), this._onRequestStateChange.bind(this, this._conn._dataRecv.bind(this._conn)), body.tree().getAttribute(\"rid\")));\n\n                  this._throttledRequestHandler();\n                }\n\n                if (this._requests.length > 0) {\n                  var time_elapsed = this._requests[0].age();\n\n                  if (this._requests[0].dead !== null) {\n                    if (this._requests[0].timeDead() > Math.floor(Strophe$1.SECONDARY_TIMEOUT * this.wait)) {\n                      this._throttledRequestHandler();\n                    }\n                  }\n\n                  if (time_elapsed > Math.floor(Strophe$1.TIMEOUT * this.wait)) {\n                    Strophe$1.warn(\"Request \" + this._requests[0].id + \" timed out, over \" + Math.floor(Strophe$1.TIMEOUT * this.wait) + \" seconds since last activity\");\n\n                    this._throttledRequestHandler();\n                  }\n                }\n              },\n\n              /** PrivateFunction: _getRequestStatus\n               *\n               *  Returns the HTTP status code from a Strophe.Request\n               *\n               *  Parameters:\n               *    (Strophe.Request) req - The Strophe.Request instance.\n               *    (Integer) def - The default value that should be returned if no\n               *          status value was found.\n               */\n              _getRequestStatus: function _getRequestStatus(req, def) {\n                var reqStatus;\n\n                if (req.xhr.readyState === 4) {\n                  try {\n                    reqStatus = req.xhr.status;\n                  } catch (e) {\n                    // ignore errors from undefined status attribute. Works\n                    // around a browser bug\n                    Strophe$1.error(\"Caught an error while retrieving a request's status, \" + \"reqStatus: \" + reqStatus);\n                  }\n                }\n\n                if (typeof reqStatus === \"undefined\") {\n                  reqStatus = typeof def === 'number' ? def : 0;\n                }\n\n                return reqStatus;\n              },\n\n              /** PrivateFunction: _onRequestStateChange\n               *  _Private_ handler for Strophe.Request state changes.\n               *\n               *  This function is called when the XMLHttpRequest readyState changes.\n               *  It contains a lot of error handling logic for the many ways that\n               *  requests can fail, and calls the request callback when requests\n               *  succeed.\n               *\n               *  Parameters:\n               *    (Function) func - The handler for the request.\n               *    (Strophe.Request) req - The request that is changing readyState.\n               */\n              _onRequestStateChange: function _onRequestStateChange(func, req) {\n                Strophe$1.debug(\"request id \" + req.id + \".\" + req.sends + \" state changed to \" + req.xhr.readyState);\n\n                if (req.abort) {\n                  req.abort = false;\n                  return;\n                }\n\n                if (req.xhr.readyState !== 4) {\n                  // The request is not yet complete\n                  return;\n                }\n\n                var reqStatus = this._getRequestStatus(req);\n\n                this.lastResponseHeaders = req.xhr.getAllResponseHeaders();\n\n                if (this.disconnecting && reqStatus >= 400) {\n                  this._hitError(reqStatus);\n\n                  this._callProtocolErrorHandlers(req);\n\n                  return;\n                }\n\n                var valid_request = reqStatus > 0 && reqStatus < 500;\n                var too_many_retries = req.sends > this._conn.maxRetries;\n\n                if (valid_request || too_many_retries) {\n                  // remove from internal queue\n                  this._removeRequest(req);\n\n                  Strophe$1.debug(\"request id \" + req.id + \" should now be removed\");\n                }\n\n                if (reqStatus === 200) {\n                  // request succeeded\n                  var reqIs0 = this._requests[0] === req;\n                  var reqIs1 = this._requests[1] === req; // if request 1 finished, or request 0 finished and request\n                  // 1 is over Strophe.SECONDARY_TIMEOUT seconds old, we need to\n                  // restart the other - both will be in the first spot, as the\n                  // completed request has been removed from the queue already\n\n                  if (reqIs1 || reqIs0 && this._requests.length > 0 && this._requests[0].age() > Math.floor(Strophe$1.SECONDARY_TIMEOUT * this.wait)) {\n                    this._restartRequest(0);\n                  }\n\n                  this._conn.nextValidRid(Number(req.rid) + 1);\n\n                  Strophe$1.debug(\"request id \" + req.id + \".\" + req.sends + \" got 200\");\n                  func(req); // call handler\n\n                  this.errors = 0;\n                } else if (reqStatus === 0 || reqStatus >= 400 && reqStatus < 600 || reqStatus >= 12000) {\n                  // request failed\n                  Strophe$1.error(\"request id \" + req.id + \".\" + req.sends + \" error \" + reqStatus + \" happened\");\n\n                  this._hitError(reqStatus);\n\n                  this._callProtocolErrorHandlers(req);\n\n                  if (reqStatus >= 400 && reqStatus < 500) {\n                    this._conn._changeConnectStatus(Strophe$1.Status.DISCONNECTING, null);\n\n                    this._conn._doDisconnect();\n                  }\n                } else {\n                  Strophe$1.error(\"request id \" + req.id + \".\" + req.sends + \" error \" + reqStatus + \" happened\");\n                }\n\n                if (!valid_request && !too_many_retries) {\n                  this._throttledRequestHandler();\n                } else if (too_many_retries && !this._conn.connected) {\n                  this._conn._changeConnectStatus(Strophe$1.Status.CONNFAIL, \"giving-up\");\n                }\n              },\n\n              /** PrivateFunction: _processRequest\n               *  _Private_ function to process a request in the queue.\n               *\n               *  This function takes requests off the queue and sends them and\n               *  restarts dead requests.\n               *\n               *  Parameters:\n               *    (Integer) i - The index of the request in the queue.\n               */\n              _processRequest: function _processRequest(i) {\n                var _this = this;\n\n                var req = this._requests[i];\n\n                var reqStatus = this._getRequestStatus(req, -1); // make sure we limit the number of retries\n\n\n                if (req.sends > this._conn.maxRetries) {\n                  this._conn._onDisconnectTimeout();\n\n                  return;\n                }\n\n                var time_elapsed = req.age();\n                var primary_timeout = !isNaN(time_elapsed) && time_elapsed > Math.floor(Strophe$1.TIMEOUT * this.wait);\n                var secondary_timeout = req.dead !== null && req.timeDead() > Math.floor(Strophe$1.SECONDARY_TIMEOUT * this.wait);\n                var server_error = req.xhr.readyState === 4 && (reqStatus < 1 || reqStatus >= 500);\n\n                if (primary_timeout || secondary_timeout || server_error) {\n                  if (secondary_timeout) {\n                    Strophe$1.error(\"Request \".concat(this._requests[i].id, \" timed out (secondary), restarting\"));\n                  }\n\n                  req.abort = true;\n                  req.xhr.abort(); // setting to null fails on IE6, so set to empty function\n\n                  req.xhr.onreadystatechange = function () {};\n\n                  this._requests[i] = new Strophe$1.Request(req.xmlData, req.origFunc, req.rid, req.sends);\n                  req = this._requests[i];\n                }\n\n                if (req.xhr.readyState === 0) {\n                  Strophe$1.debug(\"request id \" + req.id + \".\" + req.sends + \" posting\");\n\n                  try {\n                    var content_type = this._conn.options.contentType || \"text/xml; charset=utf-8\";\n                    req.xhr.open(\"POST\", this._conn.service, this._conn.options.sync ? false : true);\n\n                    if (typeof req.xhr.setRequestHeader !== 'undefined') {\n                      // IE9 doesn't have setRequestHeader\n                      req.xhr.setRequestHeader(\"Content-Type\", content_type);\n                    }\n\n                    if (this._conn.options.withCredentials) {\n                      req.xhr.withCredentials = true;\n                    }\n                  } catch (e2) {\n                    Strophe$1.error(\"XHR open failed: \" + e2.toString());\n\n                    if (!this._conn.connected) {\n                      this._conn._changeConnectStatus(Strophe$1.Status.CONNFAIL, \"bad-service\");\n                    }\n\n                    this._conn.disconnect();\n\n                    return;\n                  } // Fires the XHR request -- may be invoked immediately\n                  // or on a gradually expanding retry window for reconnects\n\n\n                  var sendFunc = function sendFunc() {\n                    req.date = new Date();\n\n                    if (_this._conn.options.customHeaders) {\n                      var headers = _this._conn.options.customHeaders;\n\n                      for (var header in headers) {\n                        if (Object.prototype.hasOwnProperty.call(headers, header)) {\n                          req.xhr.setRequestHeader(header, headers[header]);\n                        }\n                      }\n                    }\n\n                    req.xhr.send(req.data);\n                  }; // Implement progressive backoff for reconnects --\n                  // First retry (send === 1) should also be instantaneous\n\n\n                  if (req.sends > 1) {\n                    // Using a cube of the retry number creates a nicely\n                    // expanding retry window\n                    var backoff = Math.min(Math.floor(Strophe$1.TIMEOUT * this.wait), Math.pow(req.sends, 3)) * 1000;\n                    setTimeout(function () {\n                      // XXX: setTimeout should be called only with function expressions (23974bc1)\n                      sendFunc();\n                    }, backoff);\n                  } else {\n                    sendFunc();\n                  }\n\n                  req.sends++;\n\n                  if (this._conn.xmlOutput !== Strophe$1.Connection.prototype.xmlOutput) {\n                    if (req.xmlData.nodeName === this.strip && req.xmlData.childNodes.length) {\n                      this._conn.xmlOutput(req.xmlData.childNodes[0]);\n                    } else {\n                      this._conn.xmlOutput(req.xmlData);\n                    }\n                  }\n\n                  if (this._conn.rawOutput !== Strophe$1.Connection.prototype.rawOutput) {\n                    this._conn.rawOutput(req.data);\n                  }\n                } else {\n                  Strophe$1.debug(\"_processRequest: \" + (i === 0 ? \"first\" : \"second\") + \" request has readyState of \" + req.xhr.readyState);\n                }\n              },\n\n              /** PrivateFunction: _removeRequest\n               *  _Private_ function to remove a request from the queue.\n               *\n               *  Parameters:\n               *    (Strophe.Request) req - The request to remove.\n               */\n              _removeRequest: function _removeRequest(req) {\n                Strophe$1.debug(\"removing request\");\n\n                for (var i = this._requests.length - 1; i >= 0; i--) {\n                  if (req === this._requests[i]) {\n                    this._requests.splice(i, 1);\n                  }\n                } // IE6 fails on setting to null, so set to empty function\n\n\n                req.xhr.onreadystatechange = function () {};\n\n                this._throttledRequestHandler();\n              },\n\n              /** PrivateFunction: _restartRequest\n               *  _Private_ function to restart a request that is presumed dead.\n               *\n               *  Parameters:\n               *    (Integer) i - The index of the request in the queue.\n               */\n              _restartRequest: function _restartRequest(i) {\n                var req = this._requests[i];\n\n                if (req.dead === null) {\n                  req.dead = new Date();\n                }\n\n                this._processRequest(i);\n              },\n\n              /** PrivateFunction: _reqToData\n               * _Private_ function to get a stanza out of a request.\n               *\n               * Tries to extract a stanza out of a Request Object.\n               * When this fails the current connection will be disconnected.\n               *\n               *  Parameters:\n               *    (Object) req - The Request.\n               *\n               *  Returns:\n               *    The stanza that was passed.\n               */\n              _reqToData: function _reqToData(req) {\n                try {\n                  return req.getResponse();\n                } catch (e) {\n                  if (e.message !== \"parsererror\") {\n                    throw e;\n                  }\n\n                  this._conn.disconnect(\"strophe-parsererror\");\n                }\n              },\n\n              /** PrivateFunction: _sendTerminate\n               *  _Private_ function to send initial disconnect sequence.\n               *\n               *  This is the first step in a graceful disconnect.  It sends\n               *  the BOSH server a terminate body and includes an unavailable\n               *  presence if authentication has completed.\n               */\n              _sendTerminate: function _sendTerminate(pres) {\n                Strophe$1.debug(\"_sendTerminate was called\");\n\n                var body = this._buildBody().attrs({\n                  type: \"terminate\"\n                });\n\n                if (pres) {\n                  body.cnode(pres.tree());\n                }\n\n                var req = new Strophe$1.Request(body.tree(), this._onRequestStateChange.bind(this, this._conn._dataRecv.bind(this._conn)), body.tree().getAttribute(\"rid\"));\n\n                this._requests.push(req);\n\n                this._throttledRequestHandler();\n              },\n\n              /** PrivateFunction: _send\n               *  _Private_ part of the Connection.send function for BOSH\n               *\n               * Just triggers the RequestHandler to send the messages that are in the queue\n               */\n              _send: function _send() {\n                var _this2 = this;\n\n                clearTimeout(this._conn._idleTimeout);\n\n                this._throttledRequestHandler();\n\n                this._conn._idleTimeout = setTimeout(function () {\n                  return _this2._conn._onIdle();\n                }, 100);\n              },\n\n              /** PrivateFunction: _sendRestart\n               *\n               *  Send an xmpp:restart stanza.\n               */\n              _sendRestart: function _sendRestart() {\n                this._throttledRequestHandler();\n\n                clearTimeout(this._conn._idleTimeout);\n              },\n\n              /** PrivateFunction: _throttledRequestHandler\n               *  _Private_ function to throttle requests to the connection window.\n               *\n               *  This function makes sure we don't send requests so fast that the\n               *  request ids overflow the connection window in the case that one\n               *  request died.\n               */\n              _throttledRequestHandler: function _throttledRequestHandler() {\n                if (!this._requests) {\n                  Strophe$1.debug(\"_throttledRequestHandler called with \" + \"undefined requests\");\n                } else {\n                  Strophe$1.debug(\"_throttledRequestHandler called with \" + this._requests.length + \" requests\");\n                }\n\n                if (!this._requests || this._requests.length === 0) {\n                  return;\n                }\n\n                if (this._requests.length > 0) {\n                  this._processRequest(0);\n                }\n\n                if (this._requests.length > 1 && Math.abs(this._requests[0].rid - this._requests[1].rid) < this.window) {\n                  this._processRequest(1);\n                }\n              }\n            };\n\n            /*\n                This program is distributed under the terms of the MIT license.\n                Please see the LICENSE file for details.\n\n                Copyright 2006-2008, OGG, LLC\n            */\n            var Strophe$2 = core.Strophe;\n            var $build$2 = core.$build;\n            /** Class: Strophe.WebSocket\n             *  _Private_ helper class that handles WebSocket Connections\n             *\n             *  The Strophe.WebSocket class is used internally by Strophe.Connection\n             *  to encapsulate WebSocket sessions. It is not meant to be used from user's code.\n             */\n\n            /** File: websocket.js\n             *  A JavaScript library to enable XMPP over Websocket in Strophejs.\n             *\n             *  This file implements XMPP over WebSockets for Strophejs.\n             *  If a Connection is established with a Websocket url (ws://...)\n             *  Strophe will use WebSockets.\n             *  For more information on XMPP-over-WebSocket see RFC 7395:\n             *  http://tools.ietf.org/html/rfc7395\n             *\n             *  WebSocket support implemented by Andreas Guth (andreas.guth@rwth-aachen.de)\n             */\n\n            /** PrivateConstructor: Strophe.Websocket\n             *  Create and initialize a Strophe.WebSocket object.\n             *  Currently only sets the connection Object.\n             *\n             *  Parameters:\n             *    (Strophe.Connection) connection - The Strophe.Connection that will use WebSockets.\n             *\n             *  Returns:\n             *    A new Strophe.WebSocket object.\n             */\n\n            Strophe$2.Websocket = function (connection) {\n              this._conn = connection;\n              this.strip = \"wrapper\";\n              var service = connection.service;\n\n              if (service.indexOf(\"ws:\") !== 0 && service.indexOf(\"wss:\") !== 0) {\n                // If the service is not an absolute URL, assume it is a path and put the absolute\n                // URL together from options, current URL and the path.\n                var new_service = \"\";\n\n                if (connection.options.protocol === \"ws\" && window.location.protocol !== \"https:\") {\n                  new_service += \"ws\";\n                } else {\n                  new_service += \"wss\";\n                }\n\n                new_service += \"://\" + window.location.host;\n\n                if (service.indexOf(\"/\") !== 0) {\n                  new_service += window.location.pathname + service;\n                } else {\n                  new_service += service;\n                }\n\n                connection.service = new_service;\n              }\n            };\n\n            Strophe$2.Websocket.prototype = {\n              /** PrivateFunction: _buildStream\n               *  _Private_ helper function to generate the <stream> start tag for WebSockets\n               *\n               *  Returns:\n               *    A Strophe.Builder with a <stream> element.\n               */\n              _buildStream: function _buildStream() {\n                return $build$2(\"open\", {\n                  \"xmlns\": Strophe$2.NS.FRAMING,\n                  \"to\": this._conn.domain,\n                  \"version\": '1.0'\n                });\n              },\n\n              /** PrivateFunction: _check_streamerror\n               * _Private_ checks a message for stream:error\n               *\n               *  Parameters:\n               *    (Strophe.Request) bodyWrap - The received stanza.\n               *    connectstatus - The ConnectStatus that will be set on error.\n               *  Returns:\n               *     true if there was a streamerror, false otherwise.\n               */\n              _check_streamerror: function _check_streamerror(bodyWrap, connectstatus) {\n                var errors;\n\n                if (bodyWrap.getElementsByTagNameNS) {\n                  errors = bodyWrap.getElementsByTagNameNS(Strophe$2.NS.STREAM, \"error\");\n                } else {\n                  errors = bodyWrap.getElementsByTagName(\"stream:error\");\n                }\n\n                if (errors.length === 0) {\n                  return false;\n                }\n\n                var error = errors[0];\n                var condition = \"\";\n                var text = \"\";\n                var ns = \"urn:ietf:params:xml:ns:xmpp-streams\";\n\n                for (var i = 0; i < error.childNodes.length; i++) {\n                  var e = error.childNodes[i];\n\n                  if (e.getAttribute(\"xmlns\") !== ns) {\n                    break;\n                  }\n\n                  if (e.nodeName === \"text\") {\n                    text = e.textContent;\n                  } else {\n                    condition = e.nodeName;\n                  }\n                }\n\n                var errorString = \"WebSocket stream error: \";\n\n                if (condition) {\n                  errorString += condition;\n                } else {\n                  errorString += \"unknown\";\n                }\n\n                if (text) {\n                  errorString += \" - \" + text;\n                }\n\n                Strophe$2.error(errorString); // close the connection on stream_error\n\n                this._conn._changeConnectStatus(connectstatus, condition);\n\n                this._conn._doDisconnect();\n\n                return true;\n              },\n\n              /** PrivateFunction: _reset\n               *  Reset the connection.\n               *\n               *  This function is called by the reset function of the Strophe Connection.\n               *  Is not needed by WebSockets.\n               */\n              _reset: function _reset() {\n                return;\n              },\n\n              /** PrivateFunction: _connect\n               *  _Private_ function called by Strophe.Connection.connect\n               *\n               *  Creates a WebSocket for a connection and assigns Callbacks to it.\n               *  Does nothing if there already is a WebSocket.\n               */\n              _connect: function _connect() {\n                // Ensure that there is no open WebSocket from a previous Connection.\n                this._closeSocket(); // Create the new WobSocket\n\n\n                this.socket = new WebSocket(this._conn.service, \"xmpp\");\n                this.socket.onopen = this._onOpen.bind(this);\n                this.socket.onerror = this._onError.bind(this);\n                this.socket.onclose = this._onClose.bind(this);\n                this.socket.onmessage = this._connect_cb_wrapper.bind(this);\n              },\n\n              /** PrivateFunction: _connect_cb\n               *  _Private_ function called by Strophe.Connection._connect_cb\n               *\n               * checks for stream:error\n               *\n               *  Parameters:\n               *    (Strophe.Request) bodyWrap - The received stanza.\n               */\n              _connect_cb: function _connect_cb(bodyWrap) {\n                var error = this._check_streamerror(bodyWrap, Strophe$2.Status.CONNFAIL);\n\n                if (error) {\n                  return Strophe$2.Status.CONNFAIL;\n                }\n              },\n\n              /** PrivateFunction: _handleStreamStart\n               * _Private_ function that checks the opening <open /> tag for errors.\n               *\n               * Disconnects if there is an error and returns false, true otherwise.\n               *\n               *  Parameters:\n               *    (Node) message - Stanza containing the <open /> tag.\n               */\n              _handleStreamStart: function _handleStreamStart(message) {\n                var error = false; // Check for errors in the <open /> tag\n\n                var ns = message.getAttribute(\"xmlns\");\n\n                if (typeof ns !== \"string\") {\n                  error = \"Missing xmlns in <open />\";\n                } else if (ns !== Strophe$2.NS.FRAMING) {\n                  error = \"Wrong xmlns in <open />: \" + ns;\n                }\n\n                var ver = message.getAttribute(\"version\");\n\n                if (typeof ver !== \"string\") {\n                  error = \"Missing version in <open />\";\n                } else if (ver !== \"1.0\") {\n                  error = \"Wrong version in <open />: \" + ver;\n                }\n\n                if (error) {\n                  this._conn._changeConnectStatus(Strophe$2.Status.CONNFAIL, error);\n\n                  this._conn._doDisconnect();\n\n                  return false;\n                }\n\n                return true;\n              },\n\n              /** PrivateFunction: _connect_cb_wrapper\n               * _Private_ function that handles the first connection messages.\n               *\n               * On receiving an opening stream tag this callback replaces itself with the real\n               * message handler. On receiving a stream error the connection is terminated.\n               */\n              _connect_cb_wrapper: function _connect_cb_wrapper(message) {\n                if (message.data.indexOf(\"<open \") === 0 || message.data.indexOf(\"<?xml\") === 0) {\n                  // Strip the XML Declaration, if there is one\n                  var data = message.data.replace(/^(<\\?.*?\\?>\\s*)*/, \"\");\n                  if (data === '') return;\n                  var streamStart = new DOMParser().parseFromString(data, \"text/xml\").documentElement;\n\n                  this._conn.xmlInput(streamStart);\n\n                  this._conn.rawInput(message.data); //_handleStreamSteart will check for XML errors and disconnect on error\n\n\n                  if (this._handleStreamStart(streamStart)) {\n                    //_connect_cb will check for stream:error and disconnect on error\n                    this._connect_cb(streamStart);\n                  }\n                } else if (message.data.indexOf(\"<close \") === 0) {\n                  // <close xmlns=\"urn:ietf:params:xml:ns:xmpp-framing />\n                  // Parse the raw string to an XML element\n                  var parsedMessage = new DOMParser().parseFromString(message.data, \"text/xml\").documentElement; // Report this input to the raw and xml handlers\n\n                  this._conn.xmlInput(parsedMessage);\n\n                  this._conn.rawInput(message.data);\n\n                  var see_uri = parsedMessage.getAttribute(\"see-other-uri\");\n\n                  if (see_uri) {\n                    var service = this._conn.service; // Valid scenarios: WSS->WSS, WS->ANY\n\n                    var isSecureRedirect = service.indexOf(\"wss:\") >= 0 && see_uri.indexOf(\"wss:\") >= 0 || service.indexOf(\"ws:\") >= 0;\n\n                    if (isSecureRedirect) {\n                      this._conn._changeConnectStatus(Strophe$2.Status.REDIRECT, \"Received see-other-uri, resetting connection\");\n\n                      this._conn.reset();\n\n                      this._conn.service = see_uri;\n\n                      this._connect();\n                    }\n                  } else {\n                    this._conn._changeConnectStatus(Strophe$2.Status.CONNFAIL, \"Received closing stream\");\n\n                    this._conn._doDisconnect();\n                  }\n                } else {\n                  var string = this._streamWrap(message.data);\n\n                  var elem = new DOMParser().parseFromString(string, \"text/xml\").documentElement;\n                  this.socket.onmessage = this._onMessage.bind(this);\n\n                  this._conn._connect_cb(elem, null, message.data);\n                }\n              },\n\n              /** PrivateFunction: _disconnect\n               *  _Private_ function called by Strophe.Connection.disconnect\n               *\n               *  Disconnects and sends a last stanza if one is given\n               *\n               *  Parameters:\n               *    (Request) pres - This stanza will be sent before disconnecting.\n               */\n              _disconnect: function _disconnect(pres) {\n                if (this.socket && this.socket.readyState !== WebSocket.CLOSED) {\n                  if (pres) {\n                    this._conn.send(pres);\n                  }\n\n                  var close = $build$2(\"close\", {\n                    \"xmlns\": Strophe$2.NS.FRAMING\n                  });\n\n                  this._conn.xmlOutput(close.tree());\n\n                  var closeString = Strophe$2.serialize(close);\n\n                  this._conn.rawOutput(closeString);\n\n                  try {\n                    this.socket.send(closeString);\n                  } catch (e) {\n                    Strophe$2.warn(\"Couldn't send <close /> tag.\");\n                  }\n                }\n\n                this._conn._doDisconnect();\n              },\n\n              /** PrivateFunction: _doDisconnect\n               *  _Private_ function to disconnect.\n               *\n               *  Just closes the Socket for WebSockets\n               */\n              _doDisconnect: function _doDisconnect() {\n                Strophe$2.debug(\"WebSockets _doDisconnect was called\");\n\n                this._closeSocket();\n              },\n\n              /** PrivateFunction _streamWrap\n               *  _Private_ helper function to wrap a stanza in a <stream> tag.\n               *  This is used so Strophe can process stanzas from WebSockets like BOSH\n               */\n              _streamWrap: function _streamWrap(stanza) {\n                return \"<wrapper>\" + stanza + '</wrapper>';\n              },\n\n              /** PrivateFunction: _closeSocket\n               *  _Private_ function to close the WebSocket.\n               *\n               *  Closes the socket if it is still open and deletes it\n               */\n              _closeSocket: function _closeSocket() {\n                if (this.socket) {\n                  try {\n                    this.socket.onclose = null;\n                    this.socket.onerror = null;\n                    this.socket.onmessage = null;\n                    this.socket.close();\n                  } catch (e) {\n                    Strophe$2.debug(e.message);\n                  }\n                }\n\n                this.socket = null;\n              },\n\n              /** PrivateFunction: _emptyQueue\n               * _Private_ function to check if the message queue is empty.\n               *\n               *  Returns:\n               *    True, because WebSocket messages are send immediately after queueing.\n               */\n              _emptyQueue: function _emptyQueue() {\n                return true;\n              },\n\n              /** PrivateFunction: _onClose\n               * _Private_ function to handle websockets closing.\n               *\n               * Nothing to do here for WebSockets\n               */\n              _onClose: function _onClose(e) {\n                if (this._conn.connected && !this._conn.disconnecting) {\n                  Strophe$2.error(\"Websocket closed unexpectedly\");\n\n                  this._conn._doDisconnect();\n                } else if (e && e.code === 1006 && !this._conn.connected && this.socket) {\n                  // in case the onError callback was not called (Safari 10 does not\n                  // call onerror when the initial connection fails) we need to\n                  // dispatch a CONNFAIL status update to be consistent with the\n                  // behavior on other browsers.\n                  Strophe$2.error(\"Websocket closed unexcectedly\");\n\n                  this._conn._changeConnectStatus(Strophe$2.Status.CONNFAIL, \"The WebSocket connection could not be established or was disconnected.\");\n\n                  this._conn._doDisconnect();\n                } else {\n                  Strophe$2.debug(\"Websocket closed\");\n                }\n              },\n\n              /** PrivateFunction: _no_auth_received\n               *\n               * Called on stream start/restart when no stream:features\n               * has been received.\n               */\n              _no_auth_received: function _no_auth_received(callback) {\n                Strophe$2.error(\"Server did not offer a supported authentication mechanism\");\n\n                this._conn._changeConnectStatus(Strophe$2.Status.CONNFAIL, Strophe$2.ErrorCondition.NO_AUTH_MECH);\n\n                if (callback) {\n                  callback.call(this._conn);\n                }\n\n                this._conn._doDisconnect();\n              },\n\n              /** PrivateFunction: _onDisconnectTimeout\n               *  _Private_ timeout handler for handling non-graceful disconnection.\n               *\n               *  This does nothing for WebSockets\n               */\n              _onDisconnectTimeout: function _onDisconnectTimeout() {},\n\n              /** PrivateFunction: _abortAllRequests\n               *  _Private_ helper function that makes sure all pending requests are aborted.\n               */\n              _abortAllRequests: function _abortAllRequests() {},\n\n              /** PrivateFunction: _onError\n               * _Private_ function to handle websockets errors.\n               *\n               * Parameters:\n               * (Object) error - The websocket error.\n               */\n              _onError: function _onError(error) {\n                Strophe$2.error(\"Websocket error \" + error);\n\n                this._conn._changeConnectStatus(Strophe$2.Status.CONNFAIL, \"The WebSocket connection could not be established or was disconnected.\");\n\n                this._disconnect();\n              },\n\n              /** PrivateFunction: _onIdle\n               *  _Private_ function called by Strophe.Connection._onIdle\n               *\n               *  sends all queued stanzas\n               */\n              _onIdle: function _onIdle() {\n                var data = this._conn._data;\n\n                if (data.length > 0 && !this._conn.paused) {\n                  for (var i = 0; i < data.length; i++) {\n                    if (data[i] !== null) {\n                      var stanza = void 0;\n\n                      if (data[i] === \"restart\") {\n                        stanza = this._buildStream().tree();\n                      } else {\n                        stanza = data[i];\n                      }\n\n                      var rawStanza = Strophe$2.serialize(stanza);\n\n                      this._conn.xmlOutput(stanza);\n\n                      this._conn.rawOutput(rawStanza);\n\n                      this.socket.send(rawStanza);\n                    }\n                  }\n\n                  this._conn._data = [];\n                }\n              },\n\n              /** PrivateFunction: _onMessage\n               * _Private_ function to handle websockets messages.\n               *\n               * This function parses each of the messages as if they are full documents.\n               * [TODO : We may actually want to use a SAX Push parser].\n               *\n               * Since all XMPP traffic starts with\n               *  <stream:stream version='1.0'\n               *                 xml:lang='en'\n               *                 xmlns='jabber:client'\n               *                 xmlns:stream='http://etherx.jabber.org/streams'\n               *                 id='3697395463'\n               *                 from='SERVER'>\n               *\n               * The first stanza will always fail to be parsed.\n               *\n               * Additionally, the seconds stanza will always be <stream:features> with\n               * the stream NS defined in the previous stanza, so we need to 'force'\n               * the inclusion of the NS in this stanza.\n               *\n               * Parameters:\n               * (string) message - The websocket message.\n               */\n              _onMessage: function _onMessage(message) {\n                var elem; // check for closing stream\n\n                var close = '<close xmlns=\"urn:ietf:params:xml:ns:xmpp-framing\" />';\n\n                if (message.data === close) {\n                  this._conn.rawInput(close);\n\n                  this._conn.xmlInput(message);\n\n                  if (!this._conn.disconnecting) {\n                    this._conn._doDisconnect();\n                  }\n\n                  return;\n                } else if (message.data.search(\"<open \") === 0) {\n                  // This handles stream restarts\n                  elem = new DOMParser().parseFromString(message.data, \"text/xml\").documentElement;\n\n                  if (!this._handleStreamStart(elem)) {\n                    return;\n                  }\n                } else {\n                  var data = this._streamWrap(message.data);\n\n                  elem = new DOMParser().parseFromString(data, \"text/xml\").documentElement;\n                }\n\n                if (this._check_streamerror(elem, Strophe$2.Status.ERROR)) {\n                  return;\n                } //handle unavailable presence stanza before disconnecting\n\n\n                if (this._conn.disconnecting && elem.firstChild.nodeName === \"presence\" && elem.firstChild.getAttribute(\"type\") === \"unavailable\") {\n                  this._conn.xmlInput(elem);\n\n                  this._conn.rawInput(Strophe$2.serialize(elem)); // if we are already disconnecting we will ignore the unavailable stanza and\n                  // wait for the </stream:stream> tag before we close the connection\n\n\n                  return;\n                }\n\n                this._conn._dataRecv(elem, message.data);\n              },\n\n              /** PrivateFunction: _onOpen\n               * _Private_ function to handle websockets connection setup.\n               *\n               * The opening stream tag is sent here.\n               */\n              _onOpen: function _onOpen() {\n                Strophe$2.debug(\"Websocket open\");\n\n                var start = this._buildStream();\n\n                this._conn.xmlOutput(start.tree());\n\n                var startString = Strophe$2.serialize(start);\n\n                this._conn.rawOutput(startString);\n\n                this.socket.send(startString);\n              },\n\n              /** PrivateFunction: _reqToData\n               * _Private_ function to get a stanza out of a request.\n               *\n               * WebSockets don't use requests, so the passed argument is just returned.\n               *\n               *  Parameters:\n               *    (Object) stanza - The stanza.\n               *\n               *  Returns:\n               *    The stanza that was passed.\n               */\n              _reqToData: function _reqToData(stanza) {\n                return stanza;\n              },\n\n              /** PrivateFunction: _send\n               *  _Private_ part of the Connection.send function for WebSocket\n               *\n               * Just flushes the messages that are in the queue\n               */\n              _send: function _send() {\n                this._conn.flush();\n              },\n\n              /** PrivateFunction: _sendRestart\n               *\n               *  Send an xmpp:restart stanza.\n               */\n              _sendRestart: function _sendRestart() {\n                clearTimeout(this._conn._idleTimeout);\n\n                this._conn._onIdle.bind(this._conn)();\n              }\n            };\n\n            global$1.Strophe = core.Strophe;\n            global$1.$build = core.$build;\n            global$1.$iq = core.$iq;\n            global$1.$msg = core.$msg;\n            global$1.$pres = core.$pres;\n\n            return core;\n\n}));\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","module.exports = OSjs;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","export function h(name, attributes) {\n  var rest = []\n  var children = []\n  var length = arguments.length\n\n  while (length-- > 2) rest.push(arguments[length])\n\n  while (rest.length) {\n    var node = rest.pop()\n    if (node && node.pop) {\n      for (length = node.length; length--; ) {\n        rest.push(node[length])\n      }\n    } else if (node != null && node !== true && node !== false) {\n      children.push(node)\n    }\n  }\n\n  return typeof name === \"function\"\n    ? name(attributes || {}, children)\n    : {\n        nodeName: name,\n        attributes: attributes || {},\n        children: children,\n        key: attributes && attributes.key\n      }\n}\n\nexport function app(state, actions, view, container) {\n  var map = [].map\n  var rootElement = (container && container.children[0]) || null\n  var oldNode = rootElement && recycleElement(rootElement)\n  var lifecycle = []\n  var skipRender\n  var isRecycling = true\n  var globalState = clone(state)\n  var wiredActions = wireStateToActions([], globalState, clone(actions))\n\n  scheduleRender()\n\n  return wiredActions\n\n  function recycleElement(element) {\n    return {\n      nodeName: element.nodeName.toLowerCase(),\n      attributes: {},\n      children: map.call(element.childNodes, function(element) {\n        return element.nodeType === 3 // Node.TEXT_NODE\n          ? element.nodeValue\n          : recycleElement(element)\n      })\n    }\n  }\n\n  function resolveNode(node) {\n    return typeof node === \"function\"\n      ? resolveNode(node(globalState, wiredActions))\n      : node != null\n        ? node\n        : \"\"\n  }\n\n  function render() {\n    skipRender = !skipRender\n\n    var node = resolveNode(view)\n\n    if (container && !skipRender) {\n      rootElement = patch(container, rootElement, oldNode, (oldNode = node))\n    }\n\n    isRecycling = false\n\n    while (lifecycle.length) lifecycle.pop()()\n  }\n\n  function scheduleRender() {\n    if (!skipRender) {\n      skipRender = true\n      setTimeout(render)\n    }\n  }\n\n  function clone(target, source) {\n    var out = {}\n\n    for (var i in target) out[i] = target[i]\n    for (var i in source) out[i] = source[i]\n\n    return out\n  }\n\n  function setPartialState(path, value, source) {\n    var target = {}\n    if (path.length) {\n      target[path[0]] =\n        path.length > 1\n          ? setPartialState(path.slice(1), value, source[path[0]])\n          : value\n      return clone(source, target)\n    }\n    return value\n  }\n\n  function getPartialState(path, source) {\n    var i = 0\n    while (i < path.length) {\n      source = source[path[i++]]\n    }\n    return source\n  }\n\n  function wireStateToActions(path, state, actions) {\n    for (var key in actions) {\n      typeof actions[key] === \"function\"\n        ? (function(key, action) {\n            actions[key] = function(data) {\n              var result = action(data)\n\n              if (typeof result === \"function\") {\n                result = result(getPartialState(path, globalState), actions)\n              }\n\n              if (\n                result &&\n                result !== (state = getPartialState(path, globalState)) &&\n                !result.then // !isPromise\n              ) {\n                scheduleRender(\n                  (globalState = setPartialState(\n                    path,\n                    clone(state, result),\n                    globalState\n                  ))\n                )\n              }\n\n              return result\n            }\n          })(key, actions[key])\n        : wireStateToActions(\n            path.concat(key),\n            (state[key] = clone(state[key])),\n            (actions[key] = clone(actions[key]))\n          )\n    }\n\n    return actions\n  }\n\n  function getKey(node) {\n    return node ? node.key : null\n  }\n\n  function eventListener(event) {\n    return event.currentTarget.events[event.type](event)\n  }\n\n  function updateAttribute(element, name, value, oldValue, isSvg) {\n    if (name === \"key\") {\n    } else if (name === \"style\") {\n      if (typeof value === \"string\") {\n        element.style.cssText = value\n      } else {\n        if (typeof oldValue === \"string\") oldValue = element.style.cssText = \"\"\n        for (var i in clone(oldValue, value)) {\n          var style = value == null || value[i] == null ? \"\" : value[i]\n          if (i[0] === \"-\") {\n            element.style.setProperty(i, style)\n          } else {\n            element.style[i] = style\n          }\n        }\n      }\n    } else {\n      if (name[0] === \"o\" && name[1] === \"n\") {\n        name = name.slice(2)\n\n        if (element.events) {\n          if (!oldValue) oldValue = element.events[name]\n        } else {\n          element.events = {}\n        }\n\n        element.events[name] = value\n\n        if (value) {\n          if (!oldValue) {\n            element.addEventListener(name, eventListener)\n          }\n        } else {\n          element.removeEventListener(name, eventListener)\n        }\n      } else if (\n        name in element &&\n        name !== \"list\" &&\n        name !== \"type\" &&\n        name !== \"draggable\" &&\n        name !== \"spellcheck\" &&\n        name !== \"translate\" &&\n        !isSvg\n      ) {\n        element[name] = value == null ? \"\" : value\n      } else if (value != null && value !== false) {\n        element.setAttribute(name, value)\n      }\n\n      if (value == null || value === false) {\n        element.removeAttribute(name)\n      }\n    }\n  }\n\n  function createElement(node, isSvg) {\n    var element =\n      typeof node === \"string\" || typeof node === \"number\"\n        ? document.createTextNode(node)\n        : (isSvg = isSvg || node.nodeName === \"svg\")\n          ? document.createElementNS(\n              \"http://www.w3.org/2000/svg\",\n              node.nodeName\n            )\n          : document.createElement(node.nodeName)\n\n    var attributes = node.attributes\n    if (attributes) {\n      if (attributes.oncreate) {\n        lifecycle.push(function() {\n          attributes.oncreate(element)\n        })\n      }\n\n      for (var i = 0; i < node.children.length; i++) {\n        element.appendChild(\n          createElement(\n            (node.children[i] = resolveNode(node.children[i])),\n            isSvg\n          )\n        )\n      }\n\n      for (var name in attributes) {\n        updateAttribute(element, name, attributes[name], null, isSvg)\n      }\n    }\n\n    return element\n  }\n\n  function updateElement(element, oldAttributes, attributes, isSvg) {\n    for (var name in clone(oldAttributes, attributes)) {\n      if (\n        attributes[name] !==\n        (name === \"value\" || name === \"checked\"\n          ? element[name]\n          : oldAttributes[name])\n      ) {\n        updateAttribute(\n          element,\n          name,\n          attributes[name],\n          oldAttributes[name],\n          isSvg\n        )\n      }\n    }\n\n    var cb = isRecycling ? attributes.oncreate : attributes.onupdate\n    if (cb) {\n      lifecycle.push(function() {\n        cb(element, oldAttributes)\n      })\n    }\n  }\n\n  function removeChildren(element, node) {\n    var attributes = node.attributes\n    if (attributes) {\n      for (var i = 0; i < node.children.length; i++) {\n        removeChildren(element.childNodes[i], node.children[i])\n      }\n\n      if (attributes.ondestroy) {\n        attributes.ondestroy(element)\n      }\n    }\n    return element\n  }\n\n  function removeElement(parent, element, node) {\n    function done() {\n      parent.removeChild(removeChildren(element, node))\n    }\n\n    var cb = node.attributes && node.attributes.onremove\n    if (cb) {\n      cb(element, done)\n    } else {\n      done()\n    }\n  }\n\n  function patch(parent, element, oldNode, node, isSvg) {\n    if (node === oldNode) {\n    } else if (oldNode == null || oldNode.nodeName !== node.nodeName) {\n      var newElement = createElement(node, isSvg)\n      parent.insertBefore(newElement, element)\n\n      if (oldNode != null) {\n        removeElement(parent, element, oldNode)\n      }\n\n      element = newElement\n    } else if (oldNode.nodeName == null) {\n      element.nodeValue = node\n    } else {\n      updateElement(\n        element,\n        oldNode.attributes,\n        node.attributes,\n        (isSvg = isSvg || node.nodeName === \"svg\")\n      )\n\n      var oldKeyed = {}\n      var newKeyed = {}\n      var oldElements = []\n      var oldChildren = oldNode.children\n      var children = node.children\n\n      for (var i = 0; i < oldChildren.length; i++) {\n        oldElements[i] = element.childNodes[i]\n\n        var oldKey = getKey(oldChildren[i])\n        if (oldKey != null) {\n          oldKeyed[oldKey] = [oldElements[i], oldChildren[i]]\n        }\n      }\n\n      var i = 0\n      var k = 0\n\n      while (k < children.length) {\n        var oldKey = getKey(oldChildren[i])\n        var newKey = getKey((children[k] = resolveNode(children[k])))\n\n        if (newKeyed[oldKey]) {\n          i++\n          continue\n        }\n\n        if (newKey != null && newKey === getKey(oldChildren[i + 1])) {\n          if (oldKey == null) {\n            removeElement(element, oldElements[i], oldChildren[i])\n          }\n          i++\n          continue\n        }\n\n        if (newKey == null || isRecycling) {\n          if (oldKey == null) {\n            patch(element, oldElements[i], oldChildren[i], children[k], isSvg)\n            k++\n          }\n          i++\n        } else {\n          var keyedNode = oldKeyed[newKey] || []\n\n          if (oldKey === newKey) {\n            patch(element, keyedNode[0], keyedNode[1], children[k], isSvg)\n            i++\n          } else if (keyedNode[0]) {\n            patch(\n              element,\n              element.insertBefore(keyedNode[0], oldElements[i]),\n              keyedNode[1],\n              children[k],\n              isSvg\n            )\n          } else {\n            patch(element, oldElements[i], null, children[k], isSvg)\n          }\n\n          newKeyed[newKey] = children[k]\n          k++\n        }\n      }\n\n      while (i < oldChildren.length) {\n        if (getKey(oldChildren[i]) == null) {\n          removeElement(element, oldElements[i], oldChildren[i])\n        }\n        i++\n      }\n\n      for (var i in oldKeyed) {\n        if (!newKeyed[i]) {\n          removeElement(element, oldKeyed[i][0], oldKeyed[i][1])\n        }\n      }\n    }\n    return element\n  }\n}\n","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","export function h(name, attributes) {\n  var rest = []\n  var children = []\n  var length = arguments.length\n\n  while (length-- > 2) rest.push(arguments[length])\n\n  while (rest.length) {\n    var node = rest.pop()\n    if (node && node.pop) {\n      for (length = node.length; length--; ) {\n        rest.push(node[length])\n      }\n    } else if (node != null && node !== true && node !== false) {\n      children.push(node)\n    }\n  }\n\n  return typeof name === \"function\"\n    ? name(attributes || {}, children)\n    : {\n        nodeName: name,\n        attributes: attributes || {},\n        children: children,\n        key: attributes && attributes.key\n      }\n}\n\nexport function app(state, actions, view, container) {\n  var map = [].map\n  var rootElement = (container && container.children[0]) || null\n  var oldNode = rootElement && recycleElement(rootElement)\n  var lifecycle = []\n  var skipRender\n  var isRecycling = true\n  var globalState = clone(state)\n  var wiredActions = wireStateToActions([], globalState, clone(actions))\n\n  scheduleRender()\n\n  return wiredActions\n\n  function recycleElement(element) {\n    return {\n      nodeName: element.nodeName.toLowerCase(),\n      attributes: {},\n      children: map.call(element.childNodes, function(element) {\n        return element.nodeType === 3 // Node.TEXT_NODE\n          ? element.nodeValue\n          : recycleElement(element)\n      })\n    }\n  }\n\n  function resolveNode(node) {\n    return typeof node === \"function\"\n      ? resolveNode(node(globalState, wiredActions))\n      : node != null\n        ? node\n        : \"\"\n  }\n\n  function render() {\n    skipRender = !skipRender\n\n    var node = resolveNode(view)\n\n    if (container && !skipRender) {\n      rootElement = patch(container, rootElement, oldNode, (oldNode = node))\n    }\n\n    isRecycling = false\n\n    while (lifecycle.length) lifecycle.pop()()\n  }\n\n  function scheduleRender() {\n    if (!skipRender) {\n      skipRender = true\n      setTimeout(render)\n    }\n  }\n\n  function clone(target, source) {\n    var out = {}\n\n    for (var i in target) out[i] = target[i]\n    for (var i in source) out[i] = source[i]\n\n    return out\n  }\n\n  function setPartialState(path, value, source) {\n    var target = {}\n    if (path.length) {\n      target[path[0]] =\n        path.length > 1\n          ? setPartialState(path.slice(1), value, source[path[0]])\n          : value\n      return clone(source, target)\n    }\n    return value\n  }\n\n  function getPartialState(path, source) {\n    var i = 0\n    while (i < path.length) {\n      source = source[path[i++]]\n    }\n    return source\n  }\n\n  function wireStateToActions(path, state, actions) {\n    for (var key in actions) {\n      typeof actions[key] === \"function\"\n        ? (function(key, action) {\n            actions[key] = function(data) {\n              var result = action(data)\n\n              if (typeof result === \"function\") {\n                result = result(getPartialState(path, globalState), actions)\n              }\n\n              if (\n                result &&\n                result !== (state = getPartialState(path, globalState)) &&\n                !result.then // !isPromise\n              ) {\n                scheduleRender(\n                  (globalState = setPartialState(\n                    path,\n                    clone(state, result),\n                    globalState\n                  ))\n                )\n              }\n\n              return result\n            }\n          })(key, actions[key])\n        : wireStateToActions(\n            path.concat(key),\n            (state[key] = clone(state[key])),\n            (actions[key] = clone(actions[key]))\n          )\n    }\n\n    return actions\n  }\n\n  function getKey(node) {\n    return node ? node.key : null\n  }\n\n  function eventListener(event) {\n    return event.currentTarget.events[event.type](event)\n  }\n\n  function updateAttribute(element, name, value, oldValue, isSvg) {\n    if (name === \"key\") {\n    } else if (name === \"style\") {\n      if (typeof value === \"string\") {\n        element.style.cssText = value\n      } else {\n        if (typeof oldValue === \"string\") oldValue = element.style.cssText = \"\"\n        for (var i in clone(oldValue, value)) {\n          var style = value == null || value[i] == null ? \"\" : value[i]\n          if (i[0] === \"-\") {\n            element.style.setProperty(i, style)\n          } else {\n            element.style[i] = style\n          }\n        }\n      }\n    } else {\n      if (name[0] === \"o\" && name[1] === \"n\") {\n        name = name.slice(2)\n\n        if (element.events) {\n          if (!oldValue) oldValue = element.events[name]\n        } else {\n          element.events = {}\n        }\n\n        element.events[name] = value\n\n        if (value) {\n          if (!oldValue) {\n            element.addEventListener(name, eventListener)\n          }\n        } else {\n          element.removeEventListener(name, eventListener)\n        }\n      } else if (\n        name in element &&\n        name !== \"list\" &&\n        name !== \"type\" &&\n        name !== \"draggable\" &&\n        name !== \"spellcheck\" &&\n        name !== \"translate\" &&\n        !isSvg\n      ) {\n        element[name] = value == null ? \"\" : value\n      } else if (value != null && value !== false) {\n        element.setAttribute(name, value)\n      }\n\n      if (value == null || value === false) {\n        element.removeAttribute(name)\n      }\n    }\n  }\n\n  function createElement(node, isSvg) {\n    var element =\n      typeof node === \"string\" || typeof node === \"number\"\n        ? document.createTextNode(node)\n        : (isSvg = isSvg || node.nodeName === \"svg\")\n          ? document.createElementNS(\n              \"http://www.w3.org/2000/svg\",\n              node.nodeName\n            )\n          : document.createElement(node.nodeName)\n\n    var attributes = node.attributes\n    if (attributes) {\n      if (attributes.oncreate) {\n        lifecycle.push(function() {\n          attributes.oncreate(element)\n        })\n      }\n\n      for (var i = 0; i < node.children.length; i++) {\n        element.appendChild(\n          createElement(\n            (node.children[i] = resolveNode(node.children[i])),\n            isSvg\n          )\n        )\n      }\n\n      for (var name in attributes) {\n        updateAttribute(element, name, attributes[name], null, isSvg)\n      }\n    }\n\n    return element\n  }\n\n  function updateElement(element, oldAttributes, attributes, isSvg) {\n    for (var name in clone(oldAttributes, attributes)) {\n      if (\n        attributes[name] !==\n        (name === \"value\" || name === \"checked\"\n          ? element[name]\n          : oldAttributes[name])\n      ) {\n        updateAttribute(\n          element,\n          name,\n          attributes[name],\n          oldAttributes[name],\n          isSvg\n        )\n      }\n    }\n\n    var cb = isRecycling ? attributes.oncreate : attributes.onupdate\n    if (cb) {\n      lifecycle.push(function() {\n        cb(element, oldAttributes)\n      })\n    }\n  }\n\n  function removeChildren(element, node) {\n    var attributes = node.attributes\n    if (attributes) {\n      for (var i = 0; i < node.children.length; i++) {\n        removeChildren(element.childNodes[i], node.children[i])\n      }\n\n      if (attributes.ondestroy) {\n        attributes.ondestroy(element)\n      }\n    }\n    return element\n  }\n\n  function removeElement(parent, element, node) {\n    function done() {\n      parent.removeChild(removeChildren(element, node))\n    }\n\n    var cb = node.attributes && node.attributes.onremove\n    if (cb) {\n      cb(element, done)\n    } else {\n      done()\n    }\n  }\n\n  function patch(parent, element, oldNode, node, isSvg) {\n    if (node === oldNode) {\n    } else if (oldNode == null || oldNode.nodeName !== node.nodeName) {\n      var newElement = createElement(node, isSvg)\n      parent.insertBefore(newElement, element)\n\n      if (oldNode != null) {\n        removeElement(parent, element, oldNode)\n      }\n\n      element = newElement\n    } else if (oldNode.nodeName == null) {\n      element.nodeValue = node\n    } else {\n      updateElement(\n        element,\n        oldNode.attributes,\n        node.attributes,\n        (isSvg = isSvg || node.nodeName === \"svg\")\n      )\n\n      var oldKeyed = {}\n      var newKeyed = {}\n      var oldElements = []\n      var oldChildren = oldNode.children\n      var children = node.children\n\n      for (var i = 0; i < oldChildren.length; i++) {\n        oldElements[i] = element.childNodes[i]\n\n        var oldKey = getKey(oldChildren[i])\n        if (oldKey != null) {\n          oldKeyed[oldKey] = [oldElements[i], oldChildren[i]]\n        }\n      }\n\n      var i = 0\n      var k = 0\n\n      while (k < children.length) {\n        var oldKey = getKey(oldChildren[i])\n        var newKey = getKey((children[k] = resolveNode(children[k])))\n\n        if (newKeyed[oldKey]) {\n          i++\n          continue\n        }\n\n        if (newKey != null && newKey === getKey(oldChildren[i + 1])) {\n          if (oldKey == null) {\n            removeElement(element, oldElements[i], oldChildren[i])\n          }\n          i++\n          continue\n        }\n\n        if (newKey == null || isRecycling) {\n          if (oldKey == null) {\n            patch(element, oldElements[i], oldChildren[i], children[k], isSvg)\n            k++\n          }\n          i++\n        } else {\n          var keyedNode = oldKeyed[newKey] || []\n\n          if (oldKey === newKey) {\n            patch(element, keyedNode[0], keyedNode[1], children[k], isSvg)\n            i++\n          } else if (keyedNode[0]) {\n            patch(\n              element,\n              element.insertBefore(keyedNode[0], oldElements[i]),\n              keyedNode[1],\n              children[k],\n              isSvg\n            )\n          } else {\n            patch(element, oldElements[i], null, children[k], isSvg)\n          }\n\n          newKeyed[newKey] = children[k]\n          k++\n        }\n      }\n\n      while (i < oldChildren.length) {\n        if (getKey(oldChildren[i]) == null) {\n          removeElement(element, oldElements[i], oldChildren[i])\n        }\n        i++\n      }\n\n      for (var i in oldKeyed) {\n        if (!newKeyed[i]) {\n          removeElement(element, oldKeyed[i][0], oldKeyed[i][1])\n        }\n      }\n    }\n    return element\n  }\n}\n","/*\n * OS.js - JavaScript Cloud/Web Desktop Platform\n *\n * Copyright (c) 2011-2020, Anders Evenrud <andersevenrud@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @author  Anders Evenrud <andersevenrud@gmail.com>\n * @licence Simplified BSD License\n */\n\nimport {h} from 'hyperapp';\n\n/**\n * Elemet Box definition\n * @property {string} [class] Container class name\n * @property {number} [grow] Flexbox grow value\n * @property {number} [shrink] Flexbox shrink value\n * @property {number|string} [basis] Flexbox basis value\n * @property {string} [align] Flexbox alignItems value\n * @property {string} [justify] Flexbox justifyContent value\n * @property {number|string} [padding] Margin\n * @property {number|string} [margin] Margin\n * @property {string} [key] Hyperapp element key\n * @property {Function} [oncreate] Hyperapp oncreate function\n * @property {Function} [onupdate] Hyperapp onupdate function\n * @property {Function} [ondestroy] Hyperapp ondestroy function\n * @typedef BoxProperties\n */\n\nconst unitValue = (value, unset) => typeof value === 'number'\n  ? `${value}px`\n  : (value === false ? unset : value);\n\nconst boxPropNames = {\n  grow: value => ({flexGrow: value}),\n  shrink: value => ({flexShrink: value}),\n  basis: value => ({flexBasis: unitValue(value, 'auto')}),\n  align: value => ({alignItems: value}),\n  justify: value => ({justifyContent: value}),\n  padding: value => ({margin: unitValue(value, '0')}),\n  margin: value => ({margin: unitValue(value, '0')})\n};\n\n/**\n * A generic OS.js GUI container\n * @param {Object} props Properties\n * @param {h[]} children Children\n */\nexport const Element = (props, children = []) => {\n  const givenClassNames = props.class instanceof Array\n    ? props.class\n    : [props.class];\n\n  const classNames = [\n    'osjs-gui',\n    ...givenClassNames\n  ];\n\n  if (props.orientation) {\n    classNames.push('osjs-gui-' + props.orientation);\n  }\n\n  const defaultStyle = typeof props.style === 'string'\n    ? {}\n    : Object.assign({}, props.style || {});\n\n  const style = Object.keys(props).reduce((result, prop) => {\n    const value = boxPropNames[prop]\n      ? boxPropNames[prop](props[prop])\n      : undefined;\n\n    return Object.assign({}, result, value);\n  }, defaultStyle);\n\n  return h('div', {\n    oncreate: props.oncreate,\n    ondestroy: props.ondestroy,\n    class: classNames.filter(s => !!s).join(' '),\n    style\n  }, children);\n};\n","/*\n * OS.js - JavaScript Cloud/Web Desktop Platform\n *\n * Copyright (c) 2011-2020, Anders Evenrud <andersevenrud@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @author  Anders Evenrud <andersevenrud@gmail.com>\n * @licence Simplified BSD License\n */\n\nimport {h} from 'hyperapp';\nimport {Element} from './Element';\n\n/**\n * A flexbox\n * @param {BoxProperties} props Properties\n * @param {string} [props.orientation='horizontal'] Box orientation\n * @param {h[]} children Children\n */\nexport const Box = (props, children) =>\n  h(Element, Object.assign({\n    orientation: 'horizontal'\n  }, props, {\n    class: ['osjs-gui-box', props.class],\n  }), children);\n","/*\n * OS.js - JavaScript Cloud/Web Desktop Platform\n *\n * Copyright (c) 2011-2020, Anders Evenrud <andersevenrud@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @author  Anders Evenrud <andersevenrud@gmail.com>\n * @licence Simplified BSD License\n */\n\nimport {h} from 'hyperapp';\nimport {Element} from './Element';\n\n/**\n * A flexbox container\n * @param {BoxProperties} props Properties\n * @param {string} [props.orientation='vertical'] Box orientation\n * @param {h[]} children Children\n */\nexport const BoxContainer = (props, children) =>\n  h(Element, Object.assign({}, props, {\n    class: ['osjs-gui-box-container', props.class]\n  }), children);\n","/*\n * OS.js - JavaScript Cloud/Web Desktop Platform\n *\n * Copyright (c) 2011-2020, Anders Evenrud <andersevenrud@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @author  Anders Evenrud <andersevenrud@gmail.com>\n * @licence Simplified BSD License\n */\n\nimport {h} from 'hyperapp';\nimport {Element} from './Element';\n\n/**\n * A styled flexbox container\n * @param {BoxProperties} props Properties\n * @param {h[]} children Children\n */\nexport const BoxStyled = (props, children) =>\n  h(Element, Object.assign({}, props, {\n    class: ['osjs-gui-box-styled', props.class]\n  }), children);\n","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","/*\n * OS.js - JavaScript Cloud/Web Desktop Platform\n *\n * Copyright (c) 2011-2020, Anders Evenrud <andersevenrud@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @author  Anders Evenrud <andersevenrud@gmail.com>\n * @licence Simplified BSD License\n */\n\nimport {h} from 'hyperapp';\n\n/**\n * An icon\n * @param {Object} props Properties\n * @param {string} props.src Icon src\n * @param {string} [props.name] Icon name\n * @param {h[]} children Children\n */\nexport const Icon = (props, children) => {\n  const i = props && typeof props === 'object'\n    ? props.src\n    : props;\n\n  const n = props && typeof props === 'object'\n    ? props.name\n    : undefined;\n\n  return h('i', {\n    'data-icon': n,\n    class: 'osjs-icon',\n    style: {\n      backgroundImage: typeof props === 'string' ? `url(${i})` : undefined\n    }\n  });\n};\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","/*\n * OS.js - JavaScript Cloud/Web Desktop Platform\n *\n * Copyright (c) 2011-2020, Anders Evenrud <andersevenrud@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @author  Anders Evenrud <andersevenrud@gmail.com>\n * @licence Simplified BSD License\n */\n\n/**\n * Filter an object based on keys\n * @param {Object} props Props\n * @param {String[]} filterKeys List of keys to filter\n * @return {Object}\n */\nexport const filteredProps = (props, filterKeys) => {\n  const keys = Object.keys(props);\n  const filter = k => filterKeys.indexOf(k) === -1;\n\n  return keys\n    .filter(filter)\n    .reduce((result, k) => Object.assign({\n      [k]: props[k]\n    }, result), {});\n};\n\n/**\n * Creates a double-tap event handler\n * @param {number} [timeout=250] Timeout\n * @return {Function} Handler with => (ev, cb)\n */\nexport const doubleTap = (timeout = 250) => {\n  let tapped = false;\n  let timer;\n\n  return (ev, cb) => {\n    timer = clearTimeout(timer);\n    timer = setTimeout(() => (tapped = false), timeout);\n\n    if (tapped) {\n      ev.preventDefault();\n      return cb(ev);\n    }\n\n    tapped = true;\n\n    return false;\n  };\n};\n","/*\n * OS.js - JavaScript Cloud/Web Desktop Platform\n *\n * Copyright (c) 2011-2020, Anders Evenrud <andersevenrud@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @author  Anders Evenrud <andersevenrud@gmail.com>\n * @licence Simplified BSD License\n */\nimport {h} from 'hyperapp';\nimport {filteredProps} from './utils';\nimport {Element} from './components/Element';\n\n/**\n * Creates a new field Element wrapper\n * @param {String} name Field name\n * @param {Object} props Field props\n * @param {Function} cb Callback to create inner element => (props)\n * @param {Function} cb Callback to get value => (event)\n */\nexport const createField = (name, props, defaultProps, cb, cbInput) => {\n  const oninput = props.oninput || function() {};\n  const onchange = props.onchange || function() {};\n  const onkeydown = props.onkeydown || function() {};\n\n  const getValue = cbInput || (ev => [ev.target.value]);\n  const fieldProps = Object.assign(\n    {\n      oninput: ev => oninput(ev, ...getValue(ev)),\n      onchange: ev => onchange(ev, ...getValue(ev)),\n      onkeydown: ev => {\n        if (ev.keyCode === 13 && props.onenter) {\n          props.onenter(ev, ...getValue(ev));\n        }\n        onkeydown(ev);\n      }\n    },\n    defaultProps,\n    filteredProps(props, ['choices', 'label', 'box', 'oninput', 'onchange'])\n  );\n\n  return h(Element, Object.assign({}, props.box || {}, {\n    class: 'osjs-gui-field osjs-gui-' + name\n  }), cb(fieldProps));\n};\n","/*\n * OS.js - JavaScript Cloud/Web Desktop Platform\n *\n * Copyright (c) 2011-2020, Anders Evenrud <andersevenrud@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @author  Anders Evenrud <andersevenrud@gmail.com>\n * @licence Simplified BSD License\n */\n\nimport {h} from 'hyperapp';\nimport {Icon} from './Icon';\nimport {createField} from '../element';\n\n/**\n * A button\n * @param {Object} props Properties\n * @param {string} [props.icon] Icon source\n * @param {string} [props.label] Use this as label instead of children\n * @param {BoxProperties} [props.box] Box Properties\n * @param {h[]} children Children\n */\nexport const Button = (props = {}, children = []) =>\n  createField('button', props, {\n  }, (fieldProps) => {\n    const inner = [];\n    if (props.icon) {\n      inner.push(h(Icon, props.icon));\n    }\n\n    if (typeof props.label === 'string') {\n      inner.push(h('span', {class: 'osjs-label'}, props.label));\n    }\n\n    return h('button', fieldProps, [\n      ...inner,\n      ...children\n    ]);\n  });\n","/*\n * OS.js - JavaScript Cloud/Web Desktop Platform\n *\n * Copyright (c) 2011-2020, Anders Evenrud <andersevenrud@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @author  Anders Evenrud <andersevenrud@gmail.com>\n * @licence Simplified BSD License\n */\n\nimport {h} from 'hyperapp';\nimport {Icon} from './Icon';\n\nconst ul = (props, children = [], level = 0) => {\n\n  const label = child => {\n    const children = [];\n\n    if (child.type === 'checkbox' || typeof child.checked === 'boolean') {\n      children.push(h('span', {\n        class: 'osjs-gui-menu-checkbox ' + (child.checked ? 'active' : '')\n      }));\n    } else if (child.icon) {\n      children.push(h(Icon, child.icon));\n    }\n\n    children.push(h('span', {}, child.label));\n\n    return children;\n  };\n\n  const inner = (props, child) => {\n    if (typeof child.element === 'function') {\n      return child.element();\n    }\n\n    const className = child.type === 'separator'\n      ? 'osjs-gui-menu-separator'\n      : 'osjs-gui-menu-label ' + (child.disabled ? 'osjs__disabled' : '');\n\n    const children = [\n      h('span', {class: className}, label(child))\n    ];\n\n    if (child.items) {\n      children.push(ul(props, child.items, level + 1));\n    }\n\n    return children;\n  };\n\n  return h('ul', {\n    class: ''\n  }, children.map(\n    child => h('li', {\n      class: 'osjs-gui-menu-entry'\n    }, [\n      h('div', {\n        class: 'osjs-gui-menu-container',\n        'data-has-image': child.icon ? true : undefined,\n        'data-has-children': child.items ? true : undefined,\n        onmouseover: child.items ? props.onshow : undefined,\n        ontouchend: child.items ? props.onshow : undefined,\n        onclick: (ev) => {\n          if (child.items) {\n            return;\n          }\n\n          if (child.onclick) {\n            child.onclick(child, ev);\n          }\n\n          if (props.onclick) {\n            props.onclick(child, ev, child);\n          }\n        }\n      }, inner(props, child))\n    ])\n  ));\n};\n\n/**\n * Menu tree\n * @property {String} label Label\n * @property {String} [icon] Icon source\n * @property {Boolean} [disabled] Disabled state\n * @property {Boolean} [closeable] Disable close on click\n * @property {Function} [element] A callback that returns a virtual DOM element (ex. Hyperapp)\n * @property {Function} onclick Click callback\n * @property {MenuItems} [items] Child items\n * @typedef MenuItems\n */\n\n/**\n * A menu\n * @param {Object} props Properties\n * @param {Boolean} [props.visible=true] Visible property\n * @param {Object} [posprops.ition] Position\n * @param {MenuItems} [props.menu] Menu items\n */\nexport const Menu = (props) => h('div', {\n  id: 'osjs-context-menu',\n  className: 'osjs-gui osjs-gui-menu',\n  oncreate: props.oncreate,\n  onupdate: props.onupdate,\n  style: {\n    display: props.visible !== false ? 'block' : 'none',\n    top: props.position ? String(props.position.top) + 'px' : 0,\n    left: props.position ? String(props.position.left) + 'px' : 0\n  }\n}, ul(props, props.menu));\n","/*\n * OS.js - JavaScript Cloud/Web Desktop Platform\n *\n * Copyright (c) 2011-2020, Anders Evenrud <andersevenrud@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @author  Anders Evenrud <andersevenrud@gmail.com>\n * @licence Simplified BSD License\n */\n\nimport {h} from 'hyperapp';\nimport {Element} from './Element';\n\n/**\n * A toolbar\n * @desc Contains entries with spacing\n * @param {BoxProperties} props Properties\n * @param {string} [props.orientation='vertical'] Box orientation\n * @param {h[]} children Children\n */\nexport const Toolbar = (props, children) =>\n  h(Element, Object.assign({\n    orientation: 'vertical'\n  }, props, {\n    class: ['osjs-gui-toolbar', props.class]\n  }), children);\n","/*\n * OS.js - JavaScript Cloud/Web Desktop Platform\n *\n * Copyright (c) 2011-2020, Anders Evenrud <andersevenrud@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @author  Anders Evenrud <andersevenrud@gmail.com>\n * @licence Simplified BSD License\n */\n\nimport {h} from 'hyperapp';\nimport {Element} from './Element';\n\n/**\n * A status bar\n * @param {Object} props Properties\n * @param {BoxProperties} [props.box] Box Properties\n * @param {h[]} children Children\n */\nexport const Statusbar = (props, children) =>\n  h(Element, Object.assign({}, props.box || {}, {\n    class: ['osjs-gui-statusbar', props.class]\n  }), children);\n","/*\n * OS.js - JavaScript Cloud/Web Desktop Platform\n *\n * Copyright (c) 2011-2020, Anders Evenrud <andersevenrud@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @author  Anders Evenrud <andersevenrud@gmail.com>\n * @licence Simplified BSD License\n */\n\nimport {h} from 'hyperapp';\nimport {Element} from './Element';\n\n/**\n * A menubar item\n * @param {Object} props Properties\n * @param {h[]} children Children\n */\nexport const MenubarItem = (props, children = []) => {\n  const {onclick, data} = props;\n\n  return h('div', {\n    onclick: (ev) => {\n      if (typeof onclick === 'function') {\n        const parentNode = ev.target.parentNode;\n        const index = Array.prototype.indexOf.call(parentNode.children, ev.target);\n\n        onclick(ev, data || {}, index);\n      }\n    }\n  }, h('span', {}, children));\n};\n\n/**\n * A menubar container\n * @param {BoxProperties} [props] Box Properties\n * @param {MenubarItem[]} [props.items] Array of object\n * @param {h[]} children Children\n */\nexport const Menubar = (props, children = []) =>\n  h(Element, Object.assign({}, props, {\n    class: ['osjs-gui-menubar', props.class]\n  }), [\n    ...(props.items || []).map(item => h(MenubarItem, {\n      data: item.data,\n      onclick: (item.onclick || props.onclick)\n    }, item.label)),\n    ...children\n  ]);\n","import {h, app} from 'hyperapp'\n\nexport default \nfunction nestable (state, actions, view, tagname) {\n    actions._$r = function () {return {}}\n    return function (props, children) {\n        return h(tagname || 'x-', {\n            key: props.key,\n            id: props.id,\n            class: props.class,\n            oncreate: function (el) {\n                var wired = app(\n                    state,\n                    actions,\n                    function (s, a) {\n                        var v = view(s, a)\n                        if (typeof v === 'function') v = v(el._$p, el._$c)\n                        return v\n                    },\n                    el\n                )\n                el._$p = props\n                el._$c = children\n                el._$r = wired._$r\n                el._$u = wired.uninit\n                wired.init && wired.init(props)\n                props.oncreate && props.oncreate(el)\n            },\n            onupdate: function (el) {\n                el._$p = props\n                el._$c = children\n                el._$r()\n                props.onupdate && props.onupdate(el)\n            },\n            ondestroy: function (el) {\n                el._$u && el._$u()\n            },\n            onremove: function (el, done) {\n               if (!props.onremove) return done()\n\n               props.onremove(el, done)\n            }\n        })\n    }    \n}\n\n","/*\n * OS.js - JavaScript Cloud/Web Desktop Platform\n *\n * Copyright (c) 2011-2020, Anders Evenrud <andersevenrud@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @author  Anders Evenrud <andersevenrud@gmail.com>\n * @licence Simplified BSD License\n */\n\nimport {h} from 'hyperapp';\nimport nestable from 'hyperapp-nestable';\nimport {Element} from './Element';\n\nconst onmousedown = (ev, actions, orientation) => {\n  const {target, clientX, clientY} = ev;\n  const pane = target.previousSibling;\n  const {offsetWidth, offsetHeight} = pane;\n  const index = Array.from(target.parentNode.children).indexOf(pane);\n  const maxWidth = pane.parentNode.offsetWidth * 0.8;\n  const maxHeight = pane.parentNode.offsetHeight * 0.8;\n\n  if (index < 0) {\n    return;\n  }\n\n  const mousemove = ev => {\n    ev.preventDefault();\n\n    let size = orientation === 'vertical' ? offsetWidth : offsetHeight;\n\n    if (orientation === 'vertical') {\n      const diffX = ev.clientX - clientX;\n      size = Math.min(maxWidth, size + diffX);\n    } else {\n      const diffY = ev.clientY - clientY;\n      size = Math.min(maxHeight, size + diffY);\n    }\n\n    actions.setSize({index, size});\n  };\n\n  const mouseup = ev => {\n    ev.preventDefault();\n    document.removeEventListener('mousemove', mousemove);\n    document.removeEventListener('mouseup', mouseup);\n  };\n\n  ev.preventDefault();\n  document.addEventListener('mousemove', mousemove);\n  document.addEventListener('mouseup', mouseup);\n};\n\nconst panes = (state, actions, children, orientation) => {\n  const spacers = Array(Math.ceil(children.length / 2))\n    .fill(null)\n    .map(() => h('div', {\n      class: 'osjs-gui-panes-spacer',\n      onmousedown: ev => onmousedown(ev, actions, orientation)\n    }));\n\n  const child = (c, i) => {\n    const w = state.sizes[i] ? String(state.sizes[i]) + 'px' : undefined;\n\n    return h('div', {\n      class: 'osjs-gui-panes-pane',\n      style: {\n        flex: w ? `0 0 ${w}` : w\n      }\n    }, c);\n  };\n\n  return children\n    .map(child)\n    .map((v, i) => [v, spacers[i]])\n    .reduce((a, b) => a.concat(b))\n    .filter(v => typeof v !== 'undefined');\n};\n\nconst view = (state, actions) => (props, children) => {\n  const orientation = props.orientation || 'vertical';\n\n  return h(Element, {\n    orientation,\n    class: 'osjs-gui-panes-inner'\n  }, panes(state, actions, children, orientation));\n};\n\nconst inner = nestable({\n  sizes: []\n}, {\n  init: props => ({sizes: props.sizes || [150]}),\n  setSize: ({index, size}) => state => {\n    const sizes = [].concat(state.sizes);\n    sizes[index] = size;\n    return {sizes};\n  }\n}, view, 'div');\n\n/**\n * Resizable panes\n * @param {Object} props Properties\n * @param {string} [props.orientation='vertical'] Pane orientation\n * @param {number[]} [props.sizes] Pane sizes\n * @param {h[]} children Children\n */\nexport const Panes = (props, children) => h(inner, {\n  class: 'osjs-gui-panes'\n}, children);\n","/*\n * OS.js - JavaScript Cloud/Web Desktop Platform\n *\n * Copyright (c) 2011-2020, Anders Evenrud <andersevenrud@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @author  Anders Evenrud <andersevenrud@gmail.com>\n * @licence Simplified BSD License\n */\n\nimport {h} from 'hyperapp';\nimport {filteredProps, doubleTap} from '../utils';\nimport {Element} from './Element';\nimport {Icon} from './Icon';\n\nconst tapper = doubleTap();\n\nconst createView = props => {\n\n  const cols = (paneIndex) => (row, rowIndex) => {\n    const col = row.columns[paneIndex] || {};\n    const selected = props.selectedIndex === rowIndex;\n    const colIcon = col.icon ? h(Icon, col.icon) : null;\n    const children = [h('span', {}, [typeof col === 'object' ? col.label : col])];\n\n    if (colIcon) {\n      children.unshift(colIcon);\n    }\n\n    return h('div', {\n      key: row.key,\n      'data-has-icon': col.icon ? true : undefined,\n      class: 'osjs-gui-list-view-cell' + (selected ? ' osjs__active' : ''),\n      ontouchstart: (ev) => tapper(ev, () => props.onactivate({data: row.data, index: rowIndex, ev})),\n      ondblclick: (ev) => props.onactivate({data: row.data, index: rowIndex, ev}),\n      onclick: (ev) => props.onselect({data: row.data, index: rowIndex, ev}),\n      oncontextmenu: (ev) => props.oncontextmenu({data: row.data, index: rowIndex, ev}),\n      oncreate: (el) => props.oncreate({data: row.data, index: rowIndex, el})\n    }, children);\n  };\n\n  const pane = (index, col) => h('div', {\n    class: 'osjs-gui-list-view-pane',\n    style: col.style || {}\n  }, [\n    h('div', {\n      class: 'osjs-gui-list-view-header',\n      style: {\n        display: props.hideColumns ? 'none' : undefined\n      }\n    }, h('span', {}, typeof col === 'object' ? col.label : col)),\n    h('div', {\n      class: 'rows',\n      'data-zebra': String(props.zebra)\n    }, props.rows.map(cols(index)))\n  ]);\n\n  return h('div', {\n    class: 'osjs-gui-list-view-wrapper',\n    oncreate: el => (el.scrollTop = props.scrollTop),\n    onupdate: el => {\n      if (props.selectedIndex < 0) {\n        el.scrollTop = props.scrollTop;\n      }\n    }\n  }, props.columns.map((c, i) => pane(i, c)));\n};\n\nexport const ListView = props => h(Element, Object.assign({\n  class: 'osjs-gui-list-view'\n}, props.box || {}), createView(filteredProps(props, ['box'])));\n\nexport const listView = ({\n  component: (state, actions) => {\n    const newProps = Object.assign({\n      zebra: true,\n      columns: [],\n      rows: [],\n      onselect: ({data, index, ev}) => {\n        actions.select({data, index, ev});\n        actions.setSelectedIndex(index);\n      },\n      onactivate: ({data, index, ev}) => {\n        actions.activate({data, index, ev});\n        actions.setSelectedIndex(-1);\n      },\n      oncontextmenu: ({data, index, ev}) => {\n        actions.select({data, index, ev});\n        actions.contextmenu({data, index, ev});\n        actions.setSelectedIndex(index);\n      },\n      oncreate: (args) => {\n        actions.created(args);\n      }\n    }, state);\n\n    return (props = {}) => ListView(Object.assign(newProps, props));\n  },\n\n  state: state => Object.assign({\n    selectedIndex: -1,\n    scrollTop: 0\n  }, state),\n\n  actions: actions => Object.assign({\n    select: () => () => ({}),\n    activate: () => () => ({}),\n    contextmenu: () => () => ({}),\n    created: () => () => ({}),\n    setRows: rows => ({rows}),\n    setColumns: columns => ({columns}),\n    setScrollTop: scrollTop => state => ({scrollTop}),\n    setSelectedIndex: selectedIndex => state => ({selectedIndex})\n  }, actions || {})\n});\n","/*\n * OS.js - JavaScript Cloud/Web Desktop Platform\n *\n * Copyright (c) 2011-2020, Anders Evenrud <andersevenrud@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @author  Anders Evenrud <andersevenrud@gmail.com>\n * @licence Simplified BSD License\n */\n\nimport {h} from 'hyperapp';\nimport nestable from 'hyperapp-nestable';\n\nconst headers = ({labels, onchange, oncontextmenu}, state, actions) => (labels || [])\n  .map((label, index) => h('div', {\n    class: state.selectedIndex === index ? 'osjs__active' : '',\n    oncontextmenu: ev => {\n      (oncontextmenu || function() {})(ev, index, label);\n    },\n    onclick: ev => {\n      actions.setSelectedIndex(index);\n      (onchange || function() {})(ev, index, label);\n    }\n  }, h('span', {}, label)));\n\nconst panes = (state, children) => children\n  .map((child, index) => h('div', {\n    class: state.selectedIndex === index ? 'osjs__active' : ''\n  }, child));\n\nconst view = nestable({\n  selectedIndex: 0\n}, {\n  init: props => ({\n    selectedIndex: props.selectedIndex || 0\n  }),\n  setSelectedIndex: selectedIndex => state => ({selectedIndex})\n}, (state, actions) => (props, children) => h('div', {\n  class: 'osjs-gui-tabs-wrapper'\n}, [\n  h('div', {class: 'osjs-gui-tabs-header'}, headers(props, state, actions)),\n  h('div', {class: 'osjs-gui-tabs-panes'}, panes(state, children))\n]), 'div');\n\n/**\n * A tab container\n * @param {Object} props Properties\n * @param {String[]} props.labels Labels\n * @param {h[]} children Tabs\n */\nexport const Tabs = (props, children) => h(view, Object.assign({\n  class: 'osjs-gui osjs-gui-tabs ' + (props.class || '')\n}, props), children);\n","/*\n * OS.js - JavaScript Cloud/Web Desktop Platform\n *\n * Copyright (c) 2011-2020, Anders Evenrud <andersevenrud@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @author  Anders Evenrud <andersevenrud@gmail.com>\n * @licence Simplified BSD License\n */\n\nimport {h} from 'hyperapp';\nimport {doubleTap} from '../utils';\nimport {Element} from './Element';\nimport {Icon} from './Icon';\n\nconst tapper = doubleTap();\n\nexport const IconViewEntry = (entry, index, props) => () => {\n  const icon = entry.icon || {name: 'application-x-executable'};\n  const selected = props.selectedIndex === index;\n\n  return h('div', {\n    class: 'osjs-gui-icon-view-entry' + (selected ? ' osjs__active' : ''),\n    ontouchstart: (ev) => tapper(ev, () => props.onactivate({data: entry.data, index, ev})),\n    ondblclick: (ev) => props.onactivate({data: entry.data, index, ev}),\n    onclick: (ev) => props.onselect({data: entry.data, index, ev}),\n    oncontextmenu: (ev) => props.oncontextmenu({data: entry.data, index, ev}),\n    oncreate: (el) => props.oncreate({data: entry.data, index, el})\n  }, [\n    h('div', {class: 'osjs__container'}, [\n      h('div', {class: 'osjs__image'}, [\n        h(Icon, icon)\n      ]),\n      h('div', {class: 'osjs__label'}, [\n        h('span', {}, entry.label)\n      ])\n    ])\n  ]);\n};\n\nexport const IconView = (props) => {\n  const inner = h('div', {\n    class: 'osjs-gui-icon-view-wrapper',\n    oncreate: el => (el.scrollTop = props.scrollTop),\n    onupdate: el => {\n      if (props.selectedIndex < 0) {\n        el.scrollTop = props.scrollTop;\n      }\n    }\n  }, props.entries.map((entry, index) => {\n    return h(IconViewEntry(entry, index, props));\n  }));\n\n  return h(Element, Object.assign({\n    class: 'osjs-gui-icon-view'\n  }, props.box || {}), inner);\n};\n\nexport const iconView = ({\n  component: (state, actions) => {\n    const newProps = Object.assign({\n      entries: [],\n      onselect: ({data, index, ev}) => {\n        actions.select({data, index, ev});\n        actions.setSelectedIndex(index);\n      },\n      onactivate: ({data, index, ev}) => {\n        actions.activate({data, index, ev});\n        actions.setSelectedIndex(-1);\n      },\n      oncontextmenu: ({data, index, ev}) => {\n        actions.select({data, index, ev});\n        actions.contextmenu({data, index, ev});\n        actions.setSelectedIndex(index);\n      },\n      oncreate: (args) => {\n        actions.created(args);\n      }\n    }, state);\n\n    return (props = {}) => IconView(Object.assign(newProps, props));\n  },\n\n  state: state => Object.assign({\n    selectedIndex: -1,\n    scrollTop: 0\n  }, state),\n\n  actions: actions => Object.assign({\n    select: () => () => ({}),\n    activate: () => () => ({}),\n    contextmenu: () => () => ({}),\n    created: () => () => ({}),\n    setEntries: entries => () => ({entries}),\n    setScrollTop: scrollTop => state => ({scrollTop}),\n    setSelectedIndex: selectedIndex => state => ({selectedIndex}),\n  }, actions || {})\n});\n","/*\n * OS.js - JavaScript Cloud/Web Desktop Platform\n *\n * Copyright (c) 2011-2020, Anders Evenrud <andersevenrud@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @author  Anders Evenrud <andersevenrud@gmail.com>\n * @licence Simplified BSD License\n */\n\nimport {h} from 'hyperapp';\nimport {createField} from '../element';\n\n/**\n * A text field\n * @param {Object} props Properties\n * @param {string} [props.value] Value\n * @param {string} [props.type=text] Type\n * @param {BoxProperties} [props.box] Box Properties\n * @param {h[]} children Children\n */\nexport const TextField = (props = {}, children = []) =>\n  createField('text-field', props, {\n    autocomplete: 'off',\n    autocorrect: 'off',\n    autocapitalize: 'off',\n    spellcheck: 'false',\n    type: 'text'\n  }, (fieldProps) => h('input', fieldProps));\n","/*\n * OS.js - JavaScript Cloud/Web Desktop Platform\n *\n * Copyright (c) 2011-2020, Anders Evenrud <andersevenrud@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @author  Anders Evenrud <andersevenrud@gmail.com>\n * @licence Simplified BSD License\n */\n\nimport {h} from 'hyperapp';\nimport {createField} from '../element';\n\n/**\n * A text field\n * @param {Object} props Properties\n * @param {string} [props.value] Value\n * @param {number} [props.rows=4] Number of rows\n * @param {BoxProperties} [props.box] Box Properties\n * @param {h[]} children Children\n */\nexport const TextareaField = (props = {}, children = []) =>\n  createField('textarea-field', props, {\n    rows: 4\n  }, (fieldProps) => h('textarea', fieldProps, children));\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","/*\n * OS.js - JavaScript Cloud/Web Desktop Platform\n *\n * Copyright (c) 2011-2020, Anders Evenrud <andersevenrud@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @author  Anders Evenrud <andersevenrud@gmail.com>\n * @licence Simplified BSD License\n */\n\nimport {h} from 'hyperapp';\nimport {Element} from './Element';\nimport nestable from 'hyperapp-nestable';\n\nconst view = (state, actions) => (props, children) => {\n  return h(Element, Object.assign({}, props.box || {}, {\n    class: ['osjs-gui-expander-wrapper']\n  }), [\n    h('div', {\n      class: 'osjs-gui-expander-header',\n      onclick: ev => actions.ontoggle({\n        ev,\n        active: !state.active,\n        ontoggle: props.ontoggle\n      })\n    }, [\n      h('div', {\n        class: 'osjs-gui-expander-header-icon',\n        'data-active': String(state.active)\n      }),\n      h('div', {\n        class: 'osjs-gui-expander-header-label'\n      }, props.label)\n    ]),\n    h('div', {\n      class: 'osjs-gui-expander-content',\n      style: {\n        display: state.active === false ? 'none' : undefined\n      }\n    }, children)\n  ]);\n};\n\nconst inner = nestable({\n  active: true\n}, {\n  init: props => ({\n    ative: props.active !== false\n  }),\n  ontoggle: ({ev, active, ontoggle}) => {\n    const cb = ontoggle || function() {};\n    cb(ev, active);\n    return {active};\n  }\n}, view, 'div');\n\n/**\n * A status bar\n * @param {Object} props Properties\n * @param {boolean} [props.active] Active state\n * @param {Function} [props.ontoggle] Toggle callback => (ev, active)\n * @param {BoxProperties} [props.box] Box Properties\n * @param {h[]} children Children\n */\nexport const Expander = (props, children) =>\n  h(inner, Object.assign({}, props, {\n    class: 'osjs-gui osjs-gui-expander'\n  }), children);\n","/*\n * OS.js - JavaScript Cloud/Web Desktop Platform\n *\n * Copyright (c) 2011-2020, Anders Evenrud <andersevenrud@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @author  Anders Evenrud <andersevenrud@gmail.com>\n * @licence Simplified BSD License\n */\n\nimport {h} from 'hyperapp';\nimport {Element} from './Element';\n\n/**\n * A label element\n * @param {Object} props Properties\n * @param {string} [props.text] Label Text\n * @param {string} [props.placement] Placement\n * @param {string} [props.for] The \"for\" attribute\n * @param {BoxProperties} [props.box] Box Properties\n * @param {h[]} children Children\n */\nexport const Label = (props = {}, children = []) => {\n  const placement = props.placement || 'top';\n  const text = props.text || '';\n\n  const elementProps = Object.assign({\n    class: ['osjs-gui-field-label', 'osjs-gui-field-label-on-' + placement]\n  }, props.box || {});\n\n  return h(Element, elementProps, [\n    h('label', {for: props.for}, text),\n    children\n  ]);\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","/*\n * OS.js - JavaScript Cloud/Web Desktop Platform\n *\n * Copyright (c) 2011-2020, Anders Evenrud <andersevenrud@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @author  Anders Evenrud <andersevenrud@gmail.com>\n * @licence Simplified BSD License\n */\n\nimport {h, app} from 'hyperapp';\nimport {Menu} from './components/Menu';\n\n/*\n * Makes sure sub-menus stays within viewport\n */\nconst clampSubMenu = (root, ev) => {\n  let ul = ev.target.querySelector('ul');\n  if (!ul) {\n    return;\n  }\n\n  // FIXME: Safari reports wrong item\n  if (ul.classList.contains('osjs-gui-menu-container')) {\n    ul = ul.parentNode.parentNode;\n  }\n\n  if (!ul || !ul.offsetParent) {\n    return;\n  }\n\n  ul.classList.remove('clamp-right');\n\n  const rect = ul.getBoundingClientRect();\n  if (rect.right > root.offsetWidth) {\n    ul.classList.add('clamp-right');\n  }\n};\n\n/*\n * Makes sure menu stays within viewport\n */\nconst clampMenu = (root, el, currentPosition) => {\n  const result = {};\n  const bottom = currentPosition.top + el.offsetHeight;\n  const right = currentPosition.left + el.offsetWidth;\n  const offY = root.offsetHeight - currentPosition.top;\n  const offX = root.offsetWidth - currentPosition.left;\n  const overflowRight = right > root.offsetWidth;\n  const overflowBottom = bottom > root.offsetHeight;\n\n  if (overflowBottom) {\n    if (root.offsetHeight > el.offsetHeight) {\n      result.top = root.offsetHeight - el.offsetHeight - offY;\n    }\n  }\n\n  if (overflowRight) {\n    result.left = root.offsetWidth - el.offsetWidth - offX;\n  }\n\n  return (overflowBottom || overflowRight) ? result : null;\n};\n\n/*\n * Context Menu view\n */\nconst view = callback => (props, actions) => h(Menu, {\n  position: props.position,\n  visible: props.visible,\n  menu: props.menu,\n  onclick: callback,\n  onshow: actions.onshow\n});\n\nconst timeout = fn => {\n  fn();\n  return setTimeout(fn, 100);\n};\n\n/**\n * ContextMenu Class\n *\n * @desc Handles a Menu/ContextMenu globally for OS.js\n */\nexport class ContextMenu {\n\n  constructor(core) {\n    this.core = core;\n    this.callback = () => {};\n    this.actions = null;\n    this.$element = document.createElement('div');\n  }\n\n  destroy() {\n    this.callback = null;\n    this.actions = null;\n  }\n\n  /**\n   * Initializes the Menu Hyperapp\n   */\n  init() {\n    let clampTimeout;\n\n    this.$element.className = 'osjs-system-context-menu';\n    this.core.$root.appendChild(this.$element);\n\n    let isActive = false;\n\n    this.actions = app({\n      visible: false,\n      menu: [],\n      position: {\n        top: 0,\n        left: 0\n      }\n    }, {\n      clamp: (el) => props => {\n        el = el || document.querySelector('#osjs-context-menu');\n        clearTimeout(clampTimeout);\n\n        if (el) {\n          const root = this.core.$root;\n          const newPosition = clampMenu(root, el, props.position);\n          if (newPosition) {\n            return {position: newPosition};\n          }\n        }\n\n        return {};\n      },\n      onshow: (ev) => props => {\n        clampTimeout = timeout(() => clampSubMenu(this.core.$root, ev));\n      },\n      show: (options) => (props, actions) => {\n        let {menu, position, toggle} = options;\n        if (toggle && isActive) {\n          return actions.hide();\n        } else if (position instanceof Event) {\n          position = {left: position.clientX, top: position.clientY};\n        } else if (position instanceof Element) {\n          const box = position.getBoundingClientRect();\n          position = {\n            left: box.left,\n            top: box.top + box.height\n          };\n        }\n\n        this.callback = (child, ev, iter) => {\n          if (options.callback) {\n            options.callback(child, ev);\n          }\n\n          if (iter.closeable !== false) {\n            actions.hide();\n          }\n        };\n\n        isActive = true;\n        this.onclose = options.onclose;\n\n        timeout(() => actions.clamp());\n\n        return {\n          visible: true,\n          menu: menu || [],\n          position: position || {top: 0, left: 0}\n        };\n      },\n      hide: () => props => {\n        if (isActive) {\n          setTimeout(() => (isActive = false), 0);\n        }\n        if (this.onclose) {\n          this.onclose();\n        }\n        this.onclose = null;\n        this.callback = null;\n\n        return {visible: false};\n      }\n    }, view((...args) => {\n      if (!this.core.destroyed) {\n        if (this.callback) {\n          this.callback(...args);\n        }\n      }\n    }), this.$element);\n  }\n\n  /**\n   * Show the menu\n   */\n  show(...args) {\n    return this.actions ? this.actions.show(...args) : null;\n  }\n\n  /**\n   * Hide the menu\n   */\n  hide(...args) {\n    return this.actions ? this.actions.hide(...args) : null;\n  }\n}\n","/*\n * OS.js - JavaScript Cloud/Web Desktop Platform\n *\n * Copyright (c) 2011-2020, Anders Evenrud <andersevenrud@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @author  Anders Evenrud <andersevenrud@gmail.com>\n * @licence Simplified BSD License\n */\n\nimport {ContextMenu} from './contextmenu.js';\n\n/*\n * Check if a target allows for context menu\n */\nconst validContextMenuTarget = ev => {\n  const target = ev.target;\n  let isValid = target.tagName === 'TEXTAREA';\n  if (!isValid && target.tagName === 'INPUT') {\n    isValid = ['text', 'password', 'number', 'email'].indexOf(target.type) !== -1;\n  }\n\n  return isValid;\n};\n\n/**\n * OS.js GUI Service Provider\n *\n * @desc Provides wrapper services around GUI features\n */\nexport class GUIServiceProvider {\n\n  constructor(core) {\n    this.core = core;\n    this.contextmenu = new ContextMenu(core);\n  }\n\n  destroy() {\n    const menu = document.getElementById('osjs-context-menu');\n    if (menu) {\n      menu.remove();\n    }\n\n    this.contextmenu.destroy();\n  }\n\n  async init() {\n    const contextmenuApi = {\n      show: (...args) => this.contextmenu.show(...args),\n      hide: (...args) => this.contextmenu.hide(...args)\n    };\n\n    this.core.instance('osjs/contextmenu', (...args) => {\n      if (args.length) {\n        return contextmenuApi.show(...args);\n      }\n\n      return contextmenuApi;\n    });\n\n    this.core.$root.addEventListener('contextmenu', (ev) => {\n      if (validContextMenuTarget(ev)) {\n        return;\n      }\n\n      ev.stopPropagation();\n      ev.preventDefault();\n    });\n  }\n\n  start() {\n    const callback = ev => {\n      const menu = document.getElementById('osjs-context-menu');\n      const hit = menu.contains(ev.target);\n\n      if (!hit && this.contextmenu) {\n        this.contextmenu.hide();\n      }\n    };\n\n    this.core.$root.addEventListener('click', callback, true);\n    this.core.once('destroy', () => {\n      this.core.$root.removeEventListener('click', callback, true);\n    });\n\n    this.contextmenu.init();\n  }\n}\n","/*\n * OS.js - JavaScript Cloud/Web Desktop Platform\n *\n * Copyright (c) 2011-2020, Anders Evenrud <andersevenrud@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @author  Anders Evenrud <andersevenrud@gmail.com>\n * @licence Simplified BSD License\n */\nimport {Strophe, $msg} from 'strophe.js';\n\nexport const availabilities = {\n  chat: 'Available',\n  busy: 'Busy',\n  away: 'Away',\n  offline: 'Offline',\n  invisible: 'Invisible'\n};\n\n// Creates a nicer debug output of messages\nexport const domFromString = str => {\n  const el = document.createElement('html');\n  el.innerHTML = str;\n  return el.getElementsByTagName('body')[0];\n};\n\n// Checks if connection settings are valid\nexport const validConnection = settings => ['host', 'username', 'password']\n  .every(key => !!settings[key]);\n\n// Get connection status text\nexport const getConnectionStatusText = status => Object.keys(Strophe.Status)\n  .find(key => Strophe.Status[key] === status) || 'Disconnected';\n\n// Get availability text\nexport const getAvailabilityText = availability => availabilities[availability] || availability;\n\n// Gets the username from a JID\nexport const getUsername = jid => jid.split('/')[0];\n\n// Gets the text from a message\nexport const getMessageText = msg => {\n  const body = msg.getElementsByTagName('body');\n\n  if (body.length) {\n    return Array.from(body).map(el => Strophe.getText(el))\n      .join('\\n');\n  }\n\n  return '';\n};\n\n// Creates a new message\nexport const createMessage = (from, to, msg) => $msg({to, from, type: 'chat'})\n  .cnode(Strophe.xmlElement('body', msg)).up()\n  .c('active', {xmlns: 'http://jabber.org/protocol/chatstates'})\n  .tree();\n\n// Parses precense message\nexport const parsePresence = msg => {\n  const from = msg.getAttribute('from');\n  if (msg.querySelector('error')) {\n    throw new Error(getMessageText(msg));\n  }\n\n  const show = msg.querySelector('show');\n  const xphoto = msg.querySelector('photo');\n\n  const status = show\n    ? Strophe.getText(show)\n    : null;\n\n  const photo = xphoto\n    ? Strophe.getText(xphoto)\n    : null;\n\n  return {\n    user: getUsername(from),\n    photo,\n    status\n  };\n};\n","/*\n * OS.js - JavaScript Cloud/Web Desktop Platform\n *\n * Copyright (c) 2011-2020, Anders Evenrud <andersevenrud@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @author  Anders Evenrud <andersevenrud@gmail.com>\n * @licence Simplified BSD License\n */\nimport {h, app} from 'hyperapp';\nimport {\n  Box,\n  BoxStyled,\n  BoxContainer,\n  Button,\n  TextareaField,\n  Statusbar\n} from '@osjs/gui';\nimport {getUsername, getMessageText, createMessage} from './utils.js';\n\nconst ChatMessage = ({self, from, body, date}) => h('div', {\n  class: ['chat-message', self ? 'chat-message-self' : 'chat-message-other'].join(' ')\n}, [\n  h('div', {\n    class: 'chat-message__header'\n  }, [\n    h('div', {class: 'chat-message__header--date'}, `${date} - `),\n    h('div', {class: 'chat-message__header--username'}, `${getUsername(from)}:`)\n  ]),\n  h('div', {\n    class: 'chat-message__body'\n  }, body)\n]);\n\nexport const createChatWindow = (core, proc, parent, bus, options) => {\n  const {format} = core.make('osjs/locale');\n\n  const win = proc.createWindow({\n    id: options.id,\n    title: options.title,\n    icon: proc.resource(proc.metadata.icon),\n    parent,\n    attributes: {classNames: ['StropheJSChatWindow']},\n    dimension: {width: 400, height: 300}\n  });\n\n  const messages = (state, actions) => state.messages.map(({date, msg}) => {\n    return h(ChatMessage, {\n      date: format(date, 'longTime'),\n      self: getUsername(msg.getAttribute('from')) !== getUsername(options.user),\n      to: msg.getAttribute('to'),\n      from: msg.getAttribute('from'),\n      type: msg.getAttribute('type'),\n      body: getMessageText(msg)\n    });\n  });\n\n  const getLastStamp = state => {\n    const last = state.messages.length > 0\n      ? state.messages[state.messages.length - 1]\n      : null;\n\n    return last\n      ? `Last message: ${format(last.date)}`\n      : 'Conversation started...';\n  };\n\n  const view = (state, actions) => h(Box, {}, [\n    h(BoxStyled, {\n      grow: 1,\n      shrink: 1,\n      class: 'chat-messages',\n      orientation: 'horizontal'\n    }, [\n      ...messages(state, actions)\n    ]),\n    h(BoxContainer, {}, [\n      h(TextareaField, {\n        box: {grow: 1},\n        rows: 2,\n        placeholder: 'Enter message and use shift+enter to send...',\n        onenter: ev => {\n          if (ev.shiftKey) {\n            actions.send();\n          }\n        }\n      }),\n      h(Button, {\n        onclick: () => actions.send()\n      }, 'Send')\n    ]),\n    h(Statusbar, {}, [\n      state.typing ? `${options.title} is typing...` : getLastStamp(state)\n    ])\n  ]);\n\n  win.render($content => {\n    const a = app({\n      typing: false,\n      messages: []\n    }, {\n      send: () => (state, actions) => {\n        const textarea = $content.querySelector('textarea');\n        const value = textarea.value.trim();\n        if (!value.length) {\n          return;\n        }\n\n        const msg = createMessage(options.self, options.user, value);\n\n        actions.sendMessage(msg);\n        actions.addMessage({date: new Date(), msg});\n\n        setTimeout(() => (textarea.value = ''), 1);\n      },\n      setTypeStatus: typing => () => ({typing}),\n      sendMessage: msg => () => bus.emit('send-message', msg),\n      addMessage: obj => state => ({messages: [...state.messages, obj]})\n    }, view, $content);\n\n    let typeStatusTimeout;\n\n    win.on('strophejs/message', msg => {\n      a.addMessage({date: new Date(), msg});\n\n      const container = $content.querySelector('.chat-messages');\n      if (container) {\n        setTimeout(() => {\n          container.scrollTop = container.scrollHeight;\n        }, 1);\n      }\n    });\n\n    win.on('strophejs/started-typing', () => {\n      clearTimeout(typeStatusTimeout);\n      typeStatusTimeout = setTimeout(() => {\n        a.setTypeStatus(false);\n      }, 1000);\n\n      a.setTypeStatus(true);\n    });\n    win.on('strophejs/stopped-typing', () => a.setTypeStatus(false));\n  });\n\n  return win;\n};\n","/*\n * OS.js - JavaScript Cloud/Web Desktop Platform\n *\n * Copyright (c) 2011-2020, Anders Evenrud <andersevenrud@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @author  Anders Evenrud <andersevenrud@gmail.com>\n * @licence Simplified BSD License\n */\n\nimport {h, app} from 'hyperapp';\nimport {Strophe} from 'strophe.js';\nimport {\n  Box,\n  Menubar,\n  MenubarItem,\n  Statusbar,\n  listView\n} from '@osjs/gui';\nimport {getAvailabilityText, parsePresence, getConnectionStatusText} from './utils.js';\n\nconst createStatusMenuItem = (state, actions, availability) => ({\n  type: 'checkbox',\n  label: getAvailabilityText(availability),\n  disabled: !state.connected,\n  checked: state.availability === availability,\n  onclick: () => actions.menuSetStatus(availability)\n});\n\nconst createFileMenu = (state, actions) => ([\n  {label: 'Connection Options', onclick: () => actions.menuOptions()},\n  {label: 'Connect', disabled: state.connected, onclick: () => actions.menuConnect()},\n  {label: 'Disconnect', disabled: !state.connected, onclick: () => actions.menuDisconnect()},\n  {label: 'Quit', onclick: () => actions.menuQuit()}\n]);\n\nconst createStatusMenu = (state, actions, bus) => ([\n  createStatusMenuItem(state, actions, 'chat'),\n  createStatusMenuItem(state, actions, 'busy'),\n  createStatusMenuItem(state, actions, 'away'),\n  createStatusMenuItem(state, actions, 'offline'),\n  createStatusMenuItem(state, actions, 'invisible'),\n]);\n\nexport const createMainWindow = (core, proc, bus) => {\n  const win = proc.createWindow({\n    id: 'StropheJSMainWindow',\n    icon: proc.resource(proc.metadata.icon),\n    title: proc.metadata.title.en_EN,\n    dimension: {width: 400, height: 400},\n    attributes: {closeable: false, visibility: 'restricted'}\n  });\n\n  const view = (state, actions) => {\n    const ContactView = listView.component(state.contacts, actions.contacts);\n\n    return h(Box, {}, [\n      h(Menubar, {}, [\n        h(MenubarItem, {\n          onclick: ev => actions.menuFile(ev)\n        }, 'File'),\n        h(MenubarItem, {\n          onclick: ev => actions.menuStatus(ev)\n        }, 'Status')\n      ]),\n      h(ContactView, {box: {shrink: 1, grow: 1}}),\n      h(Statusbar, {}, [\n        `${getConnectionStatusText(state.status)} - ${getAvailabilityText(state.availability)}`\n      ])\n    ]);\n  };\n\n  win.render($content => {\n    const a = app({\n      connected: false,\n      availability: 'chat',\n      status: -1,\n      contacts: listView.state({\n        rows: [],\n        columns: [{\n          label: 'Name'\n        }, {\n          label: 'Status'\n        }]\n      })\n    }, {\n      menuOptions: () => () => bus.emit('open-connection-window'),\n      menuConnect: () => () => bus.emit('connect'),\n      menuDisconnect: () => () => bus.emit('disconnect'),\n      menuQuit: () => () => proc.destroy(),\n      menuFile: ev => (state, actions) => {\n        core.make('osjs/contextmenu').show({\n          position: ev.target,\n          menu: createFileMenu(state, actions)\n        });\n      },\n      menuStatus: ev => (state, actions) => {\n        core.make('osjs/contextmenu').show({\n          position: ev.target,\n          menu: createStatusMenu(state, actions)\n        });\n      },\n      menuSetStatus: status => (state, actions) => {\n        bus.emit('set-status', status);\n      },\n      getContacts: () => state => state.contacts.rows,\n      setAvailability: availability => state => ({availability}),\n      getStatus: () => state => state.status,\n      setStatus: status => state => {\n        const connected = status === Strophe.Status.CONNECTED;\n        return {connected, status};\n      },\n      contacts: listView.actions({\n        select: ({data}) => {},\n        activate: ({data}) => bus.emit('open-chat-window', data.user)\n      }),\n    }, view, $content);\n\n    bus.on('presence', pres => {\n      const contacts = a.getContacts();\n\n      try {\n        const contact = parsePresence(pres);\n        const foundIndex = contacts.findIndex(c => c.data.user === contact.user);\n\n        const iter = {\n          columns: [contact.user, getAvailabilityText(contact.status || 'offline')],\n          data: contact\n        };\n\n        if (foundIndex === -1) {\n          contacts.push(iter);\n        } else {\n          contacts[foundIndex] = iter;\n        }\n\n        a.contacts.setRows(contacts);\n      } catch (e) {\n        console.warn(e);\n      }\n    });\n\n    bus.on('status-change', status => a.setStatus(status));\n    bus.on('availability-change', availability => a.setAvailability(availability));\n    bus.on('disconnected', () => a.setStatus(-1));\n  });\n\n  return win;\n};\n","/*\n * OS.js - JavaScript Cloud/Web Desktop Platform\n *\n * Copyright (c) 2011-2020, Anders Evenrud <andersevenrud@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @author  Anders Evenrud <andersevenrud@gmail.com>\n * @licence Simplified BSD License\n */\nimport {$pres, Strophe} from 'strophe.js';\nimport {createConnectionWindow} from './connection-window.js';\nimport {createChatWindow} from './chat-window.js';\nimport {createMainWindow} from './main-window.js';\nimport {getUsername, domFromString, validConnection} from './utils.js';\n\nconst createConnection = (core, proc, bus) => {\n  const {host, username, password} = proc.settings;\n  try {\n    const connection = new Strophe.Connection(host);\n    connection.rawInput = d => console.debug('input', domFromString(d));\n    connection.rawOutput = d => console.debug('output', domFromString(d));\n\n    const cb = (status) => {\n      bus.emit('status-change', status);\n\n      if (status === Strophe.Status.CONNECTED) {\n        bus.emit('connected');\n      }\n    };\n\n    try {\n      connection.restore(null, cb);\n    } catch (e) {\n      console.warn(e);\n      connection.connect(username, password, cb);\n    }\n\n    connection.addHandler(msg => bus.emit('receive-message', msg), null, 'message', null, null, null);\n    connection.addHandler(pres => bus.emit('presence', pres), null, 'presence', null, null, null);\n    connection.addHandler(() => true, 'jabber:iq:roster', 'iq', 'set');\n\n    return connection;\n  } catch (e) {\n    console.error(e);\n  }\n\n  return null;\n};\n\nconst createApplication = (core, proc) => {\n  let connection;\n  const bus = core.make('osjs/event-emitter', 'Strophe.js');\n  const win = createMainWindow(core, proc, bus);\n  const tray = core.make('osjs/tray').create({\n    title: 'Strophe.js',\n    icon: proc.resource(proc.metadata.icon),\n  }, () => {\n    win.raise();\n    win.focus();\n  });\n\n  const onConnected = () => bus.emit('set-status', 'chat');\n\n  const onDisconnect = () => {\n    if (connection) {\n      connection.disconnect();\n    }\n    connection = null;\n\n    bus.emit('disconnected');\n  };\n\n  const onConnect = () => {\n    onDisconnect();\n    connection = createConnection(core, proc, bus);\n  };\n\n  const findChatWindow = from => {\n    const username = getUsername(from);\n    const id = 'StropheJSChatWindow_' + username;\n\n    return proc.windows.find(win => win.id === id);\n  };\n\n  const findOrCreateChatWindow = from => {\n    let chatWindow = findChatWindow(from);\n    if (!chatWindow) {\n      const username = getUsername(from);\n      const id = 'StropheJSChatWindow_' + username;\n\n      chatWindow = createChatWindow(core, proc, win, bus, {\n        id,\n        self: connection.jid,\n        title: username,\n        user: from\n      });\n    }\n\n    return chatWindow;\n  };\n\n  const onReceiveMessage = msg => {\n    const from = msg.getAttribute('from');\n    const isTyping  = msg.getElementsByTagName('cha:composing').length > 0;\n    const isPaused = msg.getElementsByTagName('cha:paused').length > 0;\n    const isMessage = msg.getElementsByTagName('body').length > 0;\n\n    if (isTyping || isPaused) {\n      let chatWindow = findChatWindow(from);\n      if (chatWindow) {\n        chatWindow.emit(isTyping ? 'strophejs/started-typing' : 'strophejs/stopped-typing');\n      }\n    }\n\n    if (isMessage) {\n      let chatWindow = findOrCreateChatWindow(from);\n      chatWindow.emit('strophejs/message', msg);\n    }\n  };\n\n  const onSetStatus = (status, text) => {\n    const pres = $pres({\n      from: connection.jid\n    });\n\n    pres.c('show', status);\n\n    if (text) {\n      pres.c('status', text);\n    }\n\n    connection.send(pres.tree());\n\n    // FIXME: Mayne it's just google hangouts, but we really want to set the status\n    // from a server message\n    bus.emit('availability-change', status);\n  };\n\n  const onSetConnection = (settings, connect) => {\n    Object.assign(proc.settings, settings);\n    proc.saveSettings();\n\n    if (connect) {\n      bus.emit('connect');\n    }\n  };\n\n  bus.on('open-connection-window', () => createConnectionWindow(core, proc, win, bus));\n  bus.on('open-chat-window', from => findOrCreateChatWindow(from).focus());\n  bus.on('send-message', msg => connection.send(msg));\n  bus.on('receive-message', onReceiveMessage);\n  bus.on('set-status', onSetStatus);\n  bus.on('set-connection', onSetConnection);\n  bus.on('connected', onConnected);\n  bus.on('disconnect', onDisconnect);\n  bus.on('connect', onConnect);\n  proc.on('destroy', onDisconnect);\n  proc.on('destroy', () => bus.off());\n  proc.on('destroy', () => tray.destroy());\n  win.on('destroy', () => proc.destroy());\n\n  if (validConnection(proc.settings)) {\n    bus.emit('connect');\n  } else {\n    bus.emit('open-connection-window');\n  }\n};\n\nconst create = (core, args, options, metadata) => {\n  const proc = core.make('osjs/application', {\n    args,\n    options: Object.assign({\n      settings: {\n        host: 'http://localhost:5280/http-bind',\n        username: 'username@gmail.com',\n        password: ''\n      }\n    }, options),\n    metadata\n  });\n\n  createApplication(core, proc);\n\n  return proc;\n};\n\nexport default create;\n","/*\n * OS.js - JavaScript Cloud/Web Desktop Platform\n *\n * Copyright (c) 2011-2020, Anders Evenrud <andersevenrud@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @author  Anders Evenrud <andersevenrud@gmail.com>\n * @licence Simplified BSD License\n */\nimport {h, app} from 'hyperapp';\nimport {\n  Box,\n  BoxContainer,\n  Button,\n  TextField,\n  Toolbar\n} from '@osjs/gui';\n\nexport const createConnectionWindow = (core, proc, parent, bus) => {\n  const win = proc.createWindow({\n    parent,\n    icon: proc.resource(proc.metadata.icon),\n    title: 'XMPP Connection Options',\n    id: 'StropheJSConnectionWindow',\n    dimension: {width: 400, height: 400},\n    attributes: {sessionable: false}\n  });\n\n  const view = (state, actions) => h(Box, {}, [\n    h(Box, {grow: 1}, [\n      h(BoxContainer, {orientation: 'horizontal'}, [\n        h('div', {}, 'Host:'),\n        h(TextField, {value: state.host, oninput: (ev, value) => actions.setHost(value)})\n      ]),\n      h(BoxContainer, {orientation: 'horizontal'}, [\n        h('div', {}, 'Username:'),\n        h(TextField, {value: state.username, oninput: (ev, value) => actions.setUsername(value)})\n      ]),\n      h(BoxContainer, {orientation: 'horizontal'}, [\n        h('div', {}, 'Password:'),\n        h(TextField, {type: 'password', value: state.password, oninput: (ev, value) => actions.setPassword(value)})\n      ])\n    ]),\n    h(Toolbar, {justify: 'flex-end'}, [\n      h(Button, {onclick: () => actions.connect()}, 'Connect'),\n      h(Button, {onclick: () => actions.close()}, 'Close')\n    ])\n  ]);\n\n  win.render($content => app(Object.assign({}, proc.settings), {\n    setHost: host => state => ({host}),\n    setUsername: username => state => ({username}),\n    setPassword: password => state => ({password}),\n    connect: () => (state) => {\n      bus.emit('set-connection', state, true);\n      win.destroy();\n    },\n    close: () => () => {\n      win.destroy();\n    }\n  }, view, $content));\n\n  win.focus();\n\n  return win;\n};\n","/*\n * OS.js - JavaScript Cloud/Web Desktop Platform\n *\n * Copyright (c) 2011-2019, Anders Evenrud <andersevenrud@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @author  Anders Evenrud <andersevenrud@gmail.com>\n * @licence Simplified BSD License\n */\n\nimport osjs from 'osjs';\nimport './index.scss';\nimport {name as applicationName} from './metadata.json';\nimport app from './src/app.js';\n\nosjs.register(applicationName, app);\n"],"sourceRoot":""}